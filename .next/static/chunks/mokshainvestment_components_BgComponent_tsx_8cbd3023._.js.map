{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Tarak/Desktop/mokshainvestment/mokshainvestment/components/BgComponent.tsx"],"sourcesContent":["  \"use client\"\r\n\r\n  import { useEffect, useRef } from \"react\"\r\n  import * as THREE from \"three\"\r\n\r\n  export function BgComponent() {\r\n    const containerRef = useRef<HTMLDivElement>(null)\r\n    const canvasRef = useRef<HTMLDivElement>(null)\r\n    // const rendererRef = useRef<THREE.WebGLRenderer | null>(null)\r\nconst rendererRef = useRef<WebGLRenderer | null>(null)\r\n\r\n    useEffect(() => {\r\n      if (!containerRef.current || !canvasRef.current) return\r\n\r\n      const vertexShader = `\r\n        varying vec2 vUv;\r\n        void main(){\r\n          vUv = uv;\r\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n        }\r\n      `\r\n\r\n      const displayShader = `\r\n        uniform float iTime;\r\n        uniform vec2 iResolution;\r\n        uniform float uDistortionAmount;\r\n        uniform vec3 uColor1;\r\n        uniform vec3 uColor2;\r\n        uniform vec3 uColor3;\r\n        uniform vec3 uColor4;\r\n        uniform float uColorIntensity;\r\n        uniform float uSoftness;\r\n        varying vec2 vUv;\r\n\r\n        void main() {\r\n          vec2 fragCoord = vUv * iResolution;\r\n          float mr = min(iResolution.x, iResolution.y);\r\n          vec2 uv = (fragCoord * 2.0 - iResolution.xy) / mr;\r\n\r\n          float d = -iTime * 0.5;\r\n          float a = 0.0;\r\n          for (float i = 0.0; i < 8.0; ++i) {\r\n            a += cos(i - d - a * uv.x);\r\n            d += sin(uv.y * i + a);\r\n          }\r\n\r\n          d += iTime * 0.5;\r\n\r\n          float mixer1 = cos(uv.x * d) * 0.5 + 0.5;\r\n          float mixer2 = cos(uv.y * a) * 0.5 + 0.5;\r\n          float mixer3 = sin(d + a) * 0.5 + 0.5;\r\n\r\n          float smoothAmount = clamp(uSoftness * 0.1, 0.0, 0.9);\r\n          mixer1 = mix(mixer1, 0.5, smoothAmount);\r\n          mixer2 = mix(mixer2, 0.5, smoothAmount);\r\n          mixer3 = mix(mixer3, 0.5, smoothAmount);\r\n\r\n          vec3 col = mix(uColor1, uColor2, mixer1);\r\n          col = mix(col, uColor3, mixer2);\r\n          col = mix(col, uColor4, mixer3 * 0.4);\r\n\r\n          col *= uColorIntensity;\r\n\r\n          // --- Adaptive transparency based on brightness ---\r\n          float luminance = dot(col, vec3(0.299, 0.587, 0.114));\r\n          float adaptiveAlpha = mix(0.25, 0.75, 1.0 - luminance);\r\n\r\n          gl_FragColor = vec4(col, adaptiveAlpha);\r\n        }\r\n      `\r\n\r\n      const camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1)\r\n      const renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true })\r\n      renderer.setClearColor(0x000000, 0) // transparent bg\r\n      rendererRef.current = renderer\r\n\r\n      renderer.setSize(window.innerWidth, window.innerHeight)\r\n      canvasRef.current.appendChild(renderer.domElement)\r\n\r\n      const displayMaterial = new THREE.ShaderMaterial({\r\n        uniforms: {\r\n          iTime: { value: 0 },\r\n          iResolution: {\r\n            value: new THREE.Vector2(window.innerWidth, window.innerHeight),\r\n          },\r\n          uDistortionAmount: { value: 2.5 },\r\n          uColor1: { value: new THREE.Vector3(0.72, 1.0, 0.96) },\r\n          uColor2: { value: new THREE.Vector3(0.43, 0.20, 0.40) },\r\n          uColor3: { value: new THREE.Vector3(0.0, 0.2, 1.0) },\r\n          uColor4: { value: new THREE.Vector3(0.4, 0.82, 0.99) },\r\n          uColorIntensity: { value: 1.0 },\r\n          uSoftness: { value: 1.0 }\r\n        },\r\n        vertexShader,\r\n        fragmentShader: displayShader,\r\n        transparent: true,\r\n      })\r\n\r\n      const geometry = new THREE.PlaneGeometry(2, 2)\r\n      const displayPlane = new THREE.Mesh(geometry, displayMaterial)\r\n\r\n      function animate() {\r\n        requestAnimationFrame(animate)\r\n        displayMaterial.uniforms.iTime.value = performance.now() * 0.001\r\n        renderer.render(displayPlane, camera)\r\n      }\r\n\r\n      const handleResize = () => {\r\n        const width = window.innerWidth\r\n        const height = window.innerHeight\r\n        renderer.setSize(width, height)\r\n        displayMaterial.uniforms.iResolution.value.set(width, height)\r\n      }\r\n\r\n      window.addEventListener(\"resize\", handleResize)\r\n      animate()\r\n\r\n      return () => {\r\n        window.removeEventListener(\"resize\", handleResize)\r\n        renderer.dispose()\r\n        geometry.dispose()\r\n        displayMaterial.dispose()\r\n        rendererRef.current = null\r\n      }\r\n    }, [])\r\n\r\n    return (\r\n      <div ref={containerRef} className=\"pointer-events-none fixed inset-0 -z-10\">\r\n        <div ref={canvasRef} className=\"absolute inset-0\" />\r\n      </div>\r\n    )\r\n  }\r\n\r\n"],"names":[],"mappings":";;;;;AAEE;AACA;AAAA;;;AAHA;;;AAKO,SAAS;;IACd,MAAM,eAAe,IAAA,2LAAM,EAAiB;IAC5C,MAAM,YAAY,IAAA,2LAAM,EAAiB;IACzC,+DAA+D;IACnE,MAAM,cAAc,IAAA,2LAAM,EAAuB;IAE7C,IAAA,8LAAS;iCAAC;YACR,IAAI,CAAC,aAAa,OAAO,IAAI,CAAC,UAAU,OAAO,EAAE;YAEjD,MAAM,eAAgB;YAQtB,MAAM,gBAAiB;YAiDvB,MAAM,SAAS,IAAI,4LAAwB,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG;YAC7D,MAAM,WAAW,IAAI,yMAAmB,CAAC;gBAAE,WAAW;gBAAM,OAAO;YAAK;YACxE,SAAS,aAAa,CAAC,UAAU,IAAG,iBAAiB;YACrD,YAAY,OAAO,GAAG;YAEtB,SAAS,OAAO,CAAC,OAAO,UAAU,EAAE,OAAO,WAAW;YACtD,UAAU,OAAO,CAAC,WAAW,CAAC,SAAS,UAAU;YAEjD,MAAM,kBAAkB,IAAI,wLAAoB,CAAC;gBAC/C,UAAU;oBACR,OAAO;wBAAE,OAAO;oBAAE;oBAClB,aAAa;wBACX,OAAO,IAAI,iLAAa,CAAC,OAAO,UAAU,EAAE,OAAO,WAAW;oBAChE;oBACA,mBAAmB;wBAAE,OAAO;oBAAI;oBAChC,SAAS;wBAAE,OAAO,IAAI,iLAAa,CAAC,MAAM,KAAK;oBAAM;oBACrD,SAAS;wBAAE,OAAO,IAAI,iLAAa,CAAC,MAAM,MAAM;oBAAM;oBACtD,SAAS;wBAAE,OAAO,IAAI,iLAAa,CAAC,KAAK,KAAK;oBAAK;oBACnD,SAAS;wBAAE,OAAO,IAAI,iLAAa,CAAC,KAAK,MAAM;oBAAM;oBACrD,iBAAiB;wBAAE,OAAO;oBAAI;oBAC9B,WAAW;wBAAE,OAAO;oBAAI;gBAC1B;gBACA;gBACA,gBAAgB;gBAChB,aAAa;YACf;YAEA,MAAM,WAAW,IAAI,uLAAmB,CAAC,GAAG;YAC5C,MAAM,eAAe,IAAI,8KAAU,CAAC,UAAU;YAE9C,SAAS;gBACP,sBAAsB;gBACtB,gBAAgB,QAAQ,CAAC,KAAK,CAAC,KAAK,GAAG,YAAY,GAAG,KAAK;gBAC3D,SAAS,MAAM,CAAC,cAAc;YAChC;YAEA,MAAM;sDAAe;oBACnB,MAAM,QAAQ,OAAO,UAAU;oBAC/B,MAAM,SAAS,OAAO,WAAW;oBACjC,SAAS,OAAO,CAAC,OAAO;oBACxB,gBAAgB,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO;gBACxD;;YAEA,OAAO,gBAAgB,CAAC,UAAU;YAClC;YAEA;yCAAO;oBACL,OAAO,mBAAmB,CAAC,UAAU;oBACrC,SAAS,OAAO;oBAChB,SAAS,OAAO;oBAChB,gBAAgB,OAAO;oBACvB,YAAY,OAAO,GAAG;gBACxB;;QACF;gCAAG,EAAE;IAEL,qBACE,iNAAC;QAAI,KAAK;QAAc,WAAU;kBAChC,cAAA,iNAAC;YAAI,KAAK;YAAW,WAAU;;;;;;;;;;;AAGrC;GA9HgB;KAAA","debugId":null}}]
}