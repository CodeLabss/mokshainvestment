{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Tarak/Desktop/mokshainvestment/mokshainvestment/app/admin/subcategories/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport supabase from \"@/utils/supabase/client\";\r\n\r\ninterface Category {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\ninterface Subcategory {\r\n  id: string;\r\n  name: string;\r\n  description: string | null;\r\n  category_id: string;\r\n  category: Category;\r\n  is_active: boolean;\r\n}\r\n\r\nconst supabase = createClient();\r\n\r\nconst SubcategoriesAdmin = () => {\r\n  const [subcategories, setSubcategories] = useState<Subcategory[]>([]);\r\n  const [categories, setCategories] = useState<Category[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [form, setForm] = useState<{ id?: string; name: string; category_id: string; description: string }>({\r\n    name: \"\",\r\n    category_id: \"\",\r\n    description: \"\",\r\n  });\r\n  const [editing, setEditing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchCategories();\r\n    fetchSubcategories();\r\n  }, []);\r\n\r\n  const fetchCategories = async () => {\r\n    const { data, error } = await supabase.from(\"insurance_categories\").select(\"*\").eq(\"is_active\", true);\r\n    if (error) return console.error(error.message);\r\n    setCategories(data as Category[]);\r\n  };\r\n\r\n  const fetchSubcategories = async () => {\r\n    setLoading(true);\r\n    const { data, error } = await supabase\r\n      .from(\"insurance_subcategories\")\r\n      .select(\"*, category:insurance_categories(id,name)\")\r\n      .eq(\"is_active\", true)\r\n      .order(\"created_at\", { ascending: false });\r\n\r\n    if (error) {\r\n      console.error(error.message);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    setSubcategories(data as Subcategory[]);\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!form.name || !form.category_id) return alert(\"Name and Category are required\");\r\n\r\n    if (editing && form.id) {\r\n      // Update\r\n      const { error } = await supabase.from(\"insurance_subcategories\").update({\r\n        name: form.name,\r\n        description: form.description,\r\n        category_id: form.category_id,\r\n      }).eq(\"id\", form.id);\r\n\r\n      if (error) return alert(error.message);\r\n    } else {\r\n      // Create\r\n      const { error } = await supabase.from(\"insurance_subcategories\").insert({\r\n        name: form.name,\r\n        description: form.description,\r\n        category_id: form.category_id,\r\n        is_active: true,\r\n      });\r\n\r\n      if (error) return alert(error.message);\r\n    }\r\n\r\n    setForm({ name: \"\", category_id: \"\", description: \"\" });\r\n    setEditing(false);\r\n    fetchSubcategories();\r\n  };\r\n\r\n  const handleEdit = (subcategory: Subcategory) => {\r\n    setForm({\r\n      id: subcategory.id,\r\n      name: subcategory.name,\r\n      category_id: subcategory.category_id,\r\n      description: subcategory.description || \"\",\r\n    });\r\n    setEditing(true);\r\n  };\r\n\r\n  const handleDelete = async (id: string) => {\r\n    if (!confirm(\"Are you sure you want to delete this subcategory?\")) return;\r\n\r\n    const { error } = await supabase.from(\"insurance_subcategories\").update({ is_active: false }).eq(\"id\", id);\r\n    if (error) return alert(error.message);\r\n\r\n    fetchSubcategories();\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-8\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Manage Subcategories</h1>\r\n\r\n      <form onSubmit={handleSubmit} className=\"mb-6 p-4 border rounded-lg bg-white shadow-sm\">\r\n        <div className=\"flex flex-col md:flex-row gap-4\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Subcategory Name\"\r\n            value={form.name}\r\n            onChange={(e) => setForm({ ...form, name: e.target.value })}\r\n            className=\"border px-3 py-2 rounded w-full\"\r\n          />\r\n          <select\r\n            value={form.category_id}\r\n            onChange={(e) => setForm({ ...form, category_id: e.target.value })}\r\n            className=\"border px-3 py-2 rounded w-full\"\r\n          >\r\n            <option value=\"\">Select Category</option>\r\n            {categories.map((cat) => (\r\n              <option key={cat.id} value={cat.id}>\r\n                {cat.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Description (optional)\"\r\n            value={form.description}\r\n            onChange={(e) => setForm({ ...form, description: e.target.value })}\r\n            className=\"border px-3 py-2 rounded w-full\"\r\n          />\r\n          <button type=\"submit\" className=\"bg-indigo-600 text-white px-4 py-2 rounded\">\r\n            {editing ? \"Update\" : \"Add\"}\r\n          </button>\r\n        </div>\r\n      </form>\r\n\r\n      {loading ? (\r\n        <p>Loading subcategories...</p>\r\n      ) : (\r\n        <table className=\"w-full border-collapse\">\r\n          <thead>\r\n            <tr className=\"bg-gray-100\">\r\n              <th className=\"border px-3 py-2 text-left\">Name</th>\r\n              <th className=\"border px-3 py-2 text-left\">Category</th>\r\n              <th className=\"border px-3 py-2 text-left\">Description</th>\r\n              <th className=\"border px-3 py-2\">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {subcategories.map((sub) => (\r\n              <tr key={sub.id} className=\"hover:bg-gray-50\">\r\n                <td className=\"border px-3 py-2\">{sub.name}</td>\r\n                <td className=\"border px-3 py-2\">{sub.category?.name}</td>\r\n                <td className=\"border px-3 py-2\">{sub.description}</td>\r\n                <td className=\"border px-3 py-2 flex gap-2 justify-center\">\r\n                  <button\r\n                    onClick={() => handleEdit(sub)}\r\n                    className=\"bg-yellow-400 text-white px-2 py-1 rounded\"\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => handleDelete(sub.id)}\r\n                    className=\"bg-red-500 text-white px-2 py-1 rounded\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubcategoriesAdmin;\r\n"],"names":[],"mappings":"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","debugId":null}}]
}