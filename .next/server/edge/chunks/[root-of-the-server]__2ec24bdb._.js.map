{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/mokshainvestment/middleware.ts"],"sourcesContent":["import { createServerClient } from '@supabase/ssr'\r\nimport { NextResponse, type NextRequest } from 'next/server'\r\n\r\nexport async function middleware(req: NextRequest) {\r\n  // const res = NextResponse.next()\r\n\r\n  // // List all cookie names your app might use for Supabase\r\n  // const cookieNames = ['sb-access-token', 'sb-refresh-token']\r\n\r\n  // const cookiesObj: Record<string, string> = {}\r\n  // cookieNames.forEach((name) => {\r\n  //   const value = req.cookies.get(name)\r\n  //   if (value) cookiesObj[name] = value\r\n  // })\r\n\r\n  // const supabase = createServerClient(\r\n  //   process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n  //   process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\r\n  //   {\r\n  //     cookies: {\r\n  //       getAll: () => cookiesObj,\r\n  //       setAll: (cookies: Record<string, string>) => {\r\n  //         Object.entries(cookies).forEach(([name, value]) => {\r\n  //           res.cookies.set(name, value, { path: '/' })\r\n  //         })\r\n  //       },\r\n  //     },\r\n  //   }\r\n  // )\r\n\r\n  // const { data: { user } } = await supabase.auth.getUser()\r\n\r\n  // const { pathname } = req.nextUrl\r\n\r\n  // if (!user && pathname === '/admin') {\r\n  //   return NextResponse.redirect(new URL('/admin/login', req.url))\r\n  // }\r\n\r\n  // if (user && pathname === '/admin/login') {\r\n  //   return NextResponse.redirect(new URL('/admin', req.url))\r\n  // }\r\n\r\n  // return res\r\n}\r\n\r\nexport const config = {\r\n  matcher: ['/admin', '/admin/login'],\r\n}\r\n"],"names":[],"mappings":";;;;;;AAGO,eAAe,WAAW,GAAgB;AAC/C,kCAAkC;AAElC,2DAA2D;AAC3D,8DAA8D;AAE9D,gDAAgD;AAChD,kCAAkC;AAClC,wCAAwC;AACxC,wCAAwC;AACxC,KAAK;AAEL,uCAAuC;AACvC,2CAA2C;AAC3C,gDAAgD;AAChD,MAAM;AACN,iBAAiB;AACjB,kCAAkC;AAClC,uDAAuD;AACvD,+DAA+D;AAC/D,wDAAwD;AACxD,aAAa;AACb,WAAW;AACX,SAAS;AACT,MAAM;AACN,IAAI;AAEJ,2DAA2D;AAE3D,mCAAmC;AAEnC,wCAAwC;AACxC,mEAAmE;AACnE,IAAI;AAEJ,6CAA6C;AAC7C,6DAA6D;AAC7D,IAAI;AAEJ,aAAa;AACf;AAEO,MAAM,SAAS;IACpB,SAAS;QAAC;QAAU;KAAe;AACrC"}}]
}