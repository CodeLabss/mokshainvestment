{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Tarak/Desktop/mokshainvestment/mokshainvestment/app/admin/page.tsx"],"sourcesContent":["\r\n// change from the above code\r\n// \"use client\";\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { createClient } from \"@supabase/supabase-js\";\r\n// import { motion } from \"framer-motion\";\r\n// import { \r\n//   FiUser, FiPhone, FiMail, FiFileText, FiClock, \r\n//   FiCheckCircle, FiXCircle, FiLogOut, FiRefreshCw,\r\n//   FiImage, FiUpload, FiPlus, FiEdit, FiTrash2,\r\n//   FiTrendingUp, FiShield, FiBarChart2, FiEye, FiEyeOff,\r\n//   FiArrowLeft, FiSearch, FiFilter\r\n// } from \"react-icons/fi\";\r\n\r\n// type LeadRow = {\r\n//   id: string;\r\n//   name: string;\r\n//   phone: string;\r\n//   email?: string;\r\n//   requirement?: string;\r\n//   notes?: string;\r\n//   is_contacted?: boolean;\r\n//   created_at?: string;\r\n// };\r\n\r\n// type NFOData = {\r\n//   id: string;\r\n//   title: string;\r\n//   description: string | null;\r\n//   start_date: string | null;\r\n//   end_date: string | null;\r\n//   image_url: string | null;\r\n//   created_at: string;\r\n// };\r\n\r\n// type BondsNCD = {\r\n//   id: string;\r\n//   company_name: string;\r\n//   issue_size: string | null;\r\n//   interest_rate: number | null;\r\n//   tenure: string | null;\r\n//   image_url: string | null;\r\n//   chart_data: any | null;\r\n//   created_at: string;\r\n// };\r\n\r\n// type BondsFD = {\r\n//   id: string;\r\n//   bank_name: string;\r\n//   interest_rate: number | null;\r\n//   tenure: string | null;\r\n//   image_url: string | null;\r\n//   chart_data: any | null;\r\n//   created_at: string;\r\n// };\r\n\r\n// // Initialize Supabase client only once\r\n// const supabase = createClient(\r\n//   process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n//   process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\r\n// );\r\n\r\n// export default function AdminDashboardPage() {\r\n//   const [leads, setLeads] = useState<LeadRow[]>([]);\r\n//   const [nfoData, setNfoData] = useState<NFOData[]>([]);\r\n//   const [bondsNCD, setBondsNCD] = useState<BondsNCD[]>([]);\r\n//   const [bondsFD, setBondsFD] = useState<BondsFD[]>([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [refreshing, setRefreshing] = useState(false);\r\n//   const [userEmail, setUserEmail] = useState<string>(\"\");\r\n//   const [activeTab, setActiveTab] = useState<'leads' | 'contacted' | 'nfo' | 'bondsNCD' | 'bondsFD'>('leads');\r\n//   const [isCheckingAuth, setIsCheckingAuth] = useState(true);\r\n//   const [authDebug, setAuthDebug] = useState<string[]>([]);\r\n//   const [expandedRequirement, setExpandedRequirement] = useState<string | null>(null);\r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n//   const [filterRequirement, setFilterRequirement] = useState(\"\");\r\n  \r\n//   // NFO Form State\r\n//   const [nfoForm, setNfoForm] = useState({\r\n//     title: '',\r\n//     description: '',\r\n//     start_date: '',\r\n//     end_date: '',\r\n//     image_file: null as File | null\r\n//   });\r\n\r\n//   // Bonds NCD Form State\r\n//   const [bondsNCDForm, setBondsNCDForm] = useState({\r\n//     company_name: '',\r\n//     issue_size: '',\r\n//     interest_rate: '',\r\n//     tenure: '',\r\n//     image_file: null as File | null\r\n//   });\r\n\r\n//   // Bonds FD Form State\r\n//   const [bondsFDForm, setBondsFDForm] = useState({\r\n//     bank_name: '',\r\n//     interest_rate: '',\r\n//     tenure: '',\r\n//     image_file: null as File | null\r\n//   });\r\n\r\n//   const [uploading, setUploading] = useState(false);\r\n//   const [editingId, setEditingId] = useState<string | null>(null);\r\n//   const [editingType, setEditingType] = useState<'nfo' | 'ncd' | 'fd' | null>(null);\r\n//   const [showForm, setShowForm] = useState(false);\r\n//   const [formErrors, setFormErrors] = useState<string[]>([]);\r\n//   const [debugInfo, setDebugInfo] = useState<string[]>([]);\r\n\r\n//   const addDebugInfo = (message: string) => {\r\n//     console.log(`🔍 ${message}`);\r\n//     setDebugInfo(prev => [...prev.slice(-9), `${new Date().toLocaleTimeString()}: ${message}`]);\r\n//   };\r\n\r\n//   const addAuthDebug = (message: string) => {\r\n//     console.log(`🔐 ${message}`);\r\n//     setAuthDebug(prev => [...prev.slice(-9), `${new Date().toLocaleTimeString()}: ${message}`]);\r\n//   };\r\n\r\n//   // Authentication check\r\n//   useEffect(() => {\r\n//     const checkAuth = async () => {\r\n//       try {\r\n//         addAuthDebug(\"Starting authentication check...\");\r\n        \r\n//         // Get the current session\r\n//         const { data: { session }, error } = await supabase.auth.getSession();\r\n        \r\n//         if (error) {\r\n//           addAuthDebug(`Session check error: ${error.message}`);\r\n//           console.error(\"❌ Session check error:\", error);\r\n//           window.location.href = \"/admin/login\";\r\n//           return;\r\n//         }\r\n        \r\n//         if (!session) {\r\n//           addAuthDebug(\"No session found, redirecting to login\");\r\n//           console.log(\"❌ No session found, redirecting to login\");\r\n//           window.location.href = \"/admin/login\";\r\n//           return;\r\n//         }\r\n        \r\n//         addAuthDebug(`Session found for user: ${session.user?.email}`);\r\n//         console.log(\"✅ Session found, user is authenticated\");\r\n//         setUserEmail(session.user?.email || \"\");\r\n//         setIsCheckingAuth(false);\r\n        \r\n//         // Now fetch the data\r\n//         addAuthDebug(\"Fetching dashboard data...\");\r\n//         await Promise.all([\r\n//           fetchLeads(),\r\n//           fetchNFOData(),\r\n//           fetchBondsNCD(),\r\n//           fetchBondsFD()\r\n//         ]);\r\n        \r\n//         addAuthDebug(\"Dashboard data loaded successfully\");\r\n        \r\n//       } catch (error: any) {\r\n//         addAuthDebug(`Auth check failed: ${error.message}`);\r\n//         console.error(\"❌ Auth check failed:\", error);\r\n//         window.location.href = \"/admin/login\";\r\n//       }\r\n//     };\r\n    \r\n//     checkAuth();\r\n//   }, []);\r\n\r\n//   // Add session state listener\r\n//   useEffect(() => {\r\n//     const {\r\n//       data: { subscription },\r\n//     } = supabase.auth.onAuthStateChange((event, session) => {\r\n//       addAuthDebug(`Auth state changed: ${event}`);\r\n//       console.log(\"🔐 Auth state changed:\", event);\r\n      \r\n//       if (event === 'SIGNED_OUT') {\r\n//         addAuthDebug(\"User signed out, redirecting to login\");\r\n//         window.location.href = \"/admin/login\";\r\n//       }\r\n      \r\n//       if (event === 'SIGNED_IN') {\r\n//         addAuthDebug(\"User signed in, updating email\");\r\n//         setUserEmail(session?.user?.email || \"\");\r\n//         setIsCheckingAuth(false);\r\n//       }\r\n\r\n//       if (event === 'TOKEN_REFRESHED') {\r\n//         addAuthDebug(\"Token refreshed successfully\");\r\n//       }\r\n//     });\r\n\r\n//     return () => subscription.unsubscribe();\r\n//   }, []);\r\n\r\n//   // Filtered leads based on active tab and search\r\n//   const filteredLeads = leads.filter(lead => {\r\n//     const matchesSearch = \r\n//       lead.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n//       lead.phone.includes(searchTerm) ||\r\n//       (lead.email && lead.email.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n//       (lead.requirement && lead.requirement.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n//       (lead.notes && lead.notes.toLowerCase().includes(searchTerm.toLowerCase()));\r\n\r\n//     const matchesRequirement = !filterRequirement || lead.requirement === filterRequirement;\r\n    \r\n//     if (activeTab === 'leads') {\r\n//       return !lead.is_contacted && matchesSearch && matchesRequirement;\r\n//     } else if (activeTab === 'contacted') {\r\n//       return lead.is_contacted && matchesSearch && matchesRequirement;\r\n//     }\r\n    \r\n//     return matchesSearch && matchesRequirement;\r\n//   });\r\n\r\n//   // Show loading while checking authentication\r\n//   if (isCheckingAuth) {\r\n//     return (\r\n//       <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 flex items-center justify-center\">\r\n//         <div className=\"text-center\">\r\n//           <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-amber-400 mx-auto mb-4\"></div>\r\n//           <p className=\"text-slate-300 text-lg\">Verifying access...</p>\r\n//           <p className=\"text-slate-400 text-sm mt-2\">Checking authentication status</p>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   // Show loading while fetching data\r\n//   if (loading && !isCheckingAuth) {\r\n//     return (\r\n//       <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 flex items-center justify-center\">\r\n//         <div className=\"text-center\">\r\n//           <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-amber-400 mx-auto mb-4\"></div>\r\n//           <p className=\"text-slate-300 text-lg\">Loading dashboard...</p>\r\n//           <p className=\"text-slate-400 text-sm mt-2\">Fetching your data</p>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   async function fetchLeads() {\r\n//     try {\r\n//       setLoading(true);\r\n//       addDebugInfo(\"Fetching leads...\");\r\n//       const { data, error } = await supabase\r\n//         .from('leads')\r\n//         .select('*')\r\n//         .order('created_at', { ascending: false });\r\n\r\n//       if (error) {\r\n//         addDebugInfo(`Leads fetch error: ${error.message}`);\r\n//         console.error('Error fetching leads:', error);\r\n//       } else {\r\n//         addDebugInfo(`Fetched ${data?.length || 0} leads`);\r\n//         setLeads(data || []);\r\n//       }\r\n//     } catch (error: any) {\r\n//       addDebugInfo(`Leads fetch exception: ${error.message}`);\r\n//       console.error('Error in fetchLeads:', error);\r\n//     } finally {\r\n//       setLoading(false);\r\n//       setRefreshing(false);\r\n//     }\r\n//   }\r\n\r\n//   async function fetchNFOData() {\r\n//     try {\r\n//       addDebugInfo(\"Fetching NFO data...\");\r\n//       const { data, error } = await supabase\r\n//         .from('upcoming_nfo')\r\n//         .select('*')\r\n//         .order('start_date', { ascending: true });\r\n\r\n//       if (error) {\r\n//         addDebugInfo(`NFO fetch error: ${error.message}`);\r\n//         console.error('Error fetching NFO data:', error);\r\n//       } else {\r\n//         addDebugInfo(`Fetched ${data?.length || 0} NFOs`);\r\n//         setNfoData(data || []);\r\n//       }\r\n//     } catch (error: any) {\r\n//       addDebugInfo(`NFO fetch exception: ${error.message}`);\r\n//       console.error('Error in fetchNFOData:', error);\r\n//     }\r\n//   }\r\n\r\n//   async function fetchBondsNCD() {\r\n//     try {\r\n//       addDebugInfo(\"Fetching Bonds NCD data...\");\r\n//       const { data, error } = await supabase\r\n//         .from('bonds_ncd')\r\n//         .select('*')\r\n//         .order('created_at', { ascending: false });\r\n\r\n//       if (error) {\r\n//         addDebugInfo(`Bonds NCD fetch error: ${error.message}`);\r\n//         console.error('Error fetching Bonds NCD data:', error);\r\n//       } else {\r\n//         addDebugInfo(`Fetched ${data?.length || 0} Bonds NCD`);\r\n//         setBondsNCD(data || []);\r\n//       }\r\n//     } catch (error: any) {\r\n//       addDebugInfo(`Bonds NCD fetch exception: ${error.message}`);\r\n//       console.error('Error in fetchBondsNCD:', error);\r\n//     }\r\n//   }\r\n\r\n//   async function fetchBondsFD() {\r\n//     try {\r\n//       addDebugInfo(\"Fetching Bonds FD data...\");\r\n//       const { data, error } = await supabase\r\n//         .from('bonds_fd')\r\n//         .select('*')\r\n//         .order('created_at', { ascending: false });\r\n\r\n//       if (error) {\r\n//         addDebugInfo(`Bonds FD fetch error: ${error.message}`);\r\n//         console.error('Error fetching Bonds FD data:', error);\r\n//       } else {\r\n//         addDebugInfo(`Fetched ${data?.length || 0} Bonds FD`);\r\n//         setBondsFD(data || []);\r\n//       }\r\n//     } catch (error: any) {\r\n//       addDebugInfo(`Bonds FD fetch exception: ${error.message}`);\r\n//       console.error('Error in fetchBondsFD:', error);\r\n//     }\r\n//   }\r\n\r\n//   async function handleRefresh() {\r\n//     setRefreshing(true);\r\n//     addDebugInfo(\"Manual refresh triggered\");\r\n//     await fetchLeads();\r\n//     await fetchNFOData();\r\n//     await fetchBondsNCD();\r\n//     await fetchBondsFD();\r\n//   }\r\n\r\n//   async function toggleContactStatus(leadId: string, currentStatus: boolean) {\r\n//     try {\r\n//       addDebugInfo(`Toggling contact status for lead ${leadId}`);\r\n//       const { error } = await supabase\r\n//         .from('leads')\r\n//         .update({ is_contacted: !currentStatus })\r\n//         .eq('id', leadId);\r\n\r\n//       if (error) {\r\n//         addDebugInfo(`Contact status update error: ${error.message}`);\r\n//         console.error('Error updating lead:', error);\r\n//       } else {\r\n//         addDebugInfo(\"Contact status updated successfully\");\r\n//         setLeads(leads.map(lead => \r\n//           lead.id === leadId \r\n//             ? { ...lead, is_contacted: !currentStatus }\r\n//             : lead\r\n//         ));\r\n//       }\r\n//     } catch (error: any) {\r\n//       addDebugInfo(`Contact status exception: ${error.message}`);\r\n//       console.error('Error toggling contact status:', error);\r\n//     }\r\n//   }\r\n\r\n//   // Image Upload Function\r\n//   const handleImageUpload = async (file: File, bucket: string): Promise<string> => {\r\n//     const fileExt = file.name.split('.').pop();\r\n//     const fileName = `${Math.random().toString(36).substring(2)}_${Date.now()}.${fileExt}`;\r\n//     const filePath = fileName;\r\n\r\n//     addDebugInfo(`Uploading image to ${bucket}: ${fileName} (${file.size} bytes)`);\r\n\r\n//     const { data, error: uploadError } = await supabase.storage\r\n//       .from(bucket)\r\n//       .upload(filePath, file, {\r\n//         cacheControl: '3600',\r\n//         upsert: false\r\n//       });\r\n\r\n//     if (uploadError) {\r\n//       addDebugInfo(`Image upload failed: ${uploadError.message}`);\r\n//       console.error(\"❌ Storage upload error:\", uploadError);\r\n//       throw new Error(`Failed to upload image: ${uploadError.message}`);\r\n//     }\r\n\r\n//     addDebugInfo(\"Image uploaded successfully\");\r\n//     console.log(\"✅ Image uploaded successfully:\", data?.path);\r\n//     return fileName;\r\n//   };\r\n\r\n//   // NFO Management Functions\r\n//   const validateNFOForm = (): boolean => {\r\n//     const errors: string[] = [];\r\n\r\n//     if (!nfoForm.title.trim()) {\r\n//       errors.push('Title is required');\r\n//     }\r\n\r\n//     if (!editingId && !nfoForm.image_file) {\r\n//       errors.push('Image is required for new NFOs');\r\n//     }\r\n\r\n//     if (nfoForm.image_file) {\r\n//       const validTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'];\r\n//       if (!validTypes.includes(nfoForm.image_file.type)) {\r\n//         errors.push('Please upload a valid image (JPEG, PNG, or WebP)');\r\n//       }\r\n      \r\n//       if (nfoForm.image_file.size > 5 * 1024 * 1024) {\r\n//         errors.push('Image size should be less than 5MB');\r\n//       }\r\n//     }\r\n\r\n//     setFormErrors(errors);\r\n//     if (errors.length > 0) {\r\n//       addDebugInfo(`NFO Form validation failed: ${errors.join(', ')}`);\r\n//     }\r\n//     return errors.length === 0;\r\n//   };\r\n\r\n//   const handleNfoSubmit = async (e: React.FormEvent) => {\r\n//     e.preventDefault();\r\n//     addDebugInfo(\"NFO form submission started\");\r\n    \r\n//     if (!validateNFOForm()) {\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       setUploading(true);\r\n//       setFormErrors([]);\r\n      \r\n//       let imageFileName = null;\r\n\r\n//       if (nfoForm.image_file) {\r\n//         try {\r\n//           imageFileName = await handleImageUpload(nfoForm.image_file, 'nfo-images');\r\n//         } catch (uploadError: any) {\r\n//           addDebugInfo(`Image upload error in submit: ${uploadError.message}`);\r\n//           setFormErrors([`Image upload failed: ${uploadError.message}`]);\r\n//           setUploading(false);\r\n//           return;\r\n//         }\r\n//       } else if (editingId) {\r\n//         const existingNfo = nfoData.find(nfo => nfo.id === editingId);\r\n//         imageFileName = existingNfo?.image_url || null;\r\n//         addDebugInfo(`Using existing image: ${imageFileName}`);\r\n//       }\r\n\r\n//       const nfoDataToSave = {\r\n//         title: nfoForm.title,\r\n//         description: nfoForm.description || null,\r\n//         start_date: nfoForm.start_date || null,\r\n//         end_date: nfoForm.end_date || null,\r\n//         image_url: imageFileName,\r\n//       };\r\n\r\n//       addDebugInfo(`Saving NFO data: ${JSON.stringify(nfoDataToSave)}`);\r\n\r\n//       let result;\r\n//       if (editingId) {\r\n//         addDebugInfo(`Updating existing NFO: ${editingId}`);\r\n//         result = await supabase\r\n//           .from('upcoming_nfo')\r\n//           .update(nfoDataToSave)\r\n//           .eq('id', editingId);\r\n//       } else {\r\n//         addDebugInfo(\"Creating new NFO\");\r\n//         result = await supabase\r\n//           .from('upcoming_nfo')\r\n//           .insert([{\r\n//             ...nfoDataToSave,\r\n//             created_at: new Date().toISOString()\r\n//           }]);\r\n//       }\r\n\r\n//       if (result.error) {\r\n//         addDebugInfo(`Database operation failed: ${result.error.message}`);\r\n//         throw new Error(result.error.message);\r\n//       }\r\n\r\n//       addDebugInfo(\"NFO saved successfully\");\r\n//       resetForm();\r\n//       await fetchNFOData();\r\n//       alert(editingId ? 'NFO updated successfully!' : 'NFO created successfully!');\r\n      \r\n//     } catch (error: any) {\r\n//       addDebugInfo(`NFO submission failed: ${error.message}`);\r\n//       setFormErrors([error.message]);\r\n//     } finally {\r\n//       setUploading(false);\r\n//     }\r\n//   };\r\n\r\n//   // Bonds NCD Management Functions\r\n//   const validateBondsNCDForm = (): boolean => {\r\n//     const errors: string[] = [];\r\n\r\n//     if (!bondsNCDForm.company_name.trim()) {\r\n//       errors.push('Company name is required');\r\n//     }\r\n\r\n//     if (!editingId && !bondsNCDForm.image_file) {\r\n//       errors.push('Image is required for new NCDs');\r\n//     }\r\n\r\n//     if (bondsNCDForm.image_file) {\r\n//       const validTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'];\r\n//       if (!validTypes.includes(bondsNCDForm.image_file.type)) {\r\n//         errors.push('Please upload a valid image (JPEG, PNG, or WebP)');\r\n//       }\r\n      \r\n//       if (bondsNCDForm.image_file.size > 5 * 1024 * 1024) {\r\n//         errors.push('Image size should be less than 5MB');\r\n//       }\r\n//     }\r\n\r\n//     setFormErrors(errors);\r\n//     return errors.length === 0;\r\n//   };\r\n\r\n//   const handleBondsNCDSubmit = async (e: React.FormEvent) => {\r\n//     e.preventDefault();\r\n//     addDebugInfo(\"Bonds NCD form submission started\");\r\n    \r\n//     if (!validateBondsNCDForm()) {\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       setUploading(true);\r\n//       setFormErrors([]);\r\n      \r\n//       let imageFileName = null;\r\n\r\n//       if (bondsNCDForm.image_file) {\r\n//         try {\r\n//           imageFileName = await handleImageUpload(bondsNCDForm.image_file, 'bonds-images');\r\n//         } catch (uploadError: any) {\r\n//           setFormErrors([`Image upload failed: ${uploadError.message}`]);\r\n//           setUploading(false);\r\n//           return;\r\n//         }\r\n//       } else if (editingId) {\r\n//         const existingNCD = bondsNCD.find(ncd => ncd.id === editingId);\r\n//         imageFileName = existingNCD?.image_url || null;\r\n//       }\r\n\r\n//       const ncdDataToSave = {\r\n//         company_name: bondsNCDForm.company_name,\r\n//         issue_size: bondsNCDForm.issue_size || null,\r\n//         interest_rate: bondsNCDForm.interest_rate ? parseFloat(bondsNCDForm.interest_rate) : null,\r\n//         tenure: bondsNCDForm.tenure || null,\r\n//         image_url: imageFileName,\r\n//       };\r\n\r\n//       let result;\r\n//       if (editingId) {\r\n//         result = await supabase\r\n//           .from('bonds_ncd')\r\n//           .update(ncdDataToSave)\r\n//           .eq('id', editingId);\r\n//       } else {\r\n//         result = await supabase\r\n//           .from('bonds_ncd')\r\n//           .insert([{\r\n//             ...ncdDataToSave,\r\n//             created_at: new Date().toISOString()\r\n//           }]);\r\n//       }\r\n\r\n//       if (result.error) throw new Error(result.error.message);\r\n\r\n//       resetForm();\r\n//       await fetchBondsNCD();\r\n//       alert(editingId ? 'NCD updated successfully!' : 'NCD created successfully!');\r\n      \r\n//     } catch (error: any) {\r\n//       setFormErrors([error.message]);\r\n//     } finally {\r\n//       setUploading(false);\r\n//     }\r\n//   };\r\n\r\n//   // Bonds FD Management Functions\r\n//   const validateBondsFDForm = (): boolean => {\r\n//     const errors: string[] = [];\r\n\r\n//     if (!bondsFDForm.bank_name.trim()) {\r\n//       errors.push('Bank name is required');\r\n//     }\r\n\r\n//     if (!editingId && !bondsFDForm.image_file) {\r\n//       errors.push('Image is required for new FDs');\r\n//     }\r\n\r\n//     if (bondsFDForm.image_file) {\r\n//       const validTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'];\r\n//       if (!validTypes.includes(bondsFDForm.image_file.type)) {\r\n//         errors.push('Please upload a valid image (JPEG, PNG, or WebP)');\r\n//       }\r\n      \r\n//       if (bondsFDForm.image_file.size > 5 * 1024 * 1024) {\r\n//         errors.push('Image size should be less than 5MB');\r\n//       }\r\n//     }\r\n\r\n//     setFormErrors(errors);\r\n//     return errors.length === 0;\r\n//   };\r\n\r\n//   const handleBondsFDSubmit = async (e: React.FormEvent) => {\r\n//     e.preventDefault();\r\n//     addDebugInfo(\"Bonds FD form submission started\");\r\n    \r\n//     if (!validateBondsFDForm()) {\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       setUploading(true);\r\n//       setFormErrors([]);\r\n      \r\n//       let imageFileName = null;\r\n\r\n//       if (bondsFDForm.image_file) {\r\n//         try {\r\n//           imageFileName = await handleImageUpload(bondsFDForm.image_file, 'bonds-images');\r\n//         } catch (uploadError: any) {\r\n//           setFormErrors([`Image upload failed: ${uploadError.message}`]);\r\n//           setUploading(false);\r\n//           return;\r\n//         }\r\n//       } else if (editingId) {\r\n//         const existingFD = bondsFD.find(fd => fd.id === editingId);\r\n//         imageFileName = existingFD?.image_url || null;\r\n//       }\r\n\r\n//       const fdDataToSave = {\r\n//         bank_name: bondsFDForm.bank_name,\r\n//         interest_rate: bondsFDForm.interest_rate ? parseFloat(bondsFDForm.interest_rate) : null,\r\n//         tenure: bondsFDForm.tenure || null,\r\n//         image_url: imageFileName,\r\n//       };\r\n\r\n//       let result;\r\n//       if (editingId) {\r\n//         result = await supabase\r\n//           .from('bonds_fd')\r\n//           .update(fdDataToSave)\r\n//           .eq('id', editingId);\r\n//       } else {\r\n//         result = await supabase\r\n//           .from('bonds_fd')\r\n//           .insert([{\r\n//             ...fdDataToSave,\r\n//             created_at: new Date().toISOString()\r\n//           }]);\r\n//       }\r\n\r\n//       if (result.error) throw new Error(result.error.message);\r\n\r\n//       resetForm();\r\n//       await fetchBondsFD();\r\n//       alert(editingId ? 'FD updated successfully!' : 'FD created successfully!');\r\n      \r\n//     } catch (error: any) {\r\n//       setFormErrors([error.message]);\r\n//     } finally {\r\n//       setUploading(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleEdit = (item: any, type: 'nfo' | 'ncd' | 'fd') => {\r\n//     addDebugInfo(`Editing ${type}: ${item.title || item.company_name || item.bank_name}`);\r\n    \r\n//     if (type === 'nfo') {\r\n//       setNfoForm({\r\n//         title: item.title,\r\n//         description: item.description || '',\r\n//         start_date: item.start_date ? item.start_date.split('T')[0] : '',\r\n//         end_date: item.end_date ? item.end_date.split('T')[0] : '',\r\n//         image_file: null\r\n//       });\r\n//     } else if (type === 'ncd') {\r\n//       setBondsNCDForm({\r\n//         company_name: item.company_name,\r\n//         issue_size: item.issue_size || '',\r\n//         interest_rate: item.interest_rate?.toString() || '',\r\n//         tenure: item.tenure || '',\r\n//         image_file: null\r\n//       });\r\n//     } else if (type === 'fd') {\r\n//       setBondsFDForm({\r\n//         bank_name: item.bank_name,\r\n//         interest_rate: item.interest_rate?.toString() || '',\r\n//         tenure: item.tenure || '',\r\n//         image_file: null\r\n//       });\r\n//     }\r\n\r\n//     setEditingId(item.id);\r\n//     setEditingType(type);\r\n//     setShowForm(true);\r\n//     setFormErrors([]);\r\n//   };\r\n\r\n//   const handleDelete = async (id: string, type: 'nfo' | 'ncd' | 'fd') => {\r\n//     if (!confirm('Are you sure you want to delete this item?')) return;\r\n\r\n//     try {\r\n//       addDebugInfo(`Deleting ${type}: ${id}`);\r\n//       const tableName = type === 'nfo' ? 'upcoming_nfo' : type === 'ncd' ? 'bonds_ncd' : 'bonds_fd';\r\n      \r\n//       const { error } = await supabase\r\n//         .from(tableName)\r\n//         .delete()\r\n//         .eq('id', id);\r\n\r\n//       if (error) throw error;\r\n\r\n//       // Refresh the appropriate data\r\n//       if (type === 'nfo') await fetchNFOData();\r\n//       else if (type === 'ncd') await fetchBondsNCD();\r\n//       else if (type === 'fd') await fetchBondsFD();\r\n      \r\n//       alert('Item deleted successfully!');\r\n//     } catch (error: any) {\r\n//       console.error('Error deleting item:', error);\r\n//       alert(`Error deleting item: ${error.message || 'Please try again.'}`);\r\n//     }\r\n//   };\r\n\r\n//   const resetForm = () => {\r\n//     setNfoForm({\r\n//       title: '',\r\n//       description: '',\r\n//       start_date: '',\r\n//       end_date: '',\r\n//       image_file: null\r\n//     });\r\n//     setBondsNCDForm({\r\n//       company_name: '',\r\n//       issue_size: '',\r\n//       interest_rate: '',\r\n//       tenure: '',\r\n//       image_file: null\r\n//     });\r\n//     setBondsFDForm({\r\n//       bank_name: '',\r\n//       interest_rate: '',\r\n//       tenure: '',\r\n//       image_file: null\r\n//     });\r\n//     setEditingId(null);\r\n//     setEditingType(null);\r\n//     setShowForm(false);\r\n//     setFormErrors([]);\r\n//   };\r\n\r\n//   const handleNewClick = (type: 'nfo' | 'ncd' | 'fd') => {\r\n//     resetForm();\r\n//     setEditingType(type);\r\n//     setShowForm(true);\r\n//   };\r\n\r\n//   const getImageUrl = (imagePath: string | null, bucket: string) => {\r\n//     if (!imagePath) return null;\r\n    \r\n//     let filename = imagePath;\r\n//     if (filename.includes('/')) {\r\n//       filename = filename.split('/').pop() || filename;\r\n//     }\r\n//     filename = filename.replace(`${bucket}/`, '');\r\n    \r\n//     const { data } = supabase.storage\r\n//       .from(bucket)\r\n//       .getPublicUrl(filename);\r\n    \r\n//     return data.publicUrl;\r\n//   };\r\n\r\n//   async function handleSignOut() {\r\n//     try {\r\n//       addAuthDebug(\"User initiated sign out\");\r\n//       const { error } = await supabase.auth.signOut();\r\n//       if (error) {\r\n//         console.error(\"Error signing out:\", error.message);\r\n//         return;\r\n//       }\r\n//       // The auth state change listener will handle the redirect\r\n//     } catch (error: any) {\r\n//       console.error(\"Sign out error:\", error);\r\n//     }\r\n//   }\r\n\r\n//   // Stats calculations\r\n//   const totalLeads = leads.length;\r\n//   const contactedLeads = leads.filter(lead => lead.is_contacted).length;\r\n//   const newLeads = totalLeads - contactedLeads;\r\n//   const contactRate = totalLeads > 0 ? (contactedLeads / totalLeads) * 100 : 0;\r\n\r\n//   // Requirement statistics - FIXED VERSION\r\n//   const getRequirementStats = () => {\r\n//     const requirementCounts: { [key: string]: number } = {};\r\n    \r\n//     leads.forEach(lead => {\r\n//       if (lead.requirement && lead.requirement.trim()) {\r\n//         const requirement = lead.requirement.trim();\r\n//         requirementCounts[requirement] = (requirementCounts[requirement] || 0) + 1;\r\n//       }\r\n//     });\r\n    \r\n//     return requirementCounts;\r\n//   };\r\n\r\n//   const requirementStats = getRequirementStats();\r\n//   const topRequirement = Object.entries(requirementStats).sort((a, b) => b[1] - a[1])[0];\r\n//   const uniqueRequirements = Object.keys(requirementStats).length;\r\n\r\n//   // Get unique requirements for filter dropdown - FIXED: Removed duplicate definition\r\n//   const uniqueRequirementsList = Object.keys(requirementStats);\r\n\r\n//   const formatDate = (dateString: string) => {\r\n//     return new Date(dateString).toLocaleDateString('en-US', {\r\n//       year: 'numeric',\r\n//       month: 'short',\r\n//       day: 'numeric',\r\n//       hour: '2-digit',\r\n//       minute: '2-digit'\r\n//     });\r\n//   };\r\n\r\n//   const getRequirementColor = (requirement: string) => {\r\n//     const colors: { [key: string]: string } = {\r\n//       'Insurance': 'bg-blue-500/20 text-blue-400 border-blue-500/30',\r\n//       'Mediclaim': 'bg-green-500/20 text-green-400 border-green-500/30',\r\n//       'Loan': 'bg-purple-500/20 text-purple-400 border-purple-500/30',\r\n//       'Mutual Funds': 'bg-amber-500/20 text-amber-400 border-amber-500/30',\r\n//       'SIP': 'bg-indigo-500/20 text-indigo-400 border-indigo-500/30',\r\n//       'Pension Planning': 'bg-pink-500/20 text-pink-400 border-pink-500/30',\r\n//       'Child Plans': 'bg-cyan-500/20 text-cyan-400 border-cyan-500/30',\r\n//       'Wealth Advisory': 'bg-orange-500/20 text-orange-400 border-orange-500/30',\r\n//       'Tax Saving': 'bg-red-500/20 text-red-400 border-red-500/30',\r\n//       'Retirement Planning': 'bg-teal-500/20 text-teal-400 border-teal-500/30',\r\n//       'Health Insurance': 'bg-emerald-500/20 text-emerald-400 border-emerald-500/30',\r\n//       'Life Insurance': 'bg-sky-500/20 text-sky-400 border-sky-500/30',\r\n//       'Car Insurance': 'bg-violet-500/20 text-violet-400 border-violet-500/30',\r\n//       'Home Insurance': 'bg-rose-500/20 text-rose-400 border-rose-500/30',\r\n//       'Investment': 'bg-lime-500/20 text-lime-400 border-lime-500/30',\r\n//       'Savings': 'bg-fuchsia-500/20 text-fuchsia-400 border-fuchsia-500/30'\r\n//     };\r\n    \r\n//     // Try exact match first\r\n//     if (colors[requirement]) {\r\n//       return colors[requirement];\r\n//     }\r\n    \r\n//     // Try partial matches for flexibility\r\n//     const requirementLower = requirement.toLowerCase();\r\n//     for (const [key, value] of Object.entries(colors)) {\r\n//       if (requirementLower.includes(key.toLowerCase())) {\r\n//         return value;\r\n//       }\r\n//     }\r\n    \r\n//     // Default color for unknown requirements\r\n//     return 'bg-gray-500/20 text-gray-400 border-gray-500/30';\r\n//   };\r\n\r\n//   // Render appropriate form based on editingType\r\n//   const renderForm = () => {\r\n//     if (!showForm && !editingType) return null;\r\n\r\n//     const formConfig = {\r\n//       nfo: {\r\n//         title: editingId ? 'Edit NFO' : 'Add New NFO',\r\n//         onSubmit: handleNfoSubmit,\r\n//         fields: (\r\n//           <>\r\n//             <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n//               <div>\r\n//                 <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n//                   NFO Title *\r\n//                 </label>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   value={nfoForm.title}\r\n//                   onChange={(e) => setNfoForm({...nfoForm, title: e.target.value})}\r\n//                   className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white placeholder-slate-400 focus:outline-none focus:border-amber-500/50 transition-colors\"\r\n//                   placeholder=\"Enter NFO title\"\r\n//                   required\r\n//                 />\r\n//               </div>\r\n\r\n//               <div>\r\n//                 <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n//                   Image {!editingId && '*'}\r\n//                 </label>\r\n//                 <input\r\n//                   type=\"file\"\r\n//                   accept=\"image/jpeg, image/jpg, image/png, image/webp\"\r\n//                   onChange={(e) => {\r\n//                     setNfoForm({...nfoForm, image_file: e.target.files?.[0] || null});\r\n//                     setFormErrors([]);\r\n//                   }}\r\n//                   className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white file:mr-4 file:py-2 file:px-4 file:rounded-lg file:border-0 file:text-sm file:font-medium file:bg-amber-500/20 file:text-amber-400 hover:file:bg-amber-500/30 transition-colors\"\r\n//                   required={!editingId}\r\n//                 />\r\n//                 <p className=\"text-slate-400 text-xs mt-2\">\r\n//                   Required for new NFOs. Max 5MB. Supported: JPEG, PNG, WebP\r\n//                   {editingId && (\r\n//                     <span className=\"text-amber-400 ml-1\">(Leave empty to keep current image)</span>\r\n//                   )}\r\n//                 </p>\r\n//               </div>\r\n//             </div>\r\n\r\n//             <div>\r\n//               <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n//                 Description\r\n//               </label>\r\n//               <textarea\r\n//                 value={nfoForm.description}\r\n//                 onChange={(e) => setNfoForm({...nfoForm, description: e.target.value})}\r\n//                 rows={3}\r\n//                 className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white placeholder-slate-400 focus:outline-none focus:border-amber-500/50 transition-colors\"\r\n//                 placeholder=\"Enter NFO description...\"\r\n//               />\r\n//             </div>\r\n\r\n//             <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n//               <div>\r\n//                 <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n//                   Start Date\r\n//                 </label>\r\n//                 <input\r\n//                   type=\"date\"\r\n//                   value={nfoForm.start_date}\r\n//                   onChange={(e) => setNfoForm({...nfoForm, start_date: e.target.value})}\r\n//                   className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white focus:outline-none focus:border-amber-500/50 transition-colors\"\r\n//                 />\r\n//               </div>\r\n\r\n//               <div>\r\n//                 <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n//                   End Date\r\n//                 </label>\r\n//                 <input\r\n//                   type=\"date\"\r\n//                   value={nfoForm.end_date}\r\n//                   onChange={(e) => setNfoForm({...nfoForm, end_date: e.target.value})}\r\n//                   className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white focus:outline-none focus:border-amber-500/50 transition-colors\"\r\n//                 />\r\n//               </div>\r\n//             </div>\r\n//           </>\r\n//         )\r\n//       },\r\n//       ncd: {\r\n//         title: editingId ? 'Edit NCD' : 'Add New NCD',\r\n//         onSubmit: handleBondsNCDSubmit,\r\n//         fields: (\r\n//           <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n//             <div>\r\n//               <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n//                 Company Name *\r\n//               </label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 value={bondsNCDForm.company_name}\r\n//                 onChange={(e) => setBondsNCDForm({...bondsNCDForm, company_name: e.target.value})}\r\n//                 className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white placeholder-slate-400 focus:outline-none focus:border-amber-500/50 transition-colors\"\r\n//                 placeholder=\"Enter company name\"\r\n//                 required\r\n//               />\r\n//             </div>\r\n\r\n//             <div>\r\n//               <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n//                 Issue Size\r\n//               </label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 value={bondsNCDForm.issue_size}\r\n//                 onChange={(e) => setBondsNCDForm({...bondsNCDForm, issue_size: e.target.value})}\r\n//                 className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white placeholder-slate-400 focus:outline-none focus:border-amber-500/50 transition-colors\"\r\n//                 placeholder=\"e.g., ₹500 Cr\"\r\n//               />\r\n//             </div>\r\n\r\n//             <div>\r\n//               <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n//                 Interest Rate (%)\r\n//               </label>\r\n//               <input\r\n//                 type=\"number\"\r\n//                 step=\"0.01\"\r\n//                 value={bondsNCDForm.interest_rate}\r\n//                 onChange={(e) => setBondsNCDForm({...bondsNCDForm, interest_rate: e.target.value})}\r\n//                 className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white placeholder-slate-400 focus:outline-none focus:border-amber-500/50 transition-colors\"\r\n//                 placeholder=\"e.g., 8.5\"\r\n//               />\r\n//             </div>\r\n\r\n//             <div>\r\n//               <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n//                 Tenure\r\n//               </label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 value={bondsNCDForm.tenure}\r\n//                 onChange={(e) => setBondsNCDForm({...bondsNCDForm, tenure: e.target.value})}\r\n//                 className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white placeholder-slate-400 focus:outline-none focus:border-amber-500/50 transition-colors\"\r\n//                 placeholder=\"e.g., 3 years\"\r\n//               />\r\n//             </div>\r\n\r\n//             <div className=\"md:col-span-2\">\r\n//               <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n//                 Image {!editingId && '*'}\r\n//               </label>\r\n//               <input\r\n//                 type=\"file\"\r\n//                 accept=\"image/jpeg, image/jpg, image/png, image/webp\"\r\n//                 onChange={(e) => {\r\n//                   setBondsNCDForm({...bondsNCDForm, image_file: e.target.files?.[0] || null});\r\n//                   setFormErrors([]);\r\n//                 }}\r\n//                 className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white file:mr-4 file:py-2 file:px-4 file:rounded-lg file:border-0 file:text-sm file:font-medium file:bg-amber-500/20 file:text-amber-400 hover:file:bg-amber-500/30 transition-colors\"\r\n//                 required={!editingId}\r\n//               />\r\n//               <p className=\"text-slate-400 text-xs mt-2\">\r\n//                 Required for new NCDs. Max 5MB. Supported: JPEG, PNG, WebP\r\n//                 {editingId && (\r\n//                   <span className=\"text-amber-400 ml-1\">(Leave empty to keep current image)</span>\r\n//                 )}\r\n//               </p>\r\n//             </div>\r\n//           </div>\r\n//         )\r\n//       },\r\n//       fd: {\r\n//         title: editingId ? 'Edit FD' : 'Add New FD',\r\n//         onSubmit: handleBondsFDSubmit,\r\n//         fields: (\r\n//           <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n//             <div>\r\n//               <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n//                 Bank Name *\r\n//               </label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 value={bondsFDForm.bank_name}\r\n//                 onChange={(e) => setBondsFDForm({...bondsFDForm, bank_name: e.target.value})}\r\n//                 className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white placeholder-slate-400 focus:outline-none focus:border-amber-500/50 transition-colors\"\r\n//                 placeholder=\"Enter bank name\"\r\n//                 required\r\n//               />\r\n//             </div>\r\n\r\n//             <div>\r\n//               <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n//                 Interest Rate (%)\r\n//               </label>\r\n//               <input\r\n//                 type=\"number\"\r\n//                 step=\"0.01\"\r\n//                 value={bondsFDForm.interest_rate}\r\n//                 onChange={(e) => setBondsFDForm({...bondsFDForm, interest_rate: e.target.value})}\r\n//                 className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white placeholder-slate-400 focus:outline-none focus:border-amber-500/50 transition-colors\"\r\n//                 placeholder=\"e.g., 7.2\"\r\n//               />\r\n//             </div>\r\n\r\n//             <div className=\"md:col-span-2\">\r\n//               <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n//                 Tenure\r\n//               </label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 value={bondsFDForm.tenure}\r\n//                 onChange={(e) => setBondsFDForm({...bondsFDForm, tenure: e.target.value})}\r\n//                 className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white placeholder-slate-400 focus:outline-none focus:border-amber-500/50 transition-colors\"\r\n//                 placeholder=\"e.g., 1-3 years\"\r\n//               />\r\n//             </div>\r\n\r\n//             <div className=\"md:col-span-2\">\r\n//               <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n//                 Image {!editingId && '*'}\r\n//               </label>\r\n//               <input\r\n//                 type=\"file\"\r\n//                 accept=\"image/jpeg, image/jpg, image/png, image/webp\"\r\n//                 onChange={(e) => {\r\n//                   setBondsFDForm({...bondsFDForm, image_file: e.target.files?.[0] || null});\r\n//                   setFormErrors([]);\r\n//                 }}\r\n//                 className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white file:mr-4 file:py-2 file:px-4 file:rounded-lg file:border-0 file:text-sm file:font-medium file:bg-amber-500/20 file:text-amber-400 hover:file:bg-amber-500/30 transition-colors\"\r\n//                 required={!editingId}\r\n//               />\r\n//               <p className=\"text-slate-400 text-xs mt-2\">\r\n//                 Required for new FDs. Max 5MB. Supported: JPEG, PNG, WebP\r\n//                 {editingId && (\r\n//                   <span className=\"text-amber-400 ml-1\">(Leave empty to keep current image)</span>\r\n//                 )}\r\n//               </p>\r\n//             </div>\r\n//           </div>\r\n//         )\r\n//       }\r\n//     };\r\n\r\n//     const config = formConfig[editingType!];\r\n\r\n//     return (\r\n//       <div className=\"bg-white/5 backdrop-blur-lg border border-white/10 rounded-2xl p-6 mb-8\">\r\n//         <h2 className=\"text-xl font-bold text-amber-400 mb-6\">\r\n//           {config.title}\r\n//         </h2>\r\n        \r\n//         <form onSubmit={config.onSubmit} className=\"space-y-6\">\r\n//           {config.fields}\r\n\r\n//           <div className=\"flex gap-3 pt-4\">\r\n//             <button\r\n//               type=\"submit\"\r\n//               disabled={uploading}\r\n//               className=\"flex items-center gap-2 px-6 py-3 bg-amber-500/20 border border-amber-500/30 text-amber-400 rounded-xl hover:bg-amber-500/30 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n//             >\r\n//               <FiUpload className=\"w-4 h-4\" />\r\n//               {uploading ? 'Saving...' : (editingId ? 'Update' : 'Create')}\r\n//             </button>\r\n            \r\n//             <button\r\n//               type=\"button\"\r\n//               onClick={resetForm}\r\n//               className=\"px-6 py-3 bg-white/5 border border-white/10 text-slate-300 rounded-xl hover:bg-white/10 transition-colors\"\r\n//             >\r\n//               Cancel\r\n//             </button>\r\n//           </div>\r\n//         </form>\r\n//       </div>\r\n//     );\r\n//   };\r\n\r\n//   // Render Leads Table\r\n//   const renderLeadsTable = () => {\r\n//     return (\r\n//       <div className=\"bg-white/5 backdrop-blur-lg border border-white/10 rounded-2xl p-6\">\r\n//         <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between mb-6 gap-4\">\r\n//           <h2 className=\"text-xl font-bold text-amber-400\">\r\n//             {activeTab === 'leads' ? 'New Leads' : 'Contacted Leads'} ({filteredLeads.length})\r\n//           </h2>\r\n          \r\n//           <div className=\"flex flex-col sm:flex-row gap-3\">\r\n//             {/* Search Input */}\r\n//             <div className=\"relative\">\r\n//               <FiSearch className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-slate-400 w-4 h-4\" />\r\n//               <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Search leads...\"\r\n//                 value={searchTerm}\r\n//                 onChange={(e) => setSearchTerm(e.target.value)}\r\n//                 className=\"pl-10 pr-4 py-2 bg-white/5 border border-white/10 rounded-xl text-white placeholder-slate-400 focus:outline-none focus:border-amber-500/50 transition-colors w-full sm:w-64\"\r\n//               />\r\n//             </div>\r\n\r\n//             {/* Requirement Filter */}\r\n//             {uniqueRequirements > 0 && (\r\n//               <select\r\n//                 value={filterRequirement}\r\n//                 onChange={(e) => setFilterRequirement(e.target.value)}\r\n//                 className=\"px-4 py-2 bg-white/5 border border-white/10 rounded-xl text-white focus:outline-none focus:border-amber-500/50 transition-colors\"\r\n//               >\r\n//                 <option value=\"\">All Requirements</option>\r\n//                 {uniqueRequirementsList.map(req => (\r\n//                   <option key={req} value={req}>{req} ({requirementStats[req]})</option>\r\n//                 ))}\r\n//               </select>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n\r\n//         {filteredLeads.length === 0 ? (\r\n//           <div className=\"text-center py-12\">\r\n//             <FiUser className=\"w-16 h-16 text-slate-600 mx-auto mb-4\" />\r\n//             <h3 className=\"text-xl font-semibold text-slate-300 mb-2\">\r\n//               {searchTerm || filterRequirement ? 'No matching leads found' : 'No leads found'}\r\n//             </h3>\r\n//             <p className=\"text-slate-400\">\r\n//               {searchTerm || filterRequirement \r\n//                 ? 'Try adjusting your search or filter criteria'\r\n//                 : activeTab === 'leads' \r\n//                   ? 'New leads will appear here once customers submit the contact form.'\r\n//                   : 'Contacted leads will appear here once you mark them as contacted.'\r\n//               }\r\n//             </p>\r\n//           </div>\r\n//         ) : (\r\n//           <div className=\"overflow-x-auto\">\r\n//             <table className=\"w-full\">\r\n//               <thead>\r\n//                 <tr className=\"border-b border-white/10\">\r\n//                   <th className=\"text-left py-3 px-4 text-slate-400 font-semibold\">Customer</th>\r\n//                   <th className=\"text-left py-3 px-4 text-slate-400 font-semibold\">Contact</th>\r\n//                   <th className=\"text-left py-3 px-4 text-slate-400 font-semibold\">Requirement</th>\r\n//                   <th className=\"text-left py-3 px-4 text-slate-400 font-semibold\">Date</th>\r\n//                   <th className=\"text-left py-3 px-4 text-slate-400 font-semibold\">Actions</th>\r\n//                 </tr>\r\n//               </thead>\r\n//               <tbody>\r\n//                 {filteredLeads.map((lead, index) => (\r\n//                   <motion.tr\r\n//                     key={lead.id}\r\n//                     initial={{ opacity: 0 }}\r\n//                     animate={{ opacity: 1 }}\r\n//                     transition={{ delay: index * 0.05 }}\r\n//                     className=\"border-b border-white/5 hover:bg-white/5 transition-colors\"\r\n//                   >\r\n//                     <td className=\"py-3 px-4\">\r\n//                       <div>\r\n//                         <div className=\"font-semibold text-white\">{lead.name}</div>\r\n//                         {lead.email && (\r\n//                           <div className=\"text-slate-400 text-sm\">{lead.email}</div>\r\n//                         )}\r\n//                       </div>\r\n//                     </td>\r\n//                     <td className=\"py-3 px-4\">\r\n//                       <div className=\"text-slate-300 font-mono\">{lead.phone}</div>\r\n//                     </td>\r\n//                     <td className=\"py-3 px-4\">\r\n//                       {lead.requirement && (\r\n//                         <div className=\"max-w-xs\">\r\n//                           <div className={`px-3 py-1 rounded-lg border ${getRequirementColor(lead.requirement)}`}>\r\n//                             <span className=\"truncate\">{lead.requirement}</span>\r\n//                           </div>\r\n                          \r\n//                           {/* Expanded Requirement View - ALWAYS VISIBLE BY DEFAULT */}\r\n//                           <div className=\"mt-2 p-3 bg-white/5 rounded-lg border border-white/10\">\r\n//                             <div className=\"font-semibold text-slate-300 mb-2\">Full Requirement:</div>\r\n//                             <p className=\"text-slate-300 text-sm\">{lead.requirement}</p>\r\n                            \r\n//                             {lead.notes && (\r\n//                               <>\r\n//                                 <div className=\"font-semibold text-slate-300 mt-3 mb-1\">Additional Notes:</div>\r\n//                                 <p className=\"text-slate-400 text-sm\">{lead.notes}</p>\r\n//                               </>\r\n//                             )}\r\n//                           </div>\r\n//                         </div>\r\n//                       )}\r\n//                     </td>\r\n//                     <td className=\"py-3 px-4\">\r\n//                       <div className=\"text-slate-400 text-sm\">\r\n//                         {lead.created_at ? formatDate(lead.created_at) : 'Unknown'}\r\n//                       </div>\r\n//                     </td>\r\n//                     <td className=\"py-3 px-4\">\r\n//                       <div className=\"flex gap-2\">\r\n//                         <button\r\n//                           onClick={() => toggleContactStatus(lead.id, lead.is_contacted || false)}\r\n//                           className={`p-2 rounded-lg border transition-colors ${\r\n//                             lead.is_contacted\r\n//                               ? 'bg-amber-500/20 text-amber-400 border-amber-500/30 hover:bg-amber-500/30'\r\n//                               : 'bg-green-500/20 text-green-400 border-green-500/30 hover:bg-green-500/30'\r\n//                           }`}\r\n//                           title={lead.is_contacted ? \"Mark as New\" : \"Mark as Contacted\"}\r\n//                         >\r\n//                           {lead.is_contacted ? \r\n//                             <FiXCircle className=\"w-4 h-4\" /> : \r\n//                             <FiCheckCircle className=\"w-4 h-4\" />\r\n//                           }\r\n//                         </button>\r\n//                       </div>\r\n//                     </td>\r\n//                   </motion.tr>\r\n//                 ))}\r\n//               </tbody>\r\n//             </table>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     );\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 p-4 pt-20\">\r\n//       <motion.div\r\n//         initial={{ opacity: 0, y: 20 }}\r\n//         animate={{ opacity: 1, y: 0 }}\r\n//         className=\"max-w-7xl mx-auto\"\r\n//       >\r\n//         {/* Debug Info Panel */}\r\n//         <div className=\"mb-4 p-4 bg-blue-500/10 border border-blue-500/20 rounded-lg\">\r\n//           <details>\r\n//             <summary className=\"cursor-pointer text-blue-400 font-semibold\">Debug Info (Click to expand)</summary>\r\n//             <div className=\"mt-2 text-xs text-blue-300 max-h-32 overflow-y-auto\">\r\n//               {debugInfo.map((info, index) => (\r\n//                 <div key={index} className=\"font-mono\">{info}</div>\r\n//               ))}\r\n//             </div>\r\n//           </details>\r\n//         </div>\r\n\r\n//         {/* Auth Debug Panel */}\r\n//         <div className=\"mb-4 p-4 bg-green-500/10 border border-green-500/20 rounded-lg\">\r\n//           <details>\r\n//             <summary className=\"cursor-pointer text-green-400 font-semibold\">Auth Debug (Click to expand)</summary>\r\n//             <div className=\"mt-2 text-xs text-green-300 max-h-32 overflow-y-auto\">\r\n//               {authDebug.map((info, index) => (\r\n//                 <div key={index} className=\"font-mono\">{info}</div>\r\n//               ))}\r\n//             </div>\r\n//           </details>\r\n//         </div>\r\n\r\n//         {/* Header */}\r\n//         <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between mb-8\">\r\n//           <div className=\"mb-4 lg:mb-0\">\r\n//             <h1 className=\"text-3xl font-bold text-amber-400 mb-2\">Admin Dashboard</h1>\r\n//             <p className=\"text-slate-300 text-lg\">\r\n//               Welcome back, <span className=\"text-white font-semibold\">{userEmail}</span>\r\n//             </p>\r\n//           </div>\r\n//           <div className=\"flex gap-3\">\r\n//             <button\r\n//               onClick={handleRefresh}\r\n//               disabled={refreshing}\r\n//               className=\"flex items-center gap-2 px-4 py-2 rounded-lg bg-white/5 border border-white/10 text-slate-300 hover:bg-white/10 transition-colors disabled:opacity-50\"\r\n//             >\r\n//               <FiRefreshCw className={`w-4 h-4 ${refreshing ? 'animate-spin' : ''}`} />\r\n//               Refresh\r\n//             </button>\r\n//             <button\r\n//               onClick={handleSignOut}\r\n//               className=\"flex items-center gap-2 px-4 py-2 rounded-lg bg-rose-500/20 border border-rose-500/30 text-rose-400 hover:bg-rose-500/30 transition-colors\"\r\n//             >\r\n//               <FiLogOut className=\"w-4 h-4\" />\r\n//               Sign Out\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* Enhanced Stats Cards - WITH CLICKABLE CONTACTED CARD */}\r\n//         <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\r\n//           <div className=\"bg-white/5 backdrop-blur-lg border border-white/10 rounded-2xl p-6\">\r\n//             <div className=\"flex items-center justify-between\">\r\n//               <div>\r\n//                 <p className=\"text-slate-400 text-sm font-medium\">Total Leads</p>\r\n//                 <p className=\"text-3xl font-bold text-white mt-2\">{totalLeads}</p>\r\n//               </div>\r\n//               <div className=\"p-3 bg-amber-500/20 rounded-xl\">\r\n//                 <FiUser className=\"w-6 h-6 text-amber-400\" />\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* CLICKABLE CONTACTED CARD */}\r\n//           <button\r\n//             onClick={() => setActiveTab('contacted')}\r\n//             className=\"bg-white/5 backdrop-blur-lg border border-white/10 rounded-2xl p-6 hover:bg-white/10 transition-colors text-left cursor-pointer\"\r\n//           >\r\n//             <div className=\"flex items-center justify-between\">\r\n//               <div>\r\n//                 <p className=\"text-slate-400 text-sm font-medium\">Contacted</p>\r\n//                 <p className=\"text-3xl font-bold text-green-400 mt-2\">{contactedLeads}</p>\r\n//               </div>\r\n//               <div className=\"p-3 bg-green-500/20 rounded-xl\">\r\n//                 <FiCheckCircle className=\"w-6 h-6 text-green-400\" />\r\n//               </div>\r\n//             </div>\r\n//           </button>\r\n\r\n//           <div className=\"bg-white/5 backdrop-blur-lg border border-white/10 rounded-2xl p-6\">\r\n//             <div className=\"flex items-center justify-between\">\r\n//               <div>\r\n//                 <p className=\"text-slate-400 text-sm font-medium\">New Leads</p>\r\n//                 <p className=\"text-3xl font-bold text-amber-400 mt-2\">{newLeads}</p>\r\n//               </div>\r\n//               <div className=\"p-3 bg-blue-500/20 rounded-xl\">\r\n//                 <FiClock className=\"w-6 h-6 text-blue-400\" />\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n\r\n//           <div className=\"bg-white/5 backdrop-blur-lg border border-white/10 rounded-2xl p-6\">\r\n//             <div className=\"flex items-center justify-between\">\r\n//               <div>\r\n//                 <p className=\"text-slate-400 text-sm font-medium\">Requirements</p>\r\n//                 <p className=\"text-3xl font-bold text-purple-400 mt-2\">{uniqueRequirements}</p>\r\n//                 <p className=\"text-slate-400 text-xs mt-1\">\r\n//                   {topRequirement ? `Top: ${topRequirement[0]}` : 'No data'}\r\n//                 </p>\r\n//               </div>\r\n//               <div className=\"p-3 bg-purple-500/20 rounded-xl\">\r\n//                 <FiBarChart2 className=\"w-6 h-6 text-purple-400\" />\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* Tab Navigation */}\r\n//         {/* <div className=\"flex space-x-1 mb-8 bg-white/5 backdrop-blur-lg border border-white/10 rounded-2xl p-1 max-w-3xl overflow-x-auto\">\r\n//           <button\r\n//             onClick={() => setActiveTab('leads')}\r\n//             className={`flex items-center gap-2 px-4 py-2 rounded-xl transition-colors flex-shrink-0 text-center ${ */}\r\n//             {/* <div className=\"flex space-x-1 mb-8 bg-white/5 backdrop-blur-lg border border-white/10 rounded-2xl p-1 w-full overflow-x-auto\"> */}\r\n//             <div className=\"flex space-x-1 mb-8 bg-white/5 backdrop-blur-lg border border-white/10 rounded-2xl p-1 w-full overflow-x-auto\">\r\n//   <button\r\n//     onClick={() => setActiveTab('leads')}\r\n//     className={`flex items-center gap-2 px-6 py-3 rounded-xl transition-colors flex-1 text-center justify-center min-w-0 ${\r\n//               activeTab === 'leads'\r\n//                 ? 'bg-amber-500/20 text-amber-400 border border-amber-500/30'\r\n//                 : 'text-slate-400 hover:text-white'\r\n//             }`}\r\n//           >\r\n//             {/* <FiUser className=\"w-4 h-4\" />\r\n//             New Leads ({leads.filter(l => !l.is_contacted).length}) */}\r\n//                 <FiUser className=\"w-4 h-4 flex-shrink-0\" />\r\n//     <span className=\"truncate\">New Leads ({leads.filter(l => !l.is_contacted).length})</span>\r\n//           </button>\r\n//           {/* <button\r\n//             onClick={() => setActiveTab('contacted')}\r\n//             className={`flex items-center gap-2 px-4 py-2 rounded-xl transition-colors flex-shrink-0 text-center ${ */}\r\n//                 <button\r\n//     onClick={() => setActiveTab('contacted')}\r\n//     // className={`flex items-center gap-2 px-6 py-3 rounded-xl transition-colors flex-1 text-center justify-center min-w-0 ${\r\n//         className={`flex items-center justify-center gap-2 px-4 py-3 rounded-xl transition-colors flex-1 min-w-0 ${\r\n//               activeTab === 'contacted'\r\n//                 ? 'bg-amber-500/20 text-amber-400 border border-amber-500/30'\r\n//                 : 'text-slate-400 hover:text-white'\r\n//             }`}\r\n//           >\r\n//             {/* <FiCheckCircle className=\"w-4 h-4\" />\r\n//             Contacted ({contactedLeads}) */}\r\n//                 <FiCheckCircle className=\"w-4 h-4 flex-shrink-0\" />\r\n//     <span className=\"truncate\">Contacted ({contactedLeads})</span>\r\n//           </button>\r\n//           <button\r\n//             onClick={() => setActiveTab('nfo')}\r\n//             // className={`flex items-center gap-2 px-4 py-2 rounded-xl transition-colors flex-shrink-0 text-center ${\r\n//                 className={`flex items-center justify-center gap-2 px-4 py-3 rounded-xl transition-colors flex-1 min-w-0 ${\r\n//               activeTab === 'nfo'\r\n//                 ? 'bg-amber-500/20 text-amber-400 border border-amber-500/30'\r\n//                 : 'text-slate-400 hover:text-white'\r\n//             }`}\r\n//           >\r\n//             <FiImage className=\"w-4 h-4\" />\r\n//             NFOs ({nfoData.length})\r\n//           </button>\r\n//           <button\r\n//             onClick={() => setActiveTab('bondsNCD')}\r\n//             // className={`flex items-center gap-2 px-4 py-2 rounded-xl transition-colors flex-shrink-0 text-center ${\r\n//                 className={`flex items-center justify-center gap-2 px-4 py-3 rounded-xl transition-colors flex-1 min-w-0 ${\r\n//               activeTab === 'bondsNCD'\r\n//                 ? 'bg-amber-500/20 text-amber-400 border border-amber-500/30'\r\n//                 : 'text-slate-400 hover:text-white'\r\n//             }`}\r\n//           >\r\n//             <FiTrendingUp className=\"w-4 h-4\" />\r\n//             Bonds NCD ({bondsNCD.length})\r\n//           </button>\r\n//           <button\r\n//             onClick={() => setActiveTab('bondsFD')}\r\n//             // className={`flex items-center gap-2 px-4 py-2 rounded-xl transition-colors flex-shrink-0 text-center ${\r\n//                 className={`flex items-center justify-center gap-2 px-4 py-3 rounded-xl transition-colors flex-1 min-w-0 ${\r\n//               activeTab === 'bondsFD'\r\n//                 ? 'bg-amber-500/20 text-amber-400 border border-amber-500/30'\r\n//                 : 'text-slate-400 hover:text-white'\r\n//             }`}\r\n//           >\r\n//             <FiShield className=\"w-4 h-4\" />\r\n//             Bonds FD ({bondsFD.length})\r\n//           </button>\r\n//         </div>\r\n\r\n//         {/* Form Errors */}\r\n//         {formErrors.length > 0 && (\r\n//           <div className=\"bg-rose-500/20 border border-rose-500/30 rounded-2xl p-4 mb-6\">\r\n//             <h3 className=\"text-rose-400 font-semibold mb-2\">Error:</h3>\r\n//             <ul className=\"text-rose-300 text-sm list-disc list-inside\">\r\n//               {formErrors.map((error, index) => (\r\n//                 <li key={index}>{error}</li>\r\n//               ))}\r\n//             </ul>\r\n//           </div>\r\n//         )}\r\n\r\n//         {/* Render Active Form */}\r\n//         {renderForm()}\r\n\r\n//         {/* Leads & Contacted Tabs Content */}\r\n//         {(activeTab === 'leads' || activeTab === 'contacted') && renderLeadsTable()}\r\n\r\n//         {/* NFO Management Tab Content */}\r\n//         {activeTab === 'nfo' && (\r\n//           <div className=\"space-y-8\">\r\n//             {/* NFO List Header with Create Button */}\r\n//             <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\r\n//               <h2 className=\"text-2xl font-bold text-amber-400\">\r\n//                 Active NFOs ({nfoData.length})\r\n//               </h2>\r\n//               <button\r\n//                 onClick={() => handleNewClick('nfo')}\r\n//                 className=\"flex items-center gap-2 px-4 py-2 bg-amber-500/20 border border-amber-500/30 text-amber-400 rounded-xl hover:bg-amber-500/30 transition-colors\"\r\n//               >\r\n//                 <FiPlus className=\"w-4 h-4\" />\r\n//                 Create New NFO\r\n//               </button>\r\n//             </div>\r\n\r\n//             {/* NFO List */}\r\n//             <div className=\"bg-white/5 backdrop-blur-lg border border-white/10 rounded-2xl p-6\">\r\n//               {nfoData.length === 0 ? (\r\n//                 <div className=\"text-center py-12\">\r\n//                   <FiImage className=\"w-16 h-16 text-slate-600 mx-auto mb-4\" />\r\n//                   <h3 className=\"text-xl font-semibold text-slate-300 mb-2\">No NFOs found</h3>\r\n//                   <p className=\"text-slate-400 mb-6\">Create your first NFO to get started.</p>\r\n//                   <button\r\n//                     onClick={() => handleNewClick('nfo')}\r\n//                     className=\"flex items-center gap-2 px-6 py-3 bg-amber-500/20 border border-amber-500/30 text-amber-400 rounded-xl hover:bg-amber-500/30 transition-colors mx-auto\"\r\n//                   >\r\n//                     <FiPlus className=\"w-4 h-4\" />\r\n//                     Create Your First NFO\r\n//                   </button>\r\n//                 </div>\r\n//               ) : (\r\n//                 <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n//                   {nfoData.map((nfo) => (\r\n//                     <motion.div\r\n//                       key={nfo.id}\r\n//                       initial={{ opacity: 0, y: 10 }}\r\n//                       animate={{ opacity: 1, y: 0 }}\r\n//                       className=\"bg-white/5 border border-white/10 rounded-2xl overflow-hidden hover:bg-white/10 transition-colors\"\r\n//                     >\r\n//                       {nfo.image_url && (\r\n//                         <div className=\"h-40 bg-slate-800 overflow-hidden\">\r\n//                           <img\r\n//                             src={getImageUrl(nfo.image_url, 'nfo-images') || ''}\r\n//                             alt={nfo.title}\r\n//                             className=\"w-full h-full object-cover\"\r\n//                           />\r\n//                         </div>\r\n//                       )}\r\n//                       <div className=\"p-4\">\r\n//                         <h3 className=\"font-bold text-white text-lg mb-2 line-clamp-2\">\r\n//                           {nfo.title}\r\n//                         </h3>\r\n//                         {nfo.description && (\r\n//                           <p className=\"text-slate-300 text-sm mb-3 line-clamp-2\">\r\n//                             {nfo.description}\r\n//                           </p>\r\n//                         )}\r\n//                         <div className=\"space-y-1 text-xs text-slate-400 mb-4\">\r\n//                           <div>Start: {nfo.start_date ? new Date(nfo.start_date).toLocaleDateString() : 'TBA'}</div>\r\n//                           <div>End: {nfo.end_date ? new Date(nfo.end_date).toLocaleDateString() : 'TBA'}</div>\r\n//                         </div>\r\n//                         <div className=\"flex gap-2\">\r\n//                           <button\r\n//                             onClick={() => handleEdit(nfo, 'nfo')}\r\n//                             className=\"flex items-center gap-1 px-3 py-1 bg-blue-500/20 border border-blue-500/30 text-blue-400 rounded-lg text-xs hover:bg-blue-500/30 transition-colors\"\r\n//                           >\r\n//                             <FiEdit className=\"w-3 h-3\" />\r\n//                             Edit\r\n//                           </button>\r\n//                           <button\r\n//                             onClick={() => handleDelete(nfo.id, 'nfo')}\r\n//                             className=\"flex items-center gap-1 px-3 py-1 bg-rose-500/20 border border-rose-500/30 text-rose-400 rounded-lg text-xs hover:bg-rose-500/30 transition-colors\"\r\n//                           >\r\n//                             <FiTrash2 className=\"w-3 h-3\" />\r\n//                             Delete\r\n//                           </button>\r\n//                         </div>\r\n//                       </div>\r\n//                     </motion.div>\r\n//                   ))}\r\n//                 </div>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n\r\n//         {/* Bonds NCD Tab Content */}\r\n//         {activeTab === 'bondsNCD' && (\r\n//           <div className=\"space-y-8\">\r\n//             {/* Bonds NCD List Header with Create Button */}\r\n//             <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\r\n//               <h2 className=\"text-2xl font-bold text-amber-400\">\r\n//                 Bonds NCD ({bondsNCD.length})\r\n//               </h2>\r\n//               <button\r\n//                 onClick={() => handleNewClick('ncd')}\r\n//                 className=\"flex items-center gap-2 px-4 py-2 bg-amber-500/20 border border-amber-500/30 text-amber-400 rounded-xl hover:bg-amber-500/30 transition-colors\"\r\n//               >\r\n//                 <FiPlus className=\"w-4 h-4\" />\r\n//                 Add New NCD\r\n//               </button>\r\n//             </div>\r\n\r\n//             {/* Bonds NCD List */}\r\n//             <div className=\"bg-white/5 backdrop-blur-lg border border-white/10 rounded-2xl p-6\">\r\n//               {bondsNCD.length === 0 ? (\r\n//                 <div className=\"text-center py-12\">\r\n//                   <FiTrendingUp className=\"w-16 h-16 text-slate-600 mx-auto mb-4\" />\r\n//                   <h3 className=\"text-xl font-semibold text-slate-300 mb-2\">No NCDs found</h3>\r\n//                   <p className=\"text-slate-400 mb-6\">Add your first NCD to get started.</p>\r\n//                   <button\r\n//                     onClick={() => handleNewClick('ncd')}\r\n//                     className=\"flex items-center gap-2 px-6 py-3 bg-amber-500/20 border border-amber-500/30 text-amber-400 rounded-xl hover:bg-amber-500/30 transition-colors mx-auto\"\r\n//                   >\r\n//                     <FiPlus className=\"w-4 h-4\" />\r\n//                     Add Your First NCD\r\n//                   </button>\r\n//                 </div>\r\n//               ) : (\r\n//                 <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n//                   {bondsNCD.map((ncd) => (\r\n//                     <motion.div\r\n//                       key={ncd.id}\r\n//                       initial={{ opacity: 0, y: 10 }}\r\n//                       animate={{ opacity: 1, y: 0 }}\r\n//                       className=\"bg-white/5 border border-white/10 rounded-2xl overflow-hidden hover:bg-white/10 transition-colors\"\r\n//                     >\r\n//                       {ncd.image_url && (\r\n//                         <div className=\"h-40 bg-slate-800 overflow-hidden\">\r\n//                           <img\r\n//                             src={getImageUrl(ncd.image_url, 'bonds-images') || ''}\r\n//                             alt={ncd.company_name}\r\n//                             className=\"w-full h-full object-cover\"\r\n//                           />\r\n//                         </div>\r\n//                       )}\r\n//                       <div className=\"p-4\">\r\n//                         <h3 className=\"font-bold text-white text-lg mb-2 line-clamp-2\">\r\n//                           {ncd.company_name}\r\n//                         </h3>\r\n//                         <div className=\"space-y-2 text-sm text-slate-300 mb-4\">\r\n//                           {ncd.issue_size && (\r\n//                             <div className=\"flex justify-between\">\r\n//                               <span>Issue Size:</span>\r\n//                               <span className=\"text-amber-400\">{ncd.issue_size}</span>\r\n//                             </div>\r\n//                           )}\r\n//                           {ncd.interest_rate && (\r\n//                             <div className=\"flex justify-between\">\r\n//                               <span>Interest Rate:</span>\r\n//                               <span className=\"text-green-400\">{ncd.interest_rate}%</span>\r\n//                             </div>\r\n//                           )}\r\n//                           {ncd.tenure && (\r\n//                             <div className=\"flex justify-between\">\r\n//                               <span>Tenure:</span>\r\n//                               <span className=\"text-blue-400\">{ncd.tenure}</span>\r\n//                             </div>\r\n//                           )}\r\n//                         </div>\r\n//                         <div className=\"flex gap-2\">\r\n//                           <button\r\n//                             onClick={() => handleEdit(ncd, 'ncd')}\r\n//                             className=\"flex items-center gap-1 px-3 py-1 bg-blue-500/20 border border-blue-500/30 text-blue-400 rounded-lg text-xs hover:bg-blue-500/30 transition-colors\"\r\n//                           >\r\n//                             <FiEdit className=\"w-3 h-3\" />\r\n//                             Edit\r\n//                           </button>\r\n//                           <button\r\n//                             onClick={() => handleDelete(ncd.id, 'ncd')}\r\n//                             className=\"flex items-center gap-1 px-3 py-1 bg-rose-500/20 border border-rose-500/30 text-rose-400 rounded-lg text-xs hover:bg-rose-500/30 transition-colors\"\r\n//                           >\r\n//                             <FiTrash2 className=\"w-3 h-3\" />\r\n//                             Delete\r\n//                           </button>\r\n//                         </div>\r\n//                       </div>\r\n//                     </motion.div>\r\n//                   ))}\r\n//                 </div>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n\r\n//         {/* Bonds FD Tab Content */}\r\n//         {activeTab === 'bondsFD' && (\r\n//           <div className=\"space-y-8\">\r\n//             {/* Bonds FD List Header with Create Button */}\r\n//             <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\r\n//               <h2 className=\"text-2xl font-bold text-amber-400\">\r\n//                 Bonds FD ({bondsFD.length})\r\n//               </h2>\r\n//               <button\r\n//                 onClick={() => handleNewClick('fd')}\r\n//                 className=\"flex items-center gap-2 px-4 py-2 bg-amber-500/20 border border-amber-500/30 text-amber-400 rounded-xl hover:bg-amber-500/30 transition-colors\"\r\n//               >\r\n//                 <FiPlus className=\"w-4 h-4\" />\r\n//                 Add New FD\r\n//               </button>\r\n//             </div>\r\n\r\n//             {/* Bonds FD List */}\r\n//             <div className=\"bg-white/5 backdrop-blur-lg border border-white/10 rounded-2xl p-6\">\r\n//               {bondsFD.length === 0 ? (\r\n//                 <div className=\"text-center py-12\">\r\n//                   <FiShield className=\"w-16 h-16 text-slate-600 mx-auto mb-4\" />\r\n//                   <h3 className=\"text-xl font-semibold text-slate-300 mb-2\">No FDs found</h3>\r\n//                   <p className=\"text-slate-400 mb-6\">Add your first FD to get started.</p>\r\n//                   <button\r\n//                     onClick={() => handleNewClick('fd')}\r\n//                     className=\"flex items-center gap-2 px-6 py-3 bg-amber-500/20 border border-amber-500/30 text-amber-400 rounded-xl hover:bg-amber-500/30 transition-colors mx-auto\"\r\n//                   >\r\n//                     <FiPlus className=\"w-4 h-4\" />\r\n//                     Add Your First FD\r\n//                   </button>\r\n//                 </div>\r\n//               ) : (\r\n//                 <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n//                   {bondsFD.map((fd) => (\r\n//                     <motion.div\r\n//                       key={fd.id}\r\n//                       initial={{ opacity: 0, y: 10 }}\r\n//                       animate={{ opacity: 1, y: 0 }}\r\n//                       className=\"bg-white/5 border border-white/10 rounded-2xl overflow-hidden hover:bg-white/10 transition-colors\"\r\n//                     >\r\n//                       {fd.image_url && (\r\n//                         <div className=\"h-40 bg-slate-800 overflow-hidden\">\r\n//                           <img\r\n//                             src={getImageUrl(fd.image_url, 'bonds-images') || ''}\r\n//                             alt={fd.bank_name}\r\n//                             className=\"w-full h-full object-cover\"\r\n//                           />\r\n//                         </div>\r\n//                       )}\r\n//                       <div className=\"p-4\">\r\n//                         <h3 className=\"font-bold text-white text-lg mb-2 line-clamp-2\">\r\n//                           {fd.bank_name}\r\n//                         </h3>\r\n//                         <div className=\"space-y-2 text-sm text-slate-300 mb-4\">\r\n//                           {fd.interest_rate && (\r\n//                             <div className=\"flex justify-between\">\r\n//                               <span>Interest Rate:</span>\r\n//                               <span className=\"text-green-400\">{fd.interest_rate}%</span>\r\n//                             </div>\r\n//                           )}\r\n//                           {fd.tenure && (\r\n//                             <div className=\"flex justify-between\">\r\n//                               <span>Tenure:</span>\r\n//                               <span className=\"text-blue-400\">{fd.tenure}</span>\r\n//                             </div>\r\n//                           )}\r\n//                         </div>\r\n//                         <div className=\"flex gap-2\">\r\n//                           <button\r\n//                             onClick={() => handleEdit(fd, 'fd')}\r\n//                             className=\"flex items-center gap-1 px-3 py-1 bg-blue-500/20 border border-blue-500/30 text-blue-400 rounded-lg text-xs hover:bg-blue-500/30 transition-colors\"\r\n//                           >\r\n//                             <FiEdit className=\"w-3 h-3\" />\r\n//                             Edit\r\n//                           </button>\r\n//                           <button\r\n//                             onClick={() => handleDelete(fd.id, 'fd')}\r\n//                             className=\"flex items-center gap-1 px-3 py-1 bg-rose-500/20 border border-rose-500/30 text-rose-400 rounded-lg text-xs hover:bg-rose-500/30 transition-colors\"\r\n//                           >\r\n//                             <FiTrash2 className=\"w-3 h-3\" />\r\n//                             Delete\r\n//                           </button>\r\n//                         </div>\r\n//                       </div>\r\n//                     </motion.div>\r\n//                   ))}\r\n//                 </div>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n\r\n//         {/* Footer Stats */}\r\n//         {(leads.length > 0 || nfoData.length > 0 || bondsNCD.length > 0 || bondsFD.length > 0) && (\r\n//           <div className=\"mt-6 text-center\">\r\n//             <p className=\"text-slate-400 text-sm\">\r\n//               Last updated: {new Date().toLocaleString()}\r\n//             </p>\r\n//           </div>\r\n//         )}\r\n//       </motion.div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n// prod ready hopefully\r\n\"use client\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { createClient } from \"@supabase/supabase-js\";\r\nimport { motion } from \"framer-motion\";\r\nimport { \r\n  FiUser, FiPhone, FiMail, FiClock, \r\n  FiCheckCircle, FiXCircle, FiLogOut, FiRefreshCw,\r\n  FiImage, FiUpload, FiPlus, FiEdit, FiTrash2,\r\n  FiTrendingUp, FiShield, FiBarChart2, FiSearch\r\n} from \"react-icons/fi\";\r\n\r\ntype LeadRow = {\r\n  id: string;\r\n  name: string;\r\n  phone: string;\r\n  email?: string;\r\n  requirement?: string;\r\n  notes?: string;\r\n  is_contacted?: boolean;\r\n  created_at?: string;\r\n};\r\n\r\ntype NFOData = {\r\n  id: string;\r\n  title: string;\r\n  description: string | null;\r\n  start_date: string | null;\r\n  end_date: string | null;\r\n  image_url: string | null;\r\n  created_at: string;\r\n};\r\n\r\ntype BondsNCD = {\r\n  id: string;\r\n  company_name: string;\r\n  issue_size: string | null;\r\n  interest_rate: number | null;\r\n  tenure: string | null;\r\n  image_url: string | null;\r\n  created_at: string;\r\n};\r\n\r\ntype BondsFD = {\r\n  id: string;\r\n  bank_name: string;\r\n  interest_rate: number | null;\r\n  tenure: string | null;\r\n  image_url: string | null;\r\n  created_at: string;\r\n};\r\n\r\nconst supabase = createClient(\r\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\r\n);\r\n\r\nexport default function AdminDashboardPage() {\r\n  const [leads, setLeads] = useState<LeadRow[]>([]);\r\n  const [nfoData, setNfoData] = useState<NFOData[]>([]);\r\n  const [bondsNCD, setBondsNCD] = useState<BondsNCD[]>([]);\r\n  const [bondsFD, setBondsFD] = useState<BondsFD[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [userEmail, setUserEmail] = useState<string>(\"\");\r\n  const [activeTab, setActiveTab] = useState<'leads' | 'contacted' | 'nfo' | 'bondsNCD' | 'bondsFD'>('leads');\r\n  const [isCheckingAuth, setIsCheckingAuth] = useState(true);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [filterRequirement, setFilterRequirement] = useState(\"\");\r\n  \r\n  const [nfoForm, setNfoForm] = useState({\r\n    title: '',\r\n    description: '',\r\n    start_date: '',\r\n    end_date: '',\r\n    image_file: null as File | null\r\n  });\r\n\r\n  const [bondsNCDForm, setBondsNCDForm] = useState({\r\n    company_name: '',\r\n    issue_size: '',\r\n    interest_rate: '',\r\n    tenure: '',\r\n    image_file: null as File | null\r\n  });\r\n\r\n  const [bondsFDForm, setBondsFDForm] = useState({\r\n    bank_name: '',\r\n    interest_rate: '',\r\n    tenure: '',\r\n    image_file: null as File | null\r\n  });\r\n\r\n  const [uploading, setUploading] = useState(false);\r\n  const [editingId, setEditingId] = useState<string | null>(null);\r\n  const [editingType, setEditingType] = useState<'nfo' | 'ncd' | 'fd' | null>(null);\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [formErrors, setFormErrors] = useState<string[]>([]);\r\n\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      try {\r\n        const { data: { session }, error } = await supabase.auth.getSession();\r\n        \r\n        if (error || !session) {\r\n          window.location.href = \"/admin/login\";\r\n          return;\r\n        }\r\n        \r\n        setUserEmail(session.user?.email || \"\");\r\n        setIsCheckingAuth(false);\r\n        \r\n        await Promise.all([\r\n          fetchLeads(),\r\n          fetchNFOData(),\r\n          fetchBondsNCD(),\r\n          fetchBondsFD()\r\n        ]);\r\n        \r\n      } catch (error) {\r\n        window.location.href = \"/admin/login\";\r\n      }\r\n    };\r\n    \r\n    checkAuth();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const { data: { subscription } } = supabase.auth.onAuthStateChange((event) => {\r\n      if (event === 'SIGNED_OUT') {\r\n        window.location.href = \"/admin/login\";\r\n      }\r\n    });\r\n\r\n    return () => subscription.unsubscribe();\r\n  }, []);\r\n\r\n  const filteredLeads = leads.filter(lead => {\r\n    const matchesSearch = \r\n      lead.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      lead.phone.includes(searchTerm) ||\r\n      (lead.email && lead.email.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n      (lead.requirement && lead.requirement.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n      (lead.notes && lead.notes.toLowerCase().includes(searchTerm.toLowerCase()));\r\n\r\n    const matchesRequirement = !filterRequirement || lead.requirement === filterRequirement;\r\n    \r\n    if (activeTab === 'leads') {\r\n      return !lead.is_contacted && matchesSearch && matchesRequirement;\r\n    } else if (activeTab === 'contacted') {\r\n      return lead.is_contacted && matchesSearch && matchesRequirement;\r\n    }\r\n    \r\n    return matchesSearch && matchesRequirement;\r\n  });\r\n\r\n  if (isCheckingAuth) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-amber-400 mx-auto mb-4\"></div>\r\n          <p className=\"text-slate-300 text-lg\">Verifying access...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (loading && !isCheckingAuth) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-amber-400 mx-auto mb-4\"></div>\r\n          <p className=\"text-slate-300 text-lg\">Loading dashboard...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async function fetchLeads() {\r\n    try {\r\n      setLoading(true);\r\n      const { data, error } = await supabase\r\n        .from('leads')\r\n        .select('*')\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (error) {\r\n        console.error('Error fetching leads:', error);\r\n      } else {\r\n        setLeads(data || []);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error in fetchLeads:', error);\r\n    } finally {\r\n      setLoading(false);\r\n      setRefreshing(false);\r\n    }\r\n  }\r\n\r\n  async function fetchNFOData() {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('upcoming_nfo')\r\n        .select('*')\r\n        .order('start_date', { ascending: true });\r\n\r\n      if (error) {\r\n        console.error('Error fetching NFO data:', error);\r\n      } else {\r\n        setNfoData(data || []);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error in fetchNFOData:', error);\r\n    }\r\n  }\r\n\r\n  async function fetchBondsNCD() {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('bonds_ncd')\r\n        .select('*')\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (error) {\r\n        console.error('Error fetching Bonds NCD data:', error);\r\n      } else {\r\n        setBondsNCD(data || []);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error in fetchBondsNCD:', error);\r\n    }\r\n  }\r\n\r\n  async function fetchBondsFD() {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('bonds_fd')\r\n        .select('*')\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (error) {\r\n        console.error('Error fetching Bonds FD data:', error);\r\n      } else {\r\n        setBondsFD(data || []);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error in fetchBondsFD:', error);\r\n    }\r\n  }\r\n\r\n  async function handleRefresh() {\r\n    setRefreshing(true);\r\n    await fetchLeads();\r\n    await fetchNFOData();\r\n    await fetchBondsNCD();\r\n    await fetchBondsFD();\r\n  }\r\n\r\n  async function toggleContactStatus(leadId: string, currentStatus: boolean) {\r\n    try {\r\n      const { error } = await supabase\r\n        .from('leads')\r\n        .update({ is_contacted: !currentStatus })\r\n        .eq('id', leadId);\r\n\r\n      if (error) {\r\n        console.error('Error updating lead:', error);\r\n      } else {\r\n        setLeads(leads.map(lead => \r\n          lead.id === leadId \r\n            ? { ...lead, is_contacted: !currentStatus }\r\n            : lead\r\n        ));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error toggling contact status:', error);\r\n    }\r\n  }\r\n\r\n  const handleImageUpload = async (file: File, bucket: string): Promise<string> => {\r\n    const fileExt = file.name.split('.').pop();\r\n    const fileName = `${Math.random().toString(36).substring(2)}_${Date.now()}.${fileExt}`;\r\n\r\n    const { data, error: uploadError } = await supabase.storage\r\n      .from(bucket)\r\n      .upload(fileName, file, {\r\n        cacheControl: '3600',\r\n        upsert: false\r\n      });\r\n\r\n    if (uploadError) {\r\n      throw new Error(`Failed to upload image: ${uploadError.message}`);\r\n    }\r\n\r\n    return fileName;\r\n  };\r\n\r\n  const validateNFOForm = (): boolean => {\r\n    const errors: string[] = [];\r\n\r\n    if (!nfoForm.title.trim()) {\r\n      errors.push('Title is required');\r\n    }\r\n\r\n    if (!editingId && !nfoForm.image_file) {\r\n      errors.push('Image is required for new NFOs');\r\n    }\r\n\r\n    if (nfoForm.image_file) {\r\n      const validTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'];\r\n      if (!validTypes.includes(nfoForm.image_file.type)) {\r\n        errors.push('Please upload a valid image (JPEG, PNG, or WebP)');\r\n      }\r\n      \r\n      if (nfoForm.image_file.size > 5 * 1024 * 1024) {\r\n        errors.push('Image size should be less than 5MB');\r\n      }\r\n    }\r\n\r\n    setFormErrors(errors);\r\n    return errors.length === 0;\r\n  };\r\n\r\n  const handleNfoSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateNFOForm()) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setUploading(true);\r\n      setFormErrors([]);\r\n      \r\n      let imageFileName = null;\r\n\r\n      if (nfoForm.image_file) {\r\n        try {\r\n          imageFileName = await handleImageUpload(nfoForm.image_file, 'nfo-images');\r\n        } catch (uploadError: any) {\r\n          setFormErrors([`Image upload failed: ${uploadError.message}`]);\r\n          setUploading(false);\r\n          return;\r\n        }\r\n      } else if (editingId) {\r\n        const existingNfo = nfoData.find(nfo => nfo.id === editingId);\r\n        imageFileName = existingNfo?.image_url || null;\r\n      }\r\n\r\n      const nfoDataToSave = {\r\n        title: nfoForm.title,\r\n        description: nfoForm.description || null,\r\n        start_date: nfoForm.start_date || null,\r\n        end_date: nfoForm.end_date || null,\r\n        image_url: imageFileName,\r\n      };\r\n\r\n      let result;\r\n      if (editingId) {\r\n        result = await supabase\r\n          .from('upcoming_nfo')\r\n          .update(nfoDataToSave)\r\n          .eq('id', editingId);\r\n      } else {\r\n        result = await supabase\r\n          .from('upcoming_nfo')\r\n          .insert([{\r\n            ...nfoDataToSave,\r\n            created_at: new Date().toISOString()\r\n          }]);\r\n      }\r\n\r\n      if (result.error) {\r\n        throw new Error(result.error.message);\r\n      }\r\n\r\n      resetForm();\r\n      await fetchNFOData();\r\n      alert(editingId ? 'NFO updated successfully!' : 'NFO created successfully!');\r\n      \r\n    } catch (error: any) {\r\n      setFormErrors([error.message]);\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const validateBondsNCDForm = (): boolean => {\r\n    const errors: string[] = [];\r\n\r\n    if (!bondsNCDForm.company_name.trim()) {\r\n      errors.push('Company name is required');\r\n    }\r\n\r\n    if (!editingId && !bondsNCDForm.image_file) {\r\n      errors.push('Image is required for new NCDs');\r\n    }\r\n\r\n    if (bondsNCDForm.image_file) {\r\n      const validTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'];\r\n      if (!validTypes.includes(bondsNCDForm.image_file.type)) {\r\n        errors.push('Please upload a valid image (JPEG, PNG, or WebP)');\r\n      }\r\n      \r\n      if (bondsNCDForm.image_file.size > 5 * 1024 * 1024) {\r\n        errors.push('Image size should be less than 5MB');\r\n      }\r\n    }\r\n\r\n    setFormErrors(errors);\r\n    return errors.length === 0;\r\n  };\r\n\r\n  const handleBondsNCDSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateBondsNCDForm()) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setUploading(true);\r\n      setFormErrors([]);\r\n      \r\n      let imageFileName = null;\r\n\r\n      if (bondsNCDForm.image_file) {\r\n        try {\r\n          imageFileName = await handleImageUpload(bondsNCDForm.image_file, 'bonds-images');\r\n        } catch (uploadError: any) {\r\n          setFormErrors([`Image upload failed: ${uploadError.message}`]);\r\n          setUploading(false);\r\n          return;\r\n        }\r\n      } else if (editingId) {\r\n        const existingNCD = bondsNCD.find(ncd => ncd.id === editingId);\r\n        imageFileName = existingNCD?.image_url || null;\r\n      }\r\n\r\n      const ncdDataToSave = {\r\n        company_name: bondsNCDForm.company_name,\r\n        issue_size: bondsNCDForm.issue_size || null,\r\n        interest_rate: bondsNCDForm.interest_rate ? parseFloat(bondsNCDForm.interest_rate) : null,\r\n        tenure: bondsNCDForm.tenure || null,\r\n        image_url: imageFileName,\r\n      };\r\n\r\n      let result;\r\n      if (editingId) {\r\n        result = await supabase\r\n          .from('bonds_ncd')\r\n          .update(ncdDataToSave)\r\n          .eq('id', editingId);\r\n      } else {\r\n        result = await supabase\r\n          .from('bonds_ncd')\r\n          .insert([{\r\n            ...ncdDataToSave,\r\n            created_at: new Date().toISOString()\r\n          }]);\r\n      }\r\n\r\n      if (result.error) throw new Error(result.error.message);\r\n\r\n      resetForm();\r\n      await fetchBondsNCD();\r\n      alert(editingId ? 'NCD updated successfully!' : 'NCD created successfully!');\r\n      \r\n    } catch (error: any) {\r\n      setFormErrors([error.message]);\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const validateBondsFDForm = (): boolean => {\r\n    const errors: string[] = [];\r\n\r\n    if (!bondsFDForm.bank_name.trim()) {\r\n      errors.push('Bank name is required');\r\n    }\r\n\r\n    if (!editingId && !bondsFDForm.image_file) {\r\n      errors.push('Image is required for new FDs');\r\n    }\r\n\r\n    if (bondsFDForm.image_file) {\r\n      const validTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'];\r\n      if (!validTypes.includes(bondsFDForm.image_file.type)) {\r\n        errors.push('Please upload a valid image (JPEG, PNG, or WebP)');\r\n      }\r\n      \r\n      if (bondsFDForm.image_file.size > 5 * 1024 * 1024) {\r\n        errors.push('Image size should be less than 5MB');\r\n      }\r\n    }\r\n\r\n    setFormErrors(errors);\r\n    return errors.length === 0;\r\n  };\r\n\r\n  const handleBondsFDSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateBondsFDForm()) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setUploading(true);\r\n      setFormErrors([]);\r\n      \r\n      let imageFileName = null;\r\n\r\n      if (bondsFDForm.image_file) {\r\n        try {\r\n          imageFileName = await handleImageUpload(bondsFDForm.image_file, 'bonds-images');\r\n        } catch (uploadError: any) {\r\n          setFormErrors([`Image upload failed: ${uploadError.message}`]);\r\n          setUploading(false);\r\n          return;\r\n        }\r\n      } else if (editingId) {\r\n        const existingFD = bondsFD.find(fd => fd.id === editingId);\r\n        imageFileName = existingFD?.image_url || null;\r\n      }\r\n\r\n      const fdDataToSave = {\r\n        bank_name: bondsFDForm.bank_name,\r\n        interest_rate: bondsFDForm.interest_rate ? parseFloat(bondsFDForm.interest_rate) : null,\r\n        tenure: bondsFDForm.tenure || null,\r\n        image_url: imageFileName,\r\n      };\r\n\r\n      let result;\r\n      if (editingId) {\r\n        result = await supabase\r\n          .from('bonds_fd')\r\n          .update(fdDataToSave)\r\n          .eq('id', editingId);\r\n      } else {\r\n        result = await supabase\r\n          .from('bonds_fd')\r\n          .insert([{\r\n            ...fdDataToSave,\r\n            created_at: new Date().toISOString()\r\n          }]);\r\n      }\r\n\r\n      if (result.error) throw new Error(result.error.message);\r\n\r\n      resetForm();\r\n      await fetchBondsFD();\r\n      alert(editingId ? 'FD updated successfully!' : 'FD created successfully!');\r\n      \r\n    } catch (error: any) {\r\n      setFormErrors([error.message]);\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (item: any, type: 'nfo' | 'ncd' | 'fd') => {\r\n    if (type === 'nfo') {\r\n      setNfoForm({\r\n        title: item.title,\r\n        description: item.description || '',\r\n        start_date: item.start_date ? item.start_date.split('T')[0] : '',\r\n        end_date: item.end_date ? item.end_date.split('T')[0] : '',\r\n        image_file: null\r\n      });\r\n    } else if (type === 'ncd') {\r\n      setBondsNCDForm({\r\n        company_name: item.company_name,\r\n        issue_size: item.issue_size || '',\r\n        interest_rate: item.interest_rate?.toString() || '',\r\n        tenure: item.tenure || '',\r\n        image_file: null\r\n      });\r\n    } else if (type === 'fd') {\r\n      setBondsFDForm({\r\n        bank_name: item.bank_name,\r\n        interest_rate: item.interest_rate?.toString() || '',\r\n        tenure: item.tenure || '',\r\n        image_file: null\r\n      });\r\n    }\r\n\r\n    setEditingId(item.id);\r\n    setEditingType(type);\r\n    setShowForm(true);\r\n    setFormErrors([]);\r\n  };\r\n\r\n  const handleDelete = async (id: string, type: 'nfo' | 'ncd' | 'fd') => {\r\n    if (!confirm('Are you sure you want to delete this item?')) return;\r\n\r\n    try {\r\n      const tableName = type === 'nfo' ? 'upcoming_nfo' : type === 'ncd' ? 'bonds_ncd' : 'bonds_fd';\r\n      \r\n      const { error } = await supabase\r\n        .from(tableName)\r\n        .delete()\r\n        .eq('id', id);\r\n\r\n      if (error) throw error;\r\n\r\n      if (type === 'nfo') await fetchNFOData();\r\n      else if (type === 'ncd') await fetchBondsNCD();\r\n      else if (type === 'fd') await fetchBondsFD();\r\n      \r\n      alert('Item deleted successfully!');\r\n    } catch (error: any) {\r\n      alert(`Error deleting item: ${error.message || 'Please try again.'}`);\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setNfoForm({\r\n      title: '',\r\n      description: '',\r\n      start_date: '',\r\n      end_date: '',\r\n      image_file: null\r\n    });\r\n    setBondsNCDForm({\r\n      company_name: '',\r\n      issue_size: '',\r\n      interest_rate: '',\r\n      tenure: '',\r\n      image_file: null\r\n    });\r\n    setBondsFDForm({\r\n      bank_name: '',\r\n      interest_rate: '',\r\n      tenure: '',\r\n      image_file: null\r\n    });\r\n    setEditingId(null);\r\n    setEditingType(null);\r\n    setShowForm(false);\r\n    setFormErrors([]);\r\n  };\r\n\r\n  const handleNewClick = (type: 'nfo' | 'ncd' | 'fd') => {\r\n    resetForm();\r\n    setEditingType(type);\r\n    setShowForm(true);\r\n  };\r\n\r\n  const getImageUrl = (imagePath: string | null, bucket: string) => {\r\n    if (!imagePath) return null;\r\n    \r\n    let filename = imagePath;\r\n    if (filename.includes('/')) {\r\n      filename = filename.split('/').pop() || filename;\r\n    }\r\n    filename = filename.replace(`${bucket}/`, '');\r\n    \r\n    const { data } = supabase.storage\r\n      .from(bucket)\r\n      .getPublicUrl(filename);\r\n    \r\n    return data.publicUrl;\r\n  };\r\n\r\n  async function handleSignOut() {\r\n    try {\r\n      const { error } = await supabase.auth.signOut();\r\n      if (error) {\r\n        console.error(\"Error signing out:\", error.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Sign out error:\", error);\r\n    }\r\n  }\r\n\r\n  const totalLeads = leads.length;\r\n  const contactedLeads = leads.filter(lead => lead.is_contacted).length;\r\n  const newLeads = totalLeads - contactedLeads;\r\n\r\n  const getRequirementStats = () => {\r\n    const requirementCounts: { [key: string]: number } = {};\r\n    \r\n    leads.forEach(lead => {\r\n      if (lead.requirement && lead.requirement.trim()) {\r\n        const requirement = lead.requirement.trim();\r\n        requirementCounts[requirement] = (requirementCounts[requirement] || 0) + 1;\r\n      }\r\n    });\r\n    \r\n    return requirementCounts;\r\n  };\r\n\r\n  const requirementStats = getRequirementStats();\r\n  const topRequirement = Object.entries(requirementStats).sort((a, b) => b[1] - a[1])[0];\r\n  const uniqueRequirements = Object.keys(requirementStats).length;\r\n  const uniqueRequirementsList = Object.keys(requirementStats);\r\n\r\n  const formatDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  const getRequirementColor = (requirement: string) => {\r\n    const colors: { [key: string]: string } = {\r\n      'Insurance': 'bg-blue-500/20 text-blue-400 border-blue-500/30',\r\n      'Mediclaim': 'bg-green-500/20 text-green-400 border-green-500/30',\r\n      'Loan': 'bg-purple-500/20 text-purple-400 border-purple-500/30',\r\n      'Mutual Funds': 'bg-amber-500/20 text-amber-400 border-amber-500/30',\r\n      'SIP': 'bg-indigo-500/20 text-indigo-400 border-indigo-500/30',\r\n      'Pension Planning': 'bg-pink-500/20 text-pink-400 border-pink-500/30',\r\n      'Child Plans': 'bg-cyan-500/20 text-cyan-400 border-cyan-500/30',\r\n      'Wealth Advisory': 'bg-orange-500/20 text-orange-400 border-orange-500/30',\r\n      'Tax Saving': 'bg-red-500/20 text-red-400 border-red-500/30',\r\n      'Retirement Planning': 'bg-teal-500/20 text-teal-400 border-teal-500/30',\r\n      'Health Insurance': 'bg-emerald-500/20 text-emerald-400 border-emerald-500/30',\r\n      'Life Insurance': 'bg-sky-500/20 text-sky-400 border-sky-500/30',\r\n      'Car Insurance': 'bg-violet-500/20 text-violet-400 border-violet-500/30',\r\n      'Home Insurance': 'bg-rose-500/20 text-rose-400 border-rose-500/30',\r\n      'Investment': 'bg-lime-500/20 text-lime-400 border-lime-500/30',\r\n      'Savings': 'bg-fuchsia-500/20 text-fuchsia-400 border-fuchsia-500/30'\r\n    };\r\n    \r\n    if (colors[requirement]) {\r\n      return colors[requirement];\r\n    }\r\n    \r\n    const requirementLower = requirement.toLowerCase();\r\n    for (const [key, value] of Object.entries(colors)) {\r\n      if (requirementLower.includes(key.toLowerCase())) {\r\n        return value;\r\n      }\r\n    }\r\n    \r\n    return 'bg-gray-500/20 text-gray-400 border-gray-500/30';\r\n  };\r\n\r\n  const renderForm = () => {\r\n    if (!showForm && !editingType) return null;\r\n\r\n    const formConfig = {\r\n      nfo: {\r\n        title: editingId ? 'Edit NFO' : 'Add New NFO',\r\n        onSubmit: handleNfoSubmit,\r\n        fields: (\r\n          <>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              <div>\r\n                <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n                  NFO Title *\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={nfoForm.title}\r\n                  onChange={(e) => setNfoForm({...nfoForm, title: e.target.value})}\r\n                  className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white placeholder-slate-400 focus:outline-none focus:border-amber-500/50 transition-colors\"\r\n                  placeholder=\"Enter NFO title\"\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n                  Image {!editingId && '*'}\r\n                </label>\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\"image/jpeg, image/jpg, image/png, image/webp\"\r\n                  onChange={(e) => {\r\n                    setNfoForm({...nfoForm, image_file: e.target.files?.[0] || null});\r\n                    setFormErrors([]);\r\n                  }}\r\n                  className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white file:mr-4 file:py-2 file:px-4 file:rounded-lg file:border-0 file:text-sm file:font-medium file:bg-amber-500/20 file:text-amber-400 hover:file:bg-amber-500/30 transition-colors\"\r\n                  required={!editingId}\r\n                />\r\n                <p className=\"text-slate-400 text-xs mt-2\">\r\n                  Required for new NFOs. Max 5MB. Supported: JPEG, PNG, WebP\r\n                  {editingId && (\r\n                    <span className=\"text-amber-400 ml-1\">(Leave empty to keep current image)</span>\r\n                  )}\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n                Description\r\n              </label>\r\n              <textarea\r\n                value={nfoForm.description}\r\n                onChange={(e) => setNfoForm({...nfoForm, description: e.target.value})}\r\n                rows={3}\r\n                className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white placeholder-slate-400 focus:outline-none focus:border-amber-500/50 transition-colors\"\r\n                placeholder=\"Enter NFO description...\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              <div>\r\n                <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n                  Start Date\r\n                </label>\r\n                <input\r\n                  type=\"date\"\r\n                  value={nfoForm.start_date}\r\n                  onChange={(e) => setNfoForm({...nfoForm, start_date: e.target.value})}\r\n                  className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white focus:outline-none focus:border-amber-500/50 transition-colors\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n                  End Date\r\n                </label>\r\n                <input\r\n                  type=\"date\"\r\n                  value={nfoForm.end_date}\r\n                  onChange={(e) => setNfoForm({...nfoForm, end_date: e.target.value})}\r\n                  className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white focus:outline-none focus:border-amber-500/50 transition-colors\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </>\r\n        )\r\n      },\r\n      ncd: {\r\n        title: editingId ? 'Edit NCD' : 'Add New NCD',\r\n        onSubmit: handleBondsNCDSubmit,\r\n        fields: (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            <div>\r\n              <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n                Company Name *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={bondsNCDForm.company_name}\r\n                onChange={(e) => setBondsNCDForm({...bondsNCDForm, company_name: e.target.value})}\r\n                className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white placeholder-slate-400 focus:outline-none focus:border-amber-500/50 transition-colors\"\r\n                placeholder=\"Enter company name\"\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n                Issue Size\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={bondsNCDForm.issue_size}\r\n                onChange={(e) => setBondsNCDForm({...bondsNCDForm, issue_size: e.target.value})}\r\n                className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white placeholder-slate-400 focus:outline-none focus:border-amber-500/50 transition-colors\"\r\n                placeholder=\"e.g., ₹500 Cr\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n                Interest Rate (%)\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                value={bondsNCDForm.interest_rate}\r\n                onChange={(e) => setBondsNCDForm({...bondsNCDForm, interest_rate: e.target.value})}\r\n                className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white placeholder-slate-400 focus:outline-none focus:border-amber-500/50 transition-colors\"\r\n                placeholder=\"e.g., 8.5\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n                Tenure\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={bondsNCDForm.tenure}\r\n                onChange={(e) => setBondsNCDForm({...bondsNCDForm, tenure: e.target.value})}\r\n                className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white placeholder-slate-400 focus:outline-none focus:border-amber-500/50 transition-colors\"\r\n                placeholder=\"e.g., 3 years\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"md:col-span-2\">\r\n              <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n                Image {!editingId && '*'}\r\n              </label>\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/jpeg, image/jpg, image/png, image/webp\"\r\n                onChange={(e) => {\r\n                  setBondsNCDForm({...bondsNCDForm, image_file: e.target.files?.[0] || null});\r\n                  setFormErrors([]);\r\n                }}\r\n                className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white file:mr-4 file:py-2 file:px-4 file:rounded-lg file:border-0 file:text-sm file:font-medium file:bg-amber-500/20 file:text-amber-400 hover:file:bg-amber-500/30 transition-colors\"\r\n                required={!editingId}\r\n              />\r\n              <p className=\"text-slate-400 text-xs mt-2\">\r\n                Required for new NCDs. Max 5MB. Supported: JPEG, PNG, WebP\r\n                {editingId && (\r\n                  <span className=\"text-amber-400 ml-1\">(Leave empty to keep current image)</span>\r\n                )}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        )\r\n      },\r\n      fd: {\r\n        title: editingId ? 'Edit FD' : 'Add New FD',\r\n        onSubmit: handleBondsFDSubmit,\r\n        fields: (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            <div>\r\n              <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n                Bank Name *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={bondsFDForm.bank_name}\r\n                onChange={(e) => setBondsFDForm({...bondsFDForm, bank_name: e.target.value})}\r\n                className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white placeholder-slate-400 focus:outline-none focus:border-amber-500/50 transition-colors\"\r\n                placeholder=\"Enter bank name\"\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n                Interest Rate (%)\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                value={bondsFDForm.interest_rate}\r\n                onChange={(e) => setBondsFDForm({...bondsFDForm, interest_rate: e.target.value})}\r\n                className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white placeholder-slate-400 focus:outline-none focus:border-amber-500/50 transition-colors\"\r\n                placeholder=\"e.g., 7.2\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"md:col-span-2\">\r\n              <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n                Tenure\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={bondsFDForm.tenure}\r\n                onChange={(e) => setBondsFDForm({...bondsFDForm, tenure: e.target.value})}\r\n                className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white placeholder-slate-400 focus:outline-none focus:border-amber-500/50 transition-colors\"\r\n                placeholder=\"e.g., 1-3 years\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"md:col-span-2\">\r\n              <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n                Image {!editingId && '*'}\r\n              </label>\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/jpeg, image/jpg, image/png, image/webp\"\r\n                onChange={(e) => {\r\n                  setBondsFDForm({...bondsFDForm, image_file: e.target.files?.[0] || null});\r\n                  setFormErrors([]);\r\n                }}\r\n                className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white file:mr-4 file:py-2 file:px-4 file:rounded-lg file:border-0 file:text-sm file:font-medium file:bg-amber-500/20 file:text-amber-400 hover:file:bg-amber-500/30 transition-colors\"\r\n                required={!editingId}\r\n              />\r\n              <p className=\"text-slate-400 text-xs mt-2\">\r\n                Required for new FDs. Max 5MB. Supported: JPEG, PNG, WebP\r\n                {editingId && (\r\n                  <span className=\"text-amber-400 ml-1\">(Leave empty to keep current image)</span>\r\n                )}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    };\r\n\r\n    const config = formConfig[editingType!];\r\n\r\n    return (\r\n      <div className=\"bg-white/5 backdrop-blur-lg border border-white/10 rounded-2xl p-6 mb-8\">\r\n        <h2 className=\"text-xl font-bold text-amber-400 mb-6\">\r\n          {config.title}\r\n        </h2>\r\n        \r\n        <form onSubmit={config.onSubmit} className=\"space-y-6\">\r\n          {config.fields}\r\n\r\n          <div className=\"flex gap-3 pt-4\">\r\n            <button\r\n              type=\"submit\"\r\n              disabled={uploading}\r\n              className=\"flex items-center gap-2 px-6 py-3 bg-amber-500/20 border border-amber-500/30 text-amber-400 rounded-xl hover:bg-amber-500/30 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            >\r\n              <FiUpload className=\"w-4 h-4\" />\r\n              {uploading ? 'Saving...' : (editingId ? 'Update' : 'Create')}\r\n            </button>\r\n            \r\n            <button\r\n              type=\"button\"\r\n              onClick={resetForm}\r\n              className=\"px-6 py-3 bg-white/5 border border-white/10 text-slate-300 rounded-xl hover:bg-white/10 transition-colors\"\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderLeadsTable = () => {\r\n    return (\r\n      <div className=\"bg-white/5 backdrop-blur-lg border border-white/10 rounded-2xl p-6\">\r\n        <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between mb-6 gap-4\">\r\n          <h2 className=\"text-xl font-bold text-amber-400\">\r\n            {activeTab === 'leads' ? 'New Leads' : 'Contacted Leads'} ({filteredLeads.length})\r\n          </h2>\r\n          \r\n          <div className=\"flex flex-col sm:flex-row gap-3\">\r\n            <div className=\"relative\">\r\n              <FiSearch className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-slate-400 w-4 h-4\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search leads...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"pl-10 pr-4 py-2 bg-white/5 border border-white/10 rounded-xl text-white placeholder-slate-400 focus:outline-none focus:border-amber-500/50 transition-colors w-full sm:w-64\"\r\n              />\r\n            </div>\r\n\r\n            {uniqueRequirements > 0 && (\r\n              <select\r\n                value={filterRequirement}\r\n                onChange={(e) => setFilterRequirement(e.target.value)}\r\n                className=\"px-4 py-2 bg-white/5 border border-white/10 rounded-xl text-white focus:outline-none focus:border-amber-500/50 transition-colors\"\r\n              >\r\n                <option value=\"\">All Requirements</option>\r\n                {uniqueRequirementsList.map(req => (\r\n                  <option key={req} value={req}>{req} ({requirementStats[req]})</option>\r\n                ))}\r\n              </select>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {filteredLeads.length === 0 ? (\r\n          <div className=\"text-center py-12\">\r\n            <FiUser className=\"w-16 h-16 text-slate-600 mx-auto mb-4\" />\r\n            <h3 className=\"text-xl font-semibold text-slate-300 mb-2\">\r\n              {searchTerm || filterRequirement ? 'No matching leads found' : 'No leads found'}\r\n            </h3>\r\n            <p className=\"text-slate-400\">\r\n              {searchTerm || filterRequirement \r\n                ? 'Try adjusting your search or filter criteria'\r\n                : activeTab === 'leads' \r\n                  ? 'New leads will appear here once customers submit the contact form.'\r\n                  : 'Contacted leads will appear here once you mark them as contacted.'\r\n              }\r\n            </p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"w-full\">\r\n              <thead>\r\n                <tr className=\"border-b border-white/10\">\r\n                  <th className=\"text-left py-3 px-4 text-slate-400 font-semibold\">Customer</th>\r\n                  <th className=\"text-left py-3 px-4 text-slate-400 font-semibold\">Contact</th>\r\n                  <th className=\"text-left py-3 px-4 text-slate-400 font-semibold\">Requirement</th>\r\n                  <th className=\"text-left py-3 px-4 text-slate-400 font-semibold\">Date</th>\r\n                  <th className=\"text-left py-3 px-4 text-slate-400 font-semibold\">Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filteredLeads.map((lead, index) => (\r\n                  <motion.tr\r\n                    key={lead.id}\r\n                    initial={{ opacity: 0 }}\r\n                    animate={{ opacity: 1 }}\r\n                    transition={{ delay: index * 0.05 }}\r\n                    className=\"border-b border-white/5 hover:bg-white/5 transition-colors\"\r\n                  >\r\n                    <td className=\"py-3 px-4\">\r\n                      <div>\r\n                        <div className=\"font-semibold text-white\">{lead.name}</div>\r\n                        {lead.email && (\r\n                          <div className=\"text-slate-400 text-sm\">{lead.email}</div>\r\n                        )}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"py-3 px-4\">\r\n                      <div className=\"text-slate-300 font-mono\">{lead.phone}</div>\r\n                    </td>\r\n                    <td className=\"py-3 px-4\">\r\n                      {lead.requirement && (\r\n                        <div className=\"max-w-xs\">\r\n                          <div className={`px-3 py-1 rounded-lg border ${getRequirementColor(lead.requirement)}`}>\r\n                            <span className=\"truncate\">{lead.requirement}</span>\r\n                          </div>\r\n                          \r\n                          <div className=\"mt-2 p-3 bg-white/5 rounded-lg border border-white/10\">\r\n                            <div className=\"font-semibold text-slate-300 mb-2\">Full Requirement:</div>\r\n                            <p className=\"text-slate-300 text-sm\">{lead.requirement}</p>\r\n                            \r\n                            {lead.notes && (\r\n                              <>\r\n                                <div className=\"font-semibold text-slate-300 mt-3 mb-1\">Additional Notes:</div>\r\n                                <p className=\"text-slate-400 text-sm\">{lead.notes}</p>\r\n                              </>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"py-3 px-4\">\r\n                      <div className=\"text-slate-400 text-sm\">\r\n                        {lead.created_at ? formatDate(lead.created_at) : 'Unknown'}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"py-3 px-4\">\r\n                      <div className=\"flex gap-2\">\r\n                        <button\r\n                          onClick={() => toggleContactStatus(lead.id, lead.is_contacted || false)}\r\n                          className={`p-2 rounded-lg border transition-colors ${\r\n                            lead.is_contacted\r\n                              ? 'bg-amber-500/20 text-amber-400 border-amber-500/30 hover:bg-amber-500/30'\r\n                              : 'bg-green-500/20 text-green-400 border-green-500/30 hover:bg-green-500/30'\r\n                          }`}\r\n                          title={lead.is_contacted ? \"Mark as New\" : \"Mark as Contacted\"}\r\n                        >\r\n                          {lead.is_contacted ? \r\n                            <FiXCircle className=\"w-4 h-4\" /> : \r\n                            <FiCheckCircle className=\"w-4 h-4\" />\r\n                          }\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </motion.tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 p-4 pt-20\">\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        className=\"max-w-7xl mx-auto\"\r\n      >\r\n        {/* Header */}\r\n        <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between mb-8\">\r\n          <div className=\"mb-4 lg:mb-0\">\r\n            <h1 className=\"text-3xl font-bold text-amber-400 mb-2\">Admin Dashboard</h1>\r\n            <p className=\"text-slate-300 text-lg\">\r\n              Welcome back, <span className=\"text-white font-semibold\">{userEmail}</span>\r\n            </p>\r\n          </div>\r\n          <div className=\"flex gap-3\">\r\n            <button\r\n              onClick={handleRefresh}\r\n              disabled={refreshing}\r\n              className=\"flex items-center gap-2 px-4 py-2 rounded-lg bg-white/5 border border-white/10 text-slate-300 hover:bg-white/10 transition-colors disabled:opacity-50\"\r\n            >\r\n              <FiRefreshCw className={`w-4 h-4 ${refreshing ? 'animate-spin' : ''}`} />\r\n              Refresh\r\n            </button>\r\n            <button\r\n              onClick={handleSignOut}\r\n              className=\"flex items-center gap-2 px-4 py-2 rounded-lg bg-rose-500/20 border border-rose-500/30 text-rose-400 hover:bg-rose-500/30 transition-colors\"\r\n            >\r\n              <FiLogOut className=\"w-4 h-4\" />\r\n              Sign Out\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Stats Cards */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\r\n          <div className=\"bg-white/5 backdrop-blur-lg border border-white/10 rounded-2xl p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-slate-400 text-sm font-medium\">Total Leads</p>\r\n                <p className=\"text-3xl font-bold text-white mt-2\">{totalLeads}</p>\r\n              </div>\r\n              <div className=\"p-3 bg-amber-500/20 rounded-xl\">\r\n                <FiUser className=\"w-6 h-6 text-amber-400\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <button\r\n            onClick={() => setActiveTab('contacted')}\r\n            className=\"bg-white/5 backdrop-blur-lg border border-white/10 rounded-2xl p-6 hover:bg-white/10 transition-colors text-left cursor-pointer\"\r\n          >\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-slate-400 text-sm font-medium\">Contacted</p>\r\n                <p className=\"text-3xl font-bold text-green-400 mt-2\">{contactedLeads}</p>\r\n              </div>\r\n              <div className=\"p-3 bg-green-500/20 rounded-xl\">\r\n                <FiCheckCircle className=\"w-6 h-6 text-green-400\" />\r\n              </div>\r\n            </div>\r\n          </button>\r\n\r\n          <div className=\"bg-white/5 backdrop-blur-lg border border-white/10 rounded-2xl p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-slate-400 text-sm font-medium\">New Leads</p>\r\n                <p className=\"text-3xl font-bold text-amber-400 mt-2\">{newLeads}</p>\r\n              </div>\r\n              <div className=\"p-3 bg-blue-500/20 rounded-xl\">\r\n                <FiClock className=\"w-6 h-6 text-blue-400\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white/5 backdrop-blur-lg border border-white/10 rounded-2xl p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-slate-400 text-sm font-medium\">Requirements</p>\r\n                <p className=\"text-3xl font-bold text-purple-400 mt-2\">{uniqueRequirements}</p>\r\n                <p className=\"text-slate-400 text-xs mt-1\">\r\n                  {topRequirement ? `Top: ${topRequirement[0]}` : 'No data'}\r\n                </p>\r\n              </div>\r\n              <div className=\"p-3 bg-purple-500/20 rounded-xl\">\r\n                <FiBarChart2 className=\"w-6 h-6 text-purple-400\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Tab Navigation */}\r\n        <div className=\"flex space-x-1 mb-8 bg-white/5 backdrop-blur-lg border border-white/10 rounded-2xl p-1 w-full overflow-x-auto\">\r\n          <button\r\n            onClick={() => setActiveTab('leads')}\r\n            className={`flex items-center justify-center gap-2 px-4 py-3 rounded-xl transition-colors flex-1 min-w-0 ${\r\n              activeTab === 'leads'\r\n                ? 'bg-amber-500/20 text-amber-400 border border-amber-500/30'\r\n                : 'text-slate-400 hover:text-white'\r\n            }`}\r\n          >\r\n            <FiUser className=\"w-4 h-4 flex-shrink-0\" />\r\n            <span className=\"truncate text-sm\">New Leads ({leads.filter(l => !l.is_contacted).length})</span>\r\n          </button>\r\n          <button\r\n            onClick={() => setActiveTab('contacted')}\r\n            className={`flex items-center justify-center gap-2 px-4 py-3 rounded-xl transition-colors flex-1 min-w-0 ${\r\n              activeTab === 'contacted'\r\n                ? 'bg-amber-500/20 text-amber-400 border border-amber-500/30'\r\n                : 'text-slate-400 hover:text-white'\r\n            }`}\r\n          >\r\n            <FiCheckCircle className=\"w-4 h-4 flex-shrink-0\" />\r\n            <span className=\"truncate text-sm\">Contacted ({contactedLeads})</span>\r\n          </button>\r\n          <button\r\n            onClick={() => setActiveTab('nfo')}\r\n            className={`flex items-center justify-center gap-2 px-4 py-3 rounded-xl transition-colors flex-1 min-w-0 ${\r\n              activeTab === 'nfo'\r\n                ? 'bg-amber-500/20 text-amber-400 border border-amber-500/30'\r\n                : 'text-slate-400 hover:text-white'\r\n            }`}\r\n          >\r\n            <FiImage className=\"w-4 h-4 flex-shrink-0\" />\r\n            <span className=\"truncate text-sm\">NFOs ({nfoData.length})</span>\r\n          </button>\r\n          <button\r\n            onClick={() => setActiveTab('bondsNCD')}\r\n            className={`flex items-center justify-center gap-2 px-4 py-3 rounded-xl transition-colors flex-1 min-w-0 ${\r\n              activeTab === 'bondsNCD'\r\n                ? 'bg-amber-500/20 text-amber-400 border border-amber-500/30'\r\n                : 'text-slate-400 hover:text-white'\r\n            }`}\r\n          >\r\n            <FiTrendingUp className=\"w-4 h-4 flex-shrink-0\" />\r\n            <span className=\"truncate text-sm\">Bonds NCD ({bondsNCD.length})</span>\r\n          </button>\r\n          <button\r\n            onClick={() => setActiveTab('bondsFD')}\r\n            className={`flex items-center justify-center gap-2 px-4 py-3 rounded-xl transition-colors flex-1 min-w-0 ${\r\n              activeTab === 'bondsFD'\r\n                ? 'bg-amber-500/20 text-amber-400 border border-amber-500/30'\r\n                : 'text-slate-400 hover:text-white'\r\n            }`}\r\n          >\r\n            <FiShield className=\"w-4 h-4 flex-shrink-0\" />\r\n            <span className=\"truncate text-sm\">Bonds FD ({bondsFD.length})</span>\r\n          </button>\r\n        </div>\r\n\r\n        {/* Form Errors */}\r\n        {formErrors.length > 0 && (\r\n          <div className=\"bg-rose-500/20 border border-rose-500/30 rounded-2xl p-4 mb-6\">\r\n            <h3 className=\"text-rose-400 font-semibold mb-2\">Error:</h3>\r\n            <ul className=\"text-rose-300 text-sm list-disc list-inside\">\r\n              {formErrors.map((error, index) => (\r\n                <li key={index}>{error}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n\r\n        {/* Render Active Form */}\r\n        {renderForm()}\r\n\r\n        {/* Leads & Contacted Tabs Content */}\r\n        {(activeTab === 'leads' || activeTab === 'contacted') && renderLeadsTable()}\r\n\r\n        {/* NFO Management Tab Content */}\r\n        {activeTab === 'nfo' && (\r\n          <div className=\"space-y-8\">\r\n            <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\r\n              <h2 className=\"text-2xl font-bold text-amber-400\">\r\n                Active NFOs ({nfoData.length})\r\n              </h2>\r\n              <button\r\n                onClick={() => handleNewClick('nfo')}\r\n                className=\"flex items-center gap-2 px-4 py-2 bg-amber-500/20 border border-amber-500/30 text-amber-400 rounded-xl hover:bg-amber-500/30 transition-colors\"\r\n              >\r\n                <FiPlus className=\"w-4 h-4\" />\r\n                Create New NFO\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"bg-white/5 backdrop-blur-lg border border-white/10 rounded-2xl p-6\">\r\n              {nfoData.length === 0 ? (\r\n                <div className=\"text-center py-12\">\r\n                  <FiImage className=\"w-16 h-16 text-slate-600 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold text-slate-300 mb-2\">No NFOs found</h3>\r\n                  <p className=\"text-slate-400 mb-6\">Create your first NFO to get started.</p>\r\n                  <button\r\n                    onClick={() => handleNewClick('nfo')}\r\n                    className=\"flex items-center gap-2 px-6 py-3 bg-amber-500/20 border border-amber-500/30 text-amber-400 rounded-xl hover:bg-amber-500/30 transition-colors mx-auto\"\r\n                  >\r\n                    <FiPlus className=\"w-4 h-4\" />\r\n                    Create Your First NFO\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                  {nfoData.map((nfo) => (\r\n                    <motion.div\r\n                      key={nfo.id}\r\n                      initial={{ opacity: 0, y: 10 }}\r\n                      animate={{ opacity: 1, y: 0 }}\r\n                      className=\"bg-white/5 border border-white/10 rounded-2xl overflow-hidden hover:bg-white/10 transition-colors\"\r\n                    >\r\n                      {nfo.image_url && (\r\n                        <div className=\"h-40 bg-slate-800 overflow-hidden\">\r\n                          <img\r\n                            src={getImageUrl(nfo.image_url, 'nfo-images') || ''}\r\n                            alt={nfo.title}\r\n                            className=\"w-full h-full object-cover\"\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"p-4\">\r\n                        <h3 className=\"font-bold text-white text-lg mb-2 line-clamp-2\">\r\n                          {nfo.title}\r\n                        </h3>\r\n                        {nfo.description && (\r\n                          <p className=\"text-slate-300 text-sm mb-3 line-clamp-2\">\r\n                            {nfo.description}\r\n                          </p>\r\n                        )}\r\n                        <div className=\"space-y-1 text-xs text-slate-400 mb-4\">\r\n                          <div>Start: {nfo.start_date ? new Date(nfo.start_date).toLocaleDateString() : 'TBA'}</div>\r\n                          <div>End: {nfo.end_date ? new Date(nfo.end_date).toLocaleDateString() : 'TBA'}</div>\r\n                        </div>\r\n                        <div className=\"flex gap-2\">\r\n                          <button\r\n                            onClick={() => handleEdit(nfo, 'nfo')}\r\n                            className=\"flex items-center gap-1 px-3 py-1 bg-blue-500/20 border border-blue-500/30 text-blue-400 rounded-lg text-xs hover:bg-blue-500/30 transition-colors\"\r\n                          >\r\n                            <FiEdit className=\"w-3 h-3\" />\r\n                            Edit\r\n                          </button>\r\n                          <button\r\n                            onClick={() => handleDelete(nfo.id, 'nfo')}\r\n                            className=\"flex items-center gap-1 px-3 py-1 bg-rose-500/20 border border-rose-500/30 text-rose-400 rounded-lg text-xs hover:bg-rose-500/30 transition-colors\"\r\n                          >\r\n                            <FiTrash2 className=\"w-3 h-3\" />\r\n                            Delete\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </motion.div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Bonds NCD Tab Content */}\r\n        {activeTab === 'bondsNCD' && (\r\n          <div className=\"space-y-8\">\r\n            <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\r\n              <h2 className=\"text-2xl font-bold text-amber-400\">\r\n                Bonds NCD ({bondsNCD.length})\r\n              </h2>\r\n              <button\r\n                onClick={() => handleNewClick('ncd')}\r\n                className=\"flex items-center gap-2 px-4 py-2 bg-amber-500/20 border border-amber-500/30 text-amber-400 rounded-xl hover:bg-amber-500/30 transition-colors\"\r\n              >\r\n                <FiPlus className=\"w-4 h-4\" />\r\n                Add New NCD\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"bg-white/5 backdrop-blur-lg border border-white/10 rounded-2xl p-6\">\r\n              {bondsNCD.length === 0 ? (\r\n                <div className=\"text-center py-12\">\r\n                  <FiTrendingUp className=\"w-16 h-16 text-slate-600 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold text-slate-300 mb-2\">No NCDs found</h3>\r\n                  <p className=\"text-slate-400 mb-6\">Add your first NCD to get started.</p>\r\n                  <button\r\n                    onClick={() => handleNewClick('ncd')}\r\n                    className=\"flex items-center gap-2 px-6 py-3 bg-amber-500/20 border border-amber-500/30 text-amber-400 rounded-xl hover:bg-amber-500/30 transition-colors mx-auto\"\r\n                  >\r\n                    <FiPlus className=\"w-4 h-4\" />\r\n                    Add Your First NCD\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                  {bondsNCD.map((ncd) => (\r\n                    <motion.div\r\n                      key={ncd.id}\r\n                      initial={{ opacity: 0, y: 10 }}\r\n                      animate={{ opacity: 1, y: 0 }}\r\n                      className=\"bg-white/5 border border-white/10 rounded-2xl overflow-hidden hover:bg-white/10 transition-colors\"\r\n                    >\r\n                      {ncd.image_url && (\r\n                        <div className=\"h-40 bg-slate-800 overflow-hidden\">\r\n                          <img\r\n                            src={getImageUrl(ncd.image_url, 'bonds-images') || ''}\r\n                            alt={ncd.company_name}\r\n                            className=\"w-full h-full object-cover\"\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"p-4\">\r\n                        <h3 className=\"font-bold text-white text-lg mb-2 line-clamp-2\">\r\n                          {ncd.company_name}\r\n                        </h3>\r\n                        <div className=\"space-y-2 text-sm text-slate-300 mb-4\">\r\n                          {ncd.issue_size && (\r\n                            <div className=\"flex justify-between\">\r\n                              <span>Issue Size:</span>\r\n                              <span className=\"text-amber-400\">{ncd.issue_size}</span>\r\n                            </div>\r\n                          )}\r\n                          {ncd.interest_rate && (\r\n                            <div className=\"flex justify-between\">\r\n                              <span>Interest Rate:</span>\r\n                              <span className=\"text-green-400\">{ncd.interest_rate}%</span>\r\n                            </div>\r\n                          )}\r\n                          {ncd.tenure && (\r\n                            <div className=\"flex justify-between\">\r\n                              <span>Tenure:</span>\r\n                              <span className=\"text-blue-400\">{ncd.tenure}</span>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"flex gap-2\">\r\n                          <button\r\n                            onClick={() => handleEdit(ncd, 'ncd')}\r\n                            className=\"flex items-center gap-1 px-3 py-1 bg-blue-500/20 border border-blue-500/30 text-blue-400 rounded-lg text-xs hover:bg-blue-500/30 transition-colors\"\r\n                          >\r\n                            <FiEdit className=\"w-3 h-3\" />\r\n                            Edit\r\n                          </button>\r\n                          <button\r\n                            onClick={() => handleDelete(ncd.id, 'ncd')}\r\n                            className=\"flex items-center gap-1 px-3 py-1 bg-rose-500/20 border border-rose-500/30 text-rose-400 rounded-lg text-xs hover:bg-rose-500/30 transition-colors\"\r\n                          >\r\n                            <FiTrash2 className=\"w-3 h-3\" />\r\n                            Delete\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </motion.div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Bonds FD Tab Content */}\r\n        {activeTab === 'bondsFD' && (\r\n          <div className=\"space-y-8\">\r\n            <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\r\n              <h2 className=\"text-2xl font-bold text-amber-400\">\r\n                Bonds FD ({bondsFD.length})\r\n              </h2>\r\n              <button\r\n                onClick={() => handleNewClick('fd')}\r\n                className=\"flex items-center gap-2 px-4 py-2 bg-amber-500/20 border border-amber-500/30 text-amber-400 rounded-xl hover:bg-amber-500/30 transition-colors\"\r\n              >\r\n                <FiPlus className=\"w-4 h-4\" />\r\n                Add New FD\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"bg-white/5 backdrop-blur-lg border border-white/10 rounded-2xl p-6\">\r\n              {bondsFD.length === 0 ? (\r\n                <div className=\"text-center py-12\">\r\n                  <FiShield className=\"w-16 h-16 text-slate-600 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold text-slate-300 mb-2\">No FDs found</h3>\r\n                  <p className=\"text-slate-400 mb-6\">Add your first FD to get started.</p>\r\n                  <button\r\n                    onClick={() => handleNewClick('fd')}\r\n                    className=\"flex items-center gap-2 px-6 py-3 bg-amber-500/20 border border-amber-500/30 text-amber-400 rounded-xl hover:bg-amber-500/30 transition-colors mx-auto\"\r\n                  >\r\n                    <FiPlus className=\"w-4 h-4\" />\r\n                    Add Your First FD\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                  {bondsFD.map((fd) => (\r\n                    <motion.div\r\n                      key={fd.id}\r\n                      initial={{ opacity: 0, y: 10 }}\r\n                      animate={{ opacity: 1, y: 0 }}\r\n                      className=\"bg-white/5 border border-white/10 rounded-2xl overflow-hidden hover:bg-white/10 transition-colors\"\r\n                    >\r\n                      {fd.image_url && (\r\n                        <div className=\"h-40 bg-slate-800 overflow-hidden\">\r\n                          <img\r\n                            src={getImageUrl(fd.image_url, 'bonds-images') || ''}\r\n                            alt={fd.bank_name}\r\n                            className=\"w-full h-full object-cover\"\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"p-4\">\r\n                        <h3 className=\"font-bold text-white text-lg mb-2 line-clamp-2\">\r\n                          {fd.bank_name}\r\n                        </h3>\r\n                        <div className=\"space-y-2 text-sm text-slate-300 mb-4\">\r\n                          {fd.interest_rate && (\r\n                            <div className=\"flex justify-between\">\r\n                              <span>Interest Rate:</span>\r\n                              <span className=\"text-green-400\">{fd.interest_rate}%</span>\r\n                            </div>\r\n                          )}\r\n                          {fd.tenure && (\r\n                            <div className=\"flex justify-between\">\r\n                              <span>Tenure:</span>\r\n                              <span className=\"text-blue-400\">{fd.tenure}</span>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"flex gap-2\">\r\n                          <button\r\n                            onClick={() => handleEdit(fd, 'fd')}\r\n                            className=\"flex items-center gap-1 px-3 py-1 bg-blue-500/20 border border-blue-500/30 text-blue-400 rounded-lg text-xs hover:bg-blue-500/30 transition-colors\"\r\n                          >\r\n                            <FiEdit className=\"w-3 h-3\" />\r\n                            Edit\r\n                          </button>\r\n                          <button\r\n                            onClick={() => handleDelete(fd.id, 'fd')}\r\n                            className=\"flex items-center gap-1 px-3 py-1 bg-rose-500/20 border border-rose-500/30 text-rose-400 rounded-lg text-xs hover:bg-rose-500/30 transition-colors\"\r\n                          >\r\n                            <FiTrash2 className=\"w-3 h-3\" />\r\n                            Delete\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </motion.div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {(leads.length > 0 || nfoData.length > 0 || bondsNCD.length > 0 || bondsFD.length > 0) && (\r\n          <div className=\"mt-6 text-center\">\r\n            <p className=\"text-slate-400 text-sm\">\r\n              Last updated: {new Date().toLocaleString()}\r\n            </p>\r\n          </div>\r\n        )}\r\n      </motion.div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}