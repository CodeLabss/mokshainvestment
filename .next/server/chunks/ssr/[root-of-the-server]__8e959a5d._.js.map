{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 14, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Tarak/Desktop/mokshainvestment/mokshainvestment/app/admin/dashboard/page.tsx"],"sourcesContent":["// \"use client\";\r\n\r\n// import { useState, useEffect } from \"react\";\r\n// import { useRouter } from \"next/navigation\";\r\n\r\n// interface Category {\r\n//   id: string;\r\n//   name: string;\r\n//   icon: string;\r\n// }\r\n\r\n// export default function DashboardPage() {\r\n//   const router = useRouter();\r\n//   const [name, setName] = useState(\"\");\r\n//   const [logo, setLogo] = useState<File | null>(null);\r\n//   const [categoryId, setCategoryId] = useState(\"\");\r\n//   const [companies, setCompanies] = useState<any[]>([]);\r\n//   const [categories, setCategories] = useState<Category[]>([]);\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   useEffect(() => {\r\n//     const isAdmin = localStorage.getItem(\"isAdmin\");\r\n//     if (!isAdmin) router.push(\"/admin/login\");\r\n\r\n//     initializeData();\r\n//   }, [router]);\r\n\r\n//   async function initializeData() {\r\n//     setLoading(true);\r\n//     try {\r\n//       // First, try to seed categories if they don't exist\r\n//       await fetch(\"/api/admin/seed-categories\", { method: \"POST\" });\r\n      \r\n//       // Then fetch categories and companies\r\n//       await Promise.all([fetchCategories(), fetchCompanies()]);\r\n//     } catch (error) {\r\n//       console.error(\"Error initializing data:\", error);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   }\r\n\r\n//   async function fetchCategories() {\r\n//     try {\r\n//       const response = await fetch(\"/api/admin/categories\");\r\n//       const result = await response.json();\r\n//       if (result.categories) {\r\n//         setCategories(result.categories);\r\n//         // Set the first category as default if none is selected\r\n//         if (!categoryId && result.categories.length > 0) {\r\n//           setCategoryId(result.categories[0].id);\r\n//         }\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching categories:\", error);\r\n//     }\r\n//   }\r\n\r\n//   async function fetchCompanies() {\r\n//     try {\r\n//       const response = await fetch(\"/api/admin/companies\");\r\n//       const result = await response.json();\r\n//       if (result.data) setCompanies(result.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching companies:\", error);\r\n//     }\r\n//   }\r\n\r\n//   async function handleSubmit(e: React.FormEvent) {\r\n//     e.preventDefault();\r\n\r\n//     try {\r\n//       let logoUrl = null;\r\n\r\n//       // Upload logo if provided\r\n//       if (logo) {\r\n//         const formData = new FormData();\r\n//         formData.append(\"file\", logo);\r\n\r\n//         const uploadResponse = await fetch(\"/api/admin/upload\", {\r\n//           method: \"POST\",\r\n//           body: formData,\r\n//         });\r\n\r\n//         const uploadResult = await uploadResponse.json();\r\n//         if (uploadResult.error) {\r\n//           console.error(\"Upload error:\", uploadResult.error);\r\n//           return;\r\n//         }\r\n//         logoUrl = uploadResult.url;\r\n//       }\r\n\r\n//       // Create company\r\n//       const companyResponse = await fetch(\"/api/admin/companies\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify({ name, logoUrl, categoryId }),\r\n//       });\r\n\r\n//       const companyResult = await companyResponse.json();\r\n//       if (companyResult.error) {\r\n//         console.error(\"Company creation error:\", companyResult.error);\r\n//       } else {\r\n//         setName(\"\");\r\n//         setLogo(null);\r\n//         // Reset to first category or empty\r\n//         if (categories.length > 0) {\r\n//           setCategoryId(categories[0].id);\r\n//         } else {\r\n//           setCategoryId(\"\");\r\n//         }\r\n//         fetchCompanies();\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error:\", error);\r\n//     }\r\n//   }\r\n\r\n//   if (loading) {\r\n//     return (\r\n//       <div className=\"p-6\">\r\n//         <h1 className=\"text-2xl font-bold mb-6\">Admin Dashboard</h1>\r\n//         <div className=\"flex items-center justify-center h-64\">\r\n//           <div className=\"text-lg\">Loading...</div>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"p-6\">\r\n//       <h1 className=\"text-2xl font-bold mb-6\">Admin Dashboard</h1>\r\n\r\n//       {/* Add Company Form */}\r\n//       <form onSubmit={handleSubmit} className=\"bg-white p-4 rounded shadow-md mb-6 w-96\">\r\n//         <h2 className=\"text-lg font-semibold mb-4\">Add Insurance Company</h2>\r\n\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Company Name\"\r\n//           className=\"w-full border p-2 mb-3 rounded\"\r\n//           value={name}\r\n//           onChange={(e) => setName(e.target.value)}\r\n//           required\r\n//         />\r\n\r\n//         <select\r\n//           className=\"w-full border p-2 mb-3 rounded\"\r\n//           value={categoryId}\r\n//           onChange={(e) => setCategoryId(e.target.value)}\r\n//           required\r\n//         >\r\n//           <option value=\"\">Select a category</option>\r\n//           {categories.map((category) => (\r\n//             <option key={category.id} value={category.id}>\r\n//               {category.icon} {category.name}\r\n//             </option>\r\n//           ))}\r\n//         </select>\r\n\r\n//         <input\r\n//           type=\"file\"\r\n//           accept=\"image/*\"\r\n//           className=\"w-full mb-3\"\r\n//           onChange={(e) => setLogo(e.target.files?.[0] || null)}\r\n//         />\r\n\r\n//         <button \r\n//           type=\"submit\" \r\n//           className=\"w-full bg-blue-600 text-white p-2 rounded disabled:bg-gray-400\"\r\n//           disabled={!categoryId}\r\n//         >\r\n//           Add Company\r\n//         </button>\r\n//       </form>\r\n\r\n//       {/* Companies List */}\r\n//       <h2 className=\"text-lg font-semibold mb-3\">Existing Companies</h2>\r\n//       <div className=\"grid grid-cols-2 gap-4\">\r\n//         {companies.map((company) => (\r\n//           <div key={company.id} className=\"border p-3 rounded flex items-center gap-3\">\r\n//             {company.logo_url && (\r\n//               <img src={company.logo_url} alt={company.name} className=\"w-12 h-12 object-contain\" />\r\n//             )}\r\n//             <span>{company.name}</span>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n    // working with delete and update but not good UI\r\n// \"use client\";\r\n\r\n// import { useState, useEffect } from \"react\";\r\n// import { useRouter } from \"next/navigation\";\r\n// import Navbar from \"@/components/Navbar\";\r\n// import Footer from \"@/components/Footer\";\r\n// import toast, { Toaster } from \"react-hot-toast\";\r\n\r\n// interface Category { id: string; name: string; icon: string; }\r\n\r\n// export default function DashboardPage() {\r\n//   const router = useRouter();\r\n//   const [name, setName] = useState(\"\");\r\n//   const [logo, setLogo] = useState<File | null>(null);\r\n//   const [categoryId, setCategoryId] = useState(\"\");\r\n//   const [companies, setCompanies] = useState<any[]>([]);\r\n//   const [categories, setCategories] = useState<Category[]>([]);\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   useEffect(() => {\r\n//     if (!localStorage.getItem(\"isAdmin\")) router.push(\"/admin/login\");\r\n//     initializeData();\r\n//   }, [router]);\r\n\r\n//   async function initializeData() {\r\n//     setLoading(true);\r\n//     try {\r\n//       await fetch(\"/api/admin/seed-categories\", { method: \"POST\" });\r\n//       await Promise.all([fetchCategories(), fetchCompanies()]);\r\n//     } catch { toast.error(\"Failed to initialize data\"); }\r\n//     finally { setLoading(false); }\r\n//   }\r\n\r\n//   async function fetchCategories() {\r\n//     try {\r\n//       const res = await fetch(\"/api/admin/categories\");\r\n//       const result = await res.json();\r\n//       if (result.categories) { setCategories(result.categories); if (!categoryId && result.categories.length>0) setCategoryId(result.categories[0].id); }\r\n//     } catch { toast.error(\"Failed to fetch categories\"); }\r\n//   }\r\n\r\n//   async function fetchCompanies() {\r\n//     try {\r\n//       const res = await fetch(\"/api/admin/companies\");\r\n//       const text = await res.text();\r\n//       const result = JSON.parse(text);\r\n//       if (result.data) setCompanies(result.data);\r\n//       else toast.error(result.error || \"Failed to fetch companies\");\r\n//     } catch { toast.error(\"Failed to fetch companies\"); }\r\n//   }\r\n\r\n//   async function handleSubmit(e: React.FormEvent) {\r\n//     e.preventDefault();\r\n//     try {\r\n//       let logoUrl = null;\r\n//       if (logo) {\r\n//         const formData = new FormData();\r\n//         formData.append(\"file\", logo);\r\n//         const uploadRes = await fetch(\"/api/admin/upload\", { method:\"POST\", body: formData });\r\n//         const uploadResult = JSON.parse(await uploadRes.text());\r\n//         if (uploadResult.error) return toast.error(uploadResult.error);\r\n//         logoUrl = uploadResult.url;\r\n//       }\r\n//       const res = await fetch(\"/api/admin/companies\", { method:\"POST\", headers:{\"Content-Type\":\"application/json\"}, body:JSON.stringify({name, logoUrl, categoryId}) });\r\n//       const result = JSON.parse(await res.text());\r\n//       if (result.error) return toast.error(result.error);\r\n//       setName(\"\"); setLogo(null);\r\n//       toast.success(\"Company added!\");\r\n//       fetchCompanies();\r\n//     } catch { toast.error(\"Failed to add company\"); }\r\n//   }\r\n\r\n//   async function handleDelete(id:string) {\r\n//     if(!confirm(\"Are you sure?\")) return;\r\n//     const toastId = toast.loading(\"Deleting...\");\r\n//     try {\r\n//       const res = await fetch(`/api/admin/companies/${id}`, { method:\"DELETE\" });\r\n//       const result = JSON.parse(await res.text());\r\n//       if(result.success) toast.success(\"Deleted!\", {id:toastId});\r\n//       else toast.error(result.error || \"Delete failed\", {id:toastId});\r\n//       fetchCompanies();\r\n//     } catch { toast.error(\"Delete failed\",{id:toastId}); }\r\n//   }\r\n\r\n//   async function handleUpdateLogo(id:string) {\r\n//     const file:File|null = await new Promise(resolve=>{\r\n//       const input=document.createElement(\"input\");\r\n//       input.type=\"file\"; input.accept=\"image/*\";\r\n//       input.onchange = () => resolve(input.files?.[0]||null);\r\n//       input.click();\r\n//     });\r\n//     if(!file) return;\r\n//     const toastId = toast.loading(\"Updating logo...\");\r\n//     try {\r\n//       const formData=new FormData();\r\n//       formData.append(\"file\", file);\r\n//       const uploadRes=await fetch(\"/api/admin/upload\",{method:\"POST\",body:formData});\r\n//       const uploadResult=JSON.parse(await uploadRes.text());\r\n//       if(uploadResult.error) return toast.error(uploadResult.error,{id:toastId});\r\n//       const res = await fetch(`/api/admin/companies/${id}`, { method:\"PUT\", headers:{\"Content-Type\":\"application/json\"}, body:JSON.stringify({logoUrl:uploadResult.url}) });\r\n//       const result=JSON.parse(await res.text());\r\n//       if(result.success) toast.success(\"Logo updated!\",{id:toastId});\r\n//       else toast.error(result.error || \"Update failed\",{id:toastId});\r\n//       fetchCompanies();\r\n//     } catch { toast.error(\"Update failed\",{id:toastId}); }\r\n//   }\r\n\r\n//   if(loading) return <><Navbar/><main className=\"p-8 text-center\">Loading...</main><Footer/><Toaster/></>;\r\n\r\n//   return (\r\n//     <>\r\n//       <Navbar/>\r\n//       <main className=\"p-8 max-w-6xl mx-auto\">\r\n//         <Toaster position=\"top-right\"/>\r\n//         <h1 className=\"text-3xl font-bold mb-8 text-center\">Admin Dashboard</h1>\r\n\r\n//         {/* Add Company Form */}\r\n//         <section className=\"bg-white p-6 rounded-xl shadow mb-10 border\">\r\n//           <h2 className=\"text-xl font-semibold mb-4\">➕ Add Insurance Company</h2>\r\n//           <form onSubmit={handleSubmit} className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n//             <input type=\"text\" placeholder=\"Company Name\" className=\"w-full border p-2 rounded\" value={name} onChange={(e)=>setName(e.target.value)} required/>\r\n//             <select className=\"w-full border p-2 rounded\" value={categoryId} onChange={(e)=>setCategoryId(e.target.value)} required>\r\n//               <option value=\"\">Select a category</option>\r\n//               {categories.map(cat=> <option key={cat.id} value={cat.id}>{cat.icon} {cat.name}</option>)}\r\n//             </select>\r\n//             <input type=\"file\" accept=\"image/*\" className=\"w-full border rounded p-2\" onChange={e=>setLogo(e.target.files?.[0]||null)}/>\r\n//             <button type=\"submit\" className=\"bg-blue-600 text-white py-2 px-4 rounded hover:bg-blue-700 disabled:bg-gray-400\" disabled={!categoryId}>Add Company</button>\r\n//           </form>\r\n//         </section>\r\n\r\n//         {/* Companies Table */}\r\n//         <section>\r\n//           <h2 className=\"text-xl font-semibold mb-4\">🏢 Existing Companies</h2>\r\n//           {categories.map(cat=>(\r\n//             <div key={cat.id} className=\"mb-8\">\r\n//               <h3 className=\"text-lg font-bold mb-2\">{cat.icon} {cat.name}</h3>\r\n//               <div className=\"overflow-x-auto\">\r\n//                 <table className=\"w-full border-collapse border\">\r\n//                   <thead><tr className=\"bg-gray-100\"><th className=\"border p-2\">Logo</th><th className=\"border p-2\">Name</th><th className=\"border p-2\">Actions</th></tr></thead>\r\n//                   <tbody>\r\n//                     {companies.filter(c=>c.category_id===cat.id).map(company=>(\r\n//                       <tr key={company.id} className=\"hover:bg-gray-50\">\r\n//                         <td className=\"border p-2 text-center\">{company.logo_url ? <img src={company.logo_url} className=\"w-12 h-12 mx-auto object-contain\"/> : <span className=\"text-gray-400\">No Logo</span>}</td>\r\n//                         <td className=\"border p-2\">{company.name}</td>\r\n//                         <td className=\"border p-2 text-center space-x-2\">\r\n//                           <button className=\"px-3 py-1 text-sm bg-red-500 text-white rounded hover:bg-red-600\" onClick={()=>handleDelete(company.id)}>Delete</button>\r\n//                           <button className=\"px-3 py-1 text-sm bg-gray-200 rounded hover:bg-gray-300\" onClick={()=>handleUpdateLogo(company.id)}>Update Logo</button>\r\n//                         </td>\r\n//                       </tr>\r\n//                     ))}\r\n//                   </tbody>\r\n//                 </table>\r\n//               </div>\r\n//             </div>\r\n//           ))}\r\n//         </section>\r\n//       </main>\r\n//       <Footer/>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// working perfect just a few  changes\r\n// \"use client\";\r\n\r\n// import { useState, useEffect } from \"react\";\r\n// import { useRouter } from \"next/navigation\";\r\n// import Navbar from \"@/components/Navbar\";\r\n// import Footer from \"@/components/Footer\";\r\n// import toast, { Toaster } from \"react-hot-toast\";\r\n\r\n// interface Category { \r\n//   id: string; \r\n//   name: string; \r\n//   icon: string; \r\n// }\r\n\r\n// interface Company {\r\n//   id: string;\r\n//   name: string;\r\n//   logo_url: string | null;\r\n//   category_id: string;\r\n// }\r\n\r\n// export default function DashboardPage() {\r\n//   const router = useRouter();\r\n//   const [name, setName] = useState(\"\");\r\n//   const [logo, setLogo] = useState<File | null>(null);\r\n//   const [categoryId, setCategoryId] = useState(\"\");\r\n//   const [companies, setCompanies] = useState<Company[]>([]);\r\n//   const [categories, setCategories] = useState<Category[]>([]);\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   useEffect(() => {\r\n//     if (!localStorage.getItem(\"isAdmin\")) {\r\n//       router.push(\"/admin/login\");\r\n//       return;\r\n//     }\r\n//     initializeData();\r\n//   }, [router]);\r\n\r\n//   const initializeData = async () => {\r\n//     setLoading(true);\r\n//     try {\r\n//       await fetch(\"/api/admin/seed-categories\", { method: \"POST\" });\r\n//       await Promise.all([fetchCategories(), fetchCompanies()]);\r\n//     } catch (error) {\r\n//       toast.error(\"Failed to initialize data\");\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   const fetchCategories = async () => {\r\n//     try {\r\n//       const res = await fetch(\"/api/admin/categories\");\r\n//       const result = await res.json();\r\n//       if (result.categories) {\r\n//         setCategories(result.categories);\r\n//         if (!categoryId && result.categories.length > 0) {\r\n//           setCategoryId(result.categories[0].id);\r\n//         }\r\n//       }\r\n//     } catch (error) {\r\n//       toast.error(\"Failed to fetch categories\");\r\n//     }\r\n//   };\r\n\r\n//   const fetchCompanies = async () => {\r\n//     try {\r\n//       const res = await fetch(\"/api/admin/companies\");\r\n//       const result = await res.json();\r\n//       if (result.data) {\r\n//         setCompanies(result.data);\r\n//       } else {\r\n//         toast.error(result.error || \"Failed to fetch companies\");\r\n//       }\r\n//     } catch (error) {\r\n//       toast.error(\"Failed to fetch companies\");\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = async (e: React.FormEvent) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       let logoUrl = null;\r\n//       if (logo) {\r\n//         const formData = new FormData();\r\n//         formData.append(\"file\", logo);\r\n//         const uploadRes = await fetch(\"/api/admin/upload\", { \r\n//           method: \"POST\", \r\n//           body: formData \r\n//         });\r\n//         const uploadResult = await uploadRes.json();\r\n//         if (uploadResult.error) {\r\n//           toast.error(uploadResult.error);\r\n//           return;\r\n//         }\r\n//         logoUrl = uploadResult.url;\r\n//       }\r\n      \r\n//       const res = await fetch(\"/api/admin/companies\", { \r\n//         method: \"POST\", \r\n//         headers: { \"Content-Type\": \"application/json\" }, \r\n//         body: JSON.stringify({ name, logoUrl, categoryId }) \r\n//       });\r\n//       const result = await res.json();\r\n      \r\n//       if (result.error) {\r\n//         toast.error(result.error);\r\n//         return;\r\n//       }\r\n      \r\n//       setName(\"\"); \r\n//       setLogo(null);\r\n//       toast.success(\"Company added!\");\r\n//       fetchCompanies();\r\n//     } catch (error) {\r\n//       toast.error(\"Failed to add company\");\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async (id: string) => {\r\n//     if (!confirm(\"Are you sure you want to delete this company?\")) return;\r\n    \r\n//     const toastId = toast.loading(\"Deleting...\");\r\n//     try {\r\n//       const res = await fetch(`/api/admin/companies/${id}`, { method: \"DELETE\" });\r\n//       const result = await res.json();\r\n      \r\n//       if (result.success) {\r\n//         toast.success(\"Company deleted!\", { id: toastId });\r\n//       } else {\r\n//         toast.error(result.error || \"Delete failed\", { id: toastId });\r\n//       }\r\n//       fetchCompanies();\r\n//     } catch (error) {\r\n//       toast.error(\"Delete failed\", { id: toastId });\r\n//     }\r\n//   };\r\n\r\n//   const handleUpdateLogo = async (id: string) => {\r\n//     const fileInput = document.createElement(\"input\");\r\n//     fileInput.type = \"file\";\r\n//     fileInput.accept = \"image/*\";\r\n    \r\n//     fileInput.onchange = async (e) => {\r\n//       const file = (e.target as HTMLInputElement).files?.[0] || null;\r\n//       if (!file) return;\r\n      \r\n//       const toastId = toast.loading(\"Updating logo...\");\r\n//       try {\r\n//         const formData = new FormData();\r\n//         formData.append(\"file\", file);\r\n        \r\n//         const uploadRes = await fetch(\"/api/admin/upload\", {\r\n//           method: \"POST\",\r\n//           body: formData\r\n//         });\r\n//         const uploadResult = await uploadRes.json();\r\n        \r\n//         if (uploadResult.error) {\r\n//           toast.error(uploadResult.error, { id: toastId });\r\n//           return;\r\n//         }\r\n        \r\n//         const res = await fetch(`/api/admin/companies/${id}`, { \r\n//           method: \"PUT\", \r\n//           headers: { \"Content-Type\": \"application/json\" }, \r\n//           body: JSON.stringify({ logoUrl: uploadResult.url }) \r\n//         });\r\n//         const result = await res.json();\r\n        \r\n//         if (result.success) {\r\n//           toast.success(\"Logo updated!\", { id: toastId });\r\n//         } else {\r\n//           toast.error(result.error || \"Update failed\", { id: toastId });\r\n//         }\r\n//         fetchCompanies();\r\n//       } catch (error) {\r\n//         toast.error(\"Update failed\", { id: toastId });\r\n//       }\r\n//     };\r\n    \r\n//     fileInput.click();\r\n//   };\r\n\r\n//   if (loading) {\r\n//     return (\r\n//       <>\r\n//         <Navbar />\r\n//         <main className=\"min-h-screen flex items-center justify-center\">\r\n//           <div className=\"text-lg\">Loading...</div>\r\n//         </main>\r\n//         <Footer />\r\n//         <Toaster />\r\n//       </>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <>\r\n//       <Navbar />\r\n//       <main className=\"min-h-screen bg-gray-50 py-8\">\r\n//         <div className=\"container mx-auto px-4 max-w-6xl\">\r\n//           <Toaster position=\"top-right\" />\r\n          \r\n//           <div className=\"mb-8 text-center\">\r\n//             <h1 className=\"text-3xl font-bold text-gray-800\">Admin Dashboard</h1>\r\n//             <p className=\"text-gray-600 mt-2\">Manage insurance companies and categories</p>\r\n//           </div>\r\n\r\n//           {/* Add Company Form */}\r\n//           <div className=\"bg-white rounded-xl shadow-sm p-6 mb-10 border border-gray-100\">\r\n//             <h2 className=\"text-xl font-semibold text-gray-800 mb-6\">Add New Insurance Company</h2>\r\n//             <form onSubmit={handleSubmit} className=\"grid grid-cols-1 md:grid-cols-2 gap-5\">\r\n//               <div>\r\n//                 <label className=\"block text-sm font-medium text-gray-700 mb-2\">Company Name</label>\r\n//                 <input \r\n//                   type=\"text\" \r\n//                   placeholder=\"Enter company name\" \r\n//                   className=\"w-full border border-gray-300 rounded-lg px-4 py-3 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition\" \r\n//                   value={name} \r\n//                   onChange={(e) => setName(e.target.value)} \r\n//                   required \r\n//                 />\r\n//               </div>\r\n              \r\n//               <div>\r\n//                 <label className=\"block text-sm font-medium text-gray-700 mb-2\">Category</label>\r\n//                 <select \r\n//                   className=\"w-full border border-gray-300 rounded-lg px-4 py-3 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition\" \r\n//                   value={categoryId} \r\n//                   onChange={(e) => setCategoryId(e.target.value)} \r\n//                   required\r\n//                 >\r\n//                   <option value=\"\">Select a category</option>\r\n//                   {categories.map(cat => (\r\n//                     <option key={cat.id} value={cat.id}>\r\n//                       {cat.icon} {cat.name}\r\n//                     </option>\r\n//                   ))}\r\n//                 </select>\r\n//               </div>\r\n              \r\n//               <div>\r\n//                 <label className=\"block text-sm font-medium text-gray-700 mb-2\">Company Logo</label>\r\n//                 <input \r\n//                   type=\"file\" \r\n//                   accept=\"image/*\" \r\n//                   className=\"w-full border border-gray-300 rounded-lg px-4 py-2 text-sm file:mr-4 file:py-2 file:px-4 file:rounded-lg file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100 transition\" \r\n//                   onChange={e => setLogo(e.target.files?.[0] || null)} \r\n//                 />\r\n//               </div>\r\n              \r\n//               <div className=\"flex items-end\">\r\n//                 <button \r\n//                   type=\"submit\" \r\n//                   className=\"w-full bg-blue-600 text-white py-3 px-4 rounded-lg hover:bg-blue-700 transition disabled:bg-gray-400 disabled:cursor-not-allowed\" \r\n//                   disabled={!categoryId}\r\n//                 >\r\n//                   Add Company\r\n//                 </button>\r\n//               </div>\r\n//             </form>\r\n//           </div>\r\n\r\n//           {/* Companies List */}\r\n//           <div>\r\n//             <h2 className=\"text-2xl font-semibold text-gray-800 mb-6\">Existing Companies</h2>\r\n            \r\n//             {categories.map(category => {\r\n//               const categoryCompanies = companies.filter(company => company.category_id === category.id);\r\n              \r\n//               if (categoryCompanies.length === 0) return null;\r\n              \r\n//               return (\r\n//                 <div key={category.id} className=\"mb-10\">\r\n//                   <div className=\"flex items-center mb-4\">\r\n//                     <span className=\"text-2xl mr-2\">{category.icon}</span>\r\n//                     <h3 className=\"text-xl font-semibold text-gray-800\">{category.name}</h3>\r\n//                     <span className=\"ml-3 bg-blue-100 text-blue-800 text-sm font-medium px-3 py-1 rounded-full\">\r\n//                       {categoryCompanies.length} companies\r\n//                     </span>\r\n//                   </div>\r\n                  \r\n//                   <div className=\"bg-white rounded-xl shadow-sm overflow-hidden border border-gray-100\">\r\n//                     <table className=\"w-full\">\r\n//                       <thead className=\"bg-gray-50\">\r\n//                         <tr>\r\n//                           <th className=\"text-left py-4 px-6 font-medium text-gray-600\">Logo</th>\r\n//                           <th className=\"text-left py-4 px-6 font-medium text-gray-600\">Company Name</th>\r\n//                           <th className=\"text-right py-4 px-6 font-medium text-gray-600\">Actions</th>\r\n//                         </tr>\r\n//                       </thead>\r\n//                       <tbody className=\"divide-y divide-gray-100\">\r\n//                         {categoryCompanies.map(company => (\r\n//                           <tr key={company.id} className=\"hover:bg-gray-50 transition\">\r\n//                             <td className=\"py-4 px-6\">\r\n//                               {company.logo_url ? (\r\n//                                 <img \r\n//                                   src={company.logo_url} \r\n//                                   alt={company.name} \r\n//                                   className=\"w-12 h-12 object-contain mx-auto\" \r\n//                                 />\r\n//                               ) : (\r\n//                                 <div className=\"w-12 h-12 bg-gray-100 rounded-lg flex items-center justify-center mx-auto\">\r\n//                                   <span className=\"text-gray-400 text-xs\">No Logo</span>\r\n//                                 </div>\r\n//                               )}\r\n//                             </td>\r\n//                             <td className=\"py-4 px-6 font-medium text-gray-800\">{company.name}</td>\r\n//                             <td className=\"py-4 px-6\">\r\n//                               <div className=\"flex justify-end space-x-3\">\r\n//                                 <button \r\n//                                   className=\"px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition\"\r\n//                                   onClick={() => handleUpdateLogo(company.id)}\r\n//                                 >\r\n//                                   Update Logo\r\n//                                 </button>\r\n//                                 <button \r\n//                                   className=\"px-4 py-2 bg-red-100 text-red-700 rounded-lg hover:bg-red-200 transition\"\r\n//                                   onClick={() => handleDelete(company.id)}\r\n//                                 >\r\n//                                   Delete\r\n//                                 </button>\r\n//                               </div>\r\n//                             </td>\r\n//                           </tr>\r\n//                         ))}\r\n//                       </tbody>\r\n//                     </table>\r\n//                   </div>\r\n//                 </div>\r\n//               );\r\n//             })}\r\n//           </div>\r\n//         </div>\r\n//       </main>\r\n//       <Footer />\r\n//     </>\r\n//   );\r\n// }\r\n\r\n"],"names":[],"mappings":"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","debugId":null}}]
}