{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Tarak/Desktop/mokshainvestment/mokshainvestment/components/WhatsAppFloating.tsx"],"sourcesContent":["import Link from \"next/link\";\r\nimport React from \"react\";\r\nimport { FaWhatsapp } from \"react-icons/fa\";\r\n\r\n\r\nconst WHATSAPP_PHONE = \"9029026060\"; // replace with your real number\r\n\r\nexport default function WhatsAppFloating() {\r\n  const wa = `https://wa.me/${WHATSAPP_PHONE.replace(/[^\\d]/g, \"\")}`;\r\n  return (\r\n    <Link\r\n      href={wa}\r\n      target=\"_blank\"\r\n      className=\"fixed bottom-5 right-5 z-50 inline-flex items-center justify-center w-12 h-12 rounded-full bg-emerald-500 text-white shadow-lg hover:bg-emerald-600\"\r\n      aria-label=\"Chat on WhatsApp\"\r\n    >\r\n      <span className=\"text-xl\">\r\n      <FaWhatsapp />\r\n      </span>\r\n    </Link>\r\n  );\r\n}\r\n\r\n\r\n"],"names":[],"mappings":";;;;;AAAA;AAEA;;;;AAGA,MAAM,iBAAiB,cAAc,gCAAgC;AAEtD,SAAS;IACtB,MAAM,KAAK,CAAC,cAAc,EAAE,eAAe,OAAO,CAAC,UAAU,KAAK;IAClE,qBACE,kQAAC,2LAAI;QACH,MAAM;QACN,QAAO;QACP,WAAU;QACV,cAAW;kBAEX,cAAA,kQAAC;YAAK,WAAU;sBAChB,cAAA,kQAAC,gLAAU;;;;;;;;;;;;;;;AAIjB","debugId":null}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Tarak/Desktop/mokshainvestment/mokshainvestment/components/BgComponent.tsx"],"sourcesContent":["// \"use client\"\r\n\r\n// import { useEffect, useRef } from \"react\"\r\n// import * as THREE from \"three\"\r\n\r\n// function hexToRgb(hex: string) {\r\n//   const r = Number.parseInt(hex.slice(1, 3), 16) / 255\r\n//   const g = Number.parseInt(hex.slice(3, 5), 16) / 255\r\n//   const b = Number.parseInt(hex.slice(5, 7), 16) / 255\r\n//   return [r, g, b]\r\n// }\r\n\r\n// export function BgComponent() {\r\n//   const containerRef = useRef<HTMLDivElement>(null)\r\n//   const canvasRef = useRef<HTMLDivElement>(null)\r\n//   const rendererRef = useRef<THREE.WebGLRenderer | null>(null)\r\n  \r\n//   const materialsRef = useRef<{\r\n//     fluidMaterial: THREE.ShaderMaterial | null;\r\n//     displayMaterial: THREE.ShaderMaterial | null;\r\n//   }>({ fluidMaterial: null, displayMaterial: null })\r\n  \r\n//   const mouseRef = useRef({ x: 0, y: 0, prevX: 0, prevY: 0, lastMoveTime: 0 })\r\n\r\n//   useEffect(() => {\r\n//     if (!containerRef.current || !canvasRef.current) return\r\n\r\n//     const vertexShader = `\r\n//       varying vec2 vUv;\r\n//       void main(){\r\n//         vUv = uv;\r\n//         gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n//       }\r\n//     `\r\n\r\n//     const fluidShader = `\r\n//       uniform float iTime;\r\n//       uniform vec2 iResolution;\r\n//       uniform vec4 iMouse;\r\n//       uniform int iFrame;\r\n//       uniform sampler2D iPreviousFrame;\r\n//       uniform float uBrushSize;\r\n//       uniform float uBrushStrength;\r\n//       uniform float uFluidDecay;\r\n//       uniform float uTrailLength;\r\n//       uniform float uStopDecay;\r\n//       varying vec2 vUv;\r\n\r\n//       vec2 ur, U;\r\n\r\n//       float ln(vec2 p, vec2 a, vec2 b) {\r\n//         return length(p - a - (b - a) * clamp(dot(p - a, b - a) / dot(b - a, b - a), 0.0, 1.0));\r\n//       }\r\n      \r\n//       vec4 t(vec2 v, int a, int b) {\r\n//         return texture2D(iPreviousFrame, fract((v + vec2(float(a), float(b))) / ur));\r\n//       }\r\n      \r\n//       vec4 t(vec2 v) {\r\n//         return texture2D(iPreviousFrame, fract(v / ur));\r\n//       }\r\n\r\n//       float area(vec2 a, vec2 b, vec2 c) {\r\n//         float A = length(b - c), B = length(c - a), C = length(a - b), s = 0.5 * (A + B + C);\r\n//         return sqrt(max(0.0, s * (s - A) * (s - B) * (s - C))); \r\n//       }\r\n\r\n//       void main() {\r\n//         U = vUv * iResolution;\r\n//         ur = iResolution.xy;\r\n\r\n//         if (iFrame < 1) {\r\n//           float w = 0.5 + sin(0.2 * U.x) * 0.5;\r\n//           float q = length(U - 0.5 * ur);\r\n//           gl_FragColor = vec4(0.1 * exp(-0.001 * q), 0.0, w, 1.0);\r\n//         } else {\r\n//           vec2 v = U;\r\n//           vec2 A = v + vec2(1, 1);\r\n//           vec2 B = v + vec2(1, -1);\r\n//           vec2 C = v + vec2(-1, 1);\r\n//           vec2 D = v + vec2(-1, -1);\r\n\r\n//           for (int i = 0; i < 8; i++) {\r\n//             v -= t(v).xy;\r\n//             A -= t(A).xy;\r\n//             B -= t(B).xy;\r\n//             C -= t(C).xy;\r\n//             D -= t(D).xy;\r\n//           }\r\n\r\n//           vec4 me = t(v);\r\n//           vec4 n = t(v, 0, 1);\r\n//           vec4 e = t(v, 1, 0);\r\n//           vec4 s = t(v, 0, -1);\r\n//           vec4 w = t(v, -1, 0);\r\n//           vec4 ne = 0.25 * (n + e + s + w);\r\n//           me = mix(t(v), ne, vec4(0.15, 0.15, 0.95, 0.0));\r\n//           me.z = me.z - 0.01 * ((area(A, B, C) + area(B, C, D)) - 4.0);\r\n\r\n//           vec4 pr = vec4(e.z, w.z, n.z, s.z);\r\n//           me.xy = me.xy + 100.0 * vec2(pr.x - pr.y, pr.z - pr.w) / ur;\r\n\r\n//           me.xy *= uFluidDecay;\r\n//           me.z *= uTrailLength;\r\n          \r\n//           if (iMouse.z > 0.0) {\r\n//             vec2 mousePos = iMouse.xy;\r\n//             vec2 mousePrev = iMouse.zw;\r\n//             vec2 mouseVel = mousePos - mousePrev;\r\n//             float velMagnitude = length(mouseVel);\r\n//             float q = ln(U, mousePos, mousePrev);\r\n//             vec2 m = mousePos - mousePrev;\r\n//             float l = length(m);\r\n//             if (l > 0.0) m = min(10.0, 10.0) * m / l;\r\n\r\n//             float brushSizeFactor = 1e-4 / uBrushSize;\r\n//             float strengthFactor = 0.03 * uBrushStrength;\r\n\r\n//             float falloff = exp(-brushSizeFactor * q * q * q);\r\n//             falloff = pow(falloff, 0.5);\r\n\r\n//             me.xyz += strengthFactor * falloff * vec3(m, 10.0);\r\n\r\n//             if (velMagnitude < 2.0) {\r\n//               float distToCursor = length(U - mousePos);\r\n//               float influence = exp(-distToCursor * 0.01);\r\n//               float cursorDecay = mix(1.0, uStopDecay, influence);\r\n//               me.xy *= cursorDecay;\r\n//               me.z *= cursorDecay;\r\n//             }\r\n//           }\r\n\r\n//           gl_FragColor = clamp(me, -0.4, 0.4);\r\n//         }\r\n//       }\r\n//     `\r\n\r\n//     const displayShader = `\r\n//       uniform float iTime;\r\n//       uniform vec2 iResolution;\r\n//       uniform sampler2D iFluid;\r\n//       uniform float uDistortionAmount;\r\n//       uniform vec3 uColor1;\r\n//       uniform vec3 uColor2;\r\n//       uniform vec3 uColor3;\r\n//       uniform vec3 uColor4;\r\n//       uniform float uColorIntensity;\r\n//       uniform float uSoftness;\r\n//       varying vec2 vUv;\r\n\r\n//       void main() {\r\n//         vec2 fragCoord = vUv * iResolution;\r\n\r\n//         vec4 fluid = texture2D(iFluid, vUv);\r\n//         vec2 fluidVel = fluid.xy;\r\n\r\n//         float mr = min(iResolution.x, iResolution.y);\r\n//         vec2 uv = (fragCoord * 2.0 - iResolution.xy) / mr;\r\n\r\n//         uv += fluidVel * (0.5 * uDistortionAmount);\r\n\r\n//         float d = -iTime * 0.5;\r\n//         float a = 0.0;\r\n//         for (float i = 0.0; i < 8.0; ++i) {\r\n//           a += cos(i - d - a * uv.x);\r\n//           d += sin(uv.y * i + a);\r\n//         }\r\n\r\n//         d += iTime * 0.5;\r\n\r\n//         float mixer1 = cos(uv.x * d) * 0.5 + 0.5;\r\n//         float mixer2 = cos(uv.y * a) * 0.5 + 0.5;\r\n//         float mixer3 = sin(d + a) * 0.5 + 0.5;\r\n\r\n//         float smoothAmount = clamp(uSoftness * 0.1, 0.0, 0.9);\r\n//         mixer1 = mix(mixer1, 0.5, smoothAmount);\r\n//         mixer2 = mix(mixer2, 0.5, smoothAmount);\r\n//         mixer3 = mix(mixer3, 0.5, smoothAmount);\r\n\r\n//         vec3 col = mix(uColor1, uColor2, mixer1);\r\n//         col = mix(col, uColor3, mixer2);\r\n//         col = mix(col, uColor4, mixer3 * 0.4);\r\n\r\n//         col *= uColorIntensity;\r\n\r\n//         gl_FragColor = vec4(col, 1.0);\r\n//       }\r\n//     `\r\n\r\n//     const camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1)\r\n//     const renderer = new THREE.WebGLRenderer({ antialias: true })\r\n//     rendererRef.current = renderer\r\n\r\n//     renderer.setSize(window.innerWidth, window.innerHeight)\r\n//     canvasRef.current.appendChild(renderer.domElement)\r\n\r\n//     const fluidTarget1 = new THREE.WebGLRenderTarget(\r\n//       window.innerWidth,\r\n//       window.innerHeight,\r\n//       {\r\n//         minFilter: THREE.LinearFilter,\r\n//         magFilter: THREE.LinearFilter,\r\n//         format: THREE.RGBAFormat,\r\n//         type: THREE.FloatType,\r\n//       }\r\n//     )\r\n\r\n//     const fluidTarget2 = new THREE.WebGLRenderTarget(\r\n//       window.innerWidth,\r\n//       window.innerHeight,\r\n//       {\r\n//         minFilter: THREE.LinearFilter,\r\n//         magFilter: THREE.LinearFilter,\r\n//         format: THREE.RGBAFormat,\r\n//         type: THREE.FloatType,\r\n//       }\r\n//     )\r\n\r\n//     let currentFluidTarget = fluidTarget1\r\n//     let previousFluidTarget = fluidTarget2\r\n//     let frameCount = 0\r\n\r\n//     const fluidMaterial = new THREE.ShaderMaterial({\r\n//       uniforms: {\r\n//         iTime: { value: 0 },\r\n//         iResolution: {\r\n//           value: new THREE.Vector2(window.innerWidth, window.innerHeight),\r\n//         },\r\n//         iMouse: { value: new THREE.Vector4(0, 0, 0, 0) },\r\n//         iFrame: { value: 0 },\r\n//         iPreviousFrame: { value: null },\r\n//         uBrushSize: { value: 25 },\r\n//         uBrushStrength: { value: 0.5 },\r\n//         uFluidDecay: { value: 0.98 },\r\n//         uTrailLength: { value: 0.8 },\r\n//         uStopDecay: { value: 0.85 },\r\n//       },\r\n//       vertexShader,\r\n//       fragmentShader: fluidShader,\r\n//     })\r\n\r\n//     const displayMaterial = new THREE.ShaderMaterial({\r\n//       uniforms: {\r\n//         iTime: { value: 0 },\r\n//         iResolution: {\r\n//           value: new THREE.Vector2(window.innerWidth, window.innerHeight),\r\n//         },\r\n//         iFluid: { value: null },\r\n//         uDistortionAmount: { value: 2.5 },\r\n//         uColor1: { value: new THREE.Vector3(0.7215686274509804, 1, 0.9686274509803922) },\r\n//         uColor2: { value: new THREE.Vector3(0.43137254901960786, 0.20392156862745098, 0.4) },\r\n//         uColor3: { value: new THREE.Vector3(0.00392156862745098, 0.2, 1) },\r\n//         uColor4: { value: new THREE.Vector3(0.4, 0.8196078431372549, 0.996078431372549) },\r\n//         uColorIntensity: { value: 1.0 },\r\n//         uSoftness: { value: 1.0 }\r\n//       },\r\n//       vertexShader,\r\n//       fragmentShader: displayShader,\r\n//     })\r\n\r\n//     materialsRef.current = { fluidMaterial, displayMaterial }\r\n\r\n//     const geometry = new THREE.PlaneGeometry(2, 2)\r\n//     const fluidPlane = new THREE.Mesh(geometry, fluidMaterial)\r\n//     const displayPlane = new THREE.Mesh(geometry, displayMaterial)\r\n\r\n//     function animate() {\r\n//       requestAnimationFrame(animate)\r\n\r\n//       const time = performance.now() * 0.001\r\n//       fluidMaterial.uniforms.iTime.value = time\r\n//       displayMaterial.uniforms.iTime.value = time\r\n//       fluidMaterial.uniforms.iFrame.value = frameCount\r\n\r\n//       if (performance.now() - mouseRef.current.lastMoveTime > 100) {\r\n//         fluidMaterial.uniforms.iMouse.value.set(0, 0, 0, 0)\r\n//       }\r\n\r\n//       fluidMaterial.uniforms.iPreviousFrame.value = previousFluidTarget.texture\r\n\r\n//       renderer.setRenderTarget(currentFluidTarget)\r\n//       renderer.render(fluidPlane, camera)\r\n\r\n//       displayMaterial.uniforms.iFluid.value = currentFluidTarget.texture\r\n\r\n//       renderer.setRenderTarget(null)\r\n//       renderer.render(displayPlane, camera)\r\n\r\n//       const temp = currentFluidTarget\r\n//       currentFluidTarget = previousFluidTarget\r\n//       previousFluidTarget = temp\r\n\r\n//       frameCount++\r\n//     }\r\n\r\n//     const handleResize = () => {\r\n//       const width = window.innerWidth\r\n//       const height = window.innerHeight\r\n\r\n//       renderer.setSize(width, height)\r\n//       fluidMaterial.uniforms.iResolution.value.set(width, height)\r\n//       displayMaterial.uniforms.iResolution.value.set(width, height)\r\n\r\n//       fluidTarget1.setSize(width, height)\r\n//       fluidTarget2.setSize(width, height)\r\n//       frameCount = 0\r\n//     }\r\n\r\n//     window.addEventListener(\"resize\", handleResize)\r\n//     animate()\r\n\r\n//     return () => {\r\n//       window.removeEventListener(\"resize\", handleResize)\r\n//       renderer.dispose()\r\n//       fluidTarget1.dispose()\r\n//       fluidTarget2.dispose()\r\n//       geometry.dispose()\r\n//       fluidMaterial.dispose()\r\n//       displayMaterial.dispose()\r\n//       materialsRef.current = { fluidMaterial: null, displayMaterial: null }\r\n//       rendererRef.current = null\r\n//     }\r\n//   }, [])\r\n\r\n//   useEffect(() => {\r\n//     const canvas = rendererRef.current?.domElement\r\n//     if (!canvas) return\r\n\r\n//     const handleMouseMove = (e: MouseEvent) => {\r\n//       if (!true || !materialsRef.current.fluidMaterial) return\r\n\r\n//       const rect = canvas.getBoundingClientRect()\r\n\r\n//       mouseRef.current.prevX = mouseRef.current.x\r\n//       mouseRef.current.prevY = mouseRef.current.y\r\n\r\n//       mouseRef.current.x = e.clientX - rect.left\r\n//       mouseRef.current.y = rect.height - (e.clientY - rect.top)\r\n//       mouseRef.current.lastMoveTime = performance.now()\r\n\r\n//       materialsRef.current.fluidMaterial.uniforms.iMouse.value.set(\r\n//         mouseRef.current.x,\r\n//         mouseRef.current.y,\r\n//         mouseRef.current.prevX,\r\n//         mouseRef.current.prevY\r\n//       )\r\n//     }\r\n\r\n//     const handleMouseLeave = () => {\r\n//       if (materialsRef.current.fluidMaterial) {\r\n//         materialsRef.current.fluidMaterial.uniforms.iMouse.value.set(\r\n//           0,\r\n//           0,\r\n//           0,\r\n//           0\r\n//         )\r\n//       }\r\n//     }\r\n\r\n//     canvas.addEventListener(\"mousemove\", handleMouseMove)\r\n//     canvas.addEventListener(\"mouseleave\", handleMouseLeave)\r\n\r\n//     if (!true && materialsRef.current.fluidMaterial) {\r\n//       materialsRef.current.fluidMaterial.uniforms.iMouse.value.set(0, 0, 0, 0)\r\n//     }\r\n\r\n//     return () => {\r\n//       canvas.removeEventListener(\"mousemove\", handleMouseMove)\r\n//       canvas.removeEventListener(\"mouseleave\", handleMouseLeave)\r\n//     }\r\n//   }, [])\r\n\r\n//   return (\r\n//     <div ref={containerRef} className=\"pointer-events-none fixed inset-0 -z-10\">\r\n//       <div ref={canvasRef} className=\"absolute inset-0\" />\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// \"use client\"\r\n\r\n// import { useEffect, useRef } from \"react\"\r\n// import * as THREE from \"three\"\r\n\r\n// export function BgComponent() {\r\n//   const containerRef = useRef<HTMLDivElement>(null)\r\n//   const canvasRef = useRef<HTMLDivElement>(null)\r\n//   const rendererRef = useRef<THREE.WebGLRenderer | null>(null)\r\n\r\n//   useEffect(() => {\r\n//     if (!containerRef.current || !canvasRef.current) return\r\n\r\n//     const vertexShader = `\r\n//       varying vec2 vUv;\r\n//       void main(){\r\n//         vUv = uv;\r\n//         gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n//       }\r\n//     `\r\n\r\n//     const displayShader = `\r\n//       uniform float iTime;\r\n//       uniform vec2 iResolution;\r\n//       uniform float uDistortionAmount;\r\n//       uniform vec3 uColor1;\r\n//       uniform vec3 uColor2;\r\n//       uniform vec3 uColor3;\r\n//       uniform vec3 uColor4;\r\n//       uniform float uColorIntensity;\r\n//       uniform float uSoftness;\r\n//       varying vec2 vUv;\r\n\r\n//       void main() {\r\n//         vec2 fragCoord = vUv * iResolution;\r\n//         float mr = min(iResolution.x, iResolution.y);\r\n//         vec2 uv = (fragCoord * 2.0 - iResolution.xy) / mr;\r\n\r\n//         float d = -iTime * 0.5;\r\n//         float a = 0.0;\r\n//         for (float i = 0.0; i < 8.0; ++i) {\r\n//           a += cos(i - d - a * uv.x);\r\n//           d += sin(uv.y * i + a);\r\n//         }\r\n\r\n//         d += iTime * 0.5;\r\n\r\n//         float mixer1 = cos(uv.x * d) * 0.5 + 0.5;\r\n//         float mixer2 = cos(uv.y * a) * 0.5 + 0.5;\r\n//         float mixer3 = sin(d + a) * 0.5 + 0.5;\r\n\r\n//         float smoothAmount = clamp(uSoftness * 0.1, 0.0, 0.9);\r\n//         mixer1 = mix(mixer1, 0.5, smoothAmount);\r\n//         mixer2 = mix(mixer2, 0.5, smoothAmount);\r\n//         mixer3 = mix(mixer3, 0.5, smoothAmount);\r\n\r\n//         vec3 col = mix(uColor1, uColor2, mixer1);\r\n//         col = mix(col, uColor3, mixer2);\r\n//         col = mix(col, uColor4, mixer3 * 0.4);\r\n\r\n//         col *= uColorIntensity;\r\n\r\n//         // --- Adaptive transparency based on brightness ---\r\n//         float luminance = dot(col, vec3(0.299, 0.587, 0.114));\r\n//         float adaptiveAlpha = mix(0.25, 0.75, 1.0 - luminance);\r\n\r\n//         gl_FragColor = vec4(col, adaptiveAlpha);\r\n//       }\r\n//     `\r\n\r\n//     const camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1)\r\n//     const renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true })\r\n//     renderer.setClearColor(0x000000, 0) // transparent bg\r\n//     rendererRef.current = renderer\r\n\r\n//     renderer.setSize(window.innerWidth, window.innerHeight)\r\n//     canvasRef.current.appendChild(renderer.domElement)\r\n\r\n//     const displayMaterial = new THREE.ShaderMaterial({\r\n//       uniforms: {\r\n//         iTime: { value: 0 },\r\n//         iResolution: {\r\n//           value: new THREE.Vector2(window.innerWidth, window.innerHeight),\r\n//         },\r\n//         uDistortionAmount: { value: 2.5 },\r\n//         uColor1: { value: new THREE.Vector3(0.72, 1.0, 0.96) },\r\n//         uColor2: { value: new THREE.Vector3(0.43, 0.20, 0.40) },\r\n//         uColor3: { value: new THREE.Vector3(0.0, 0.2, 1.0) },\r\n//         uColor4: { value: new THREE.Vector3(0.4, 0.82, 0.99) },\r\n//         uColorIntensity: { value: 1.0 },\r\n//         uSoftness: { value: 1.0 }\r\n//       },\r\n//       vertexShader,\r\n//       fragmentShader: displayShader,\r\n//       transparent: true,\r\n//     })\r\n\r\n//     const geometry = new THREE.PlaneGeometry(2, 2)\r\n//     const displayPlane = new THREE.Mesh(geometry, displayMaterial)\r\n\r\n//     function animate() {\r\n//       requestAnimationFrame(animate)\r\n//       displayMaterial.uniforms.iTime.value = performance.now() * 0.001\r\n//       renderer.render(displayPlane, camera)\r\n//     }\r\n\r\n//     const handleResize = () => {\r\n//       const width = window.innerWidth\r\n//       const height = window.innerHeight\r\n//       renderer.setSize(width, height)\r\n//       displayMaterial.uniforms.iResolution.value.set(width, height)\r\n//     }\r\n\r\n//     window.addEventListener(\"resize\", handleResize)\r\n//     animate()\r\n\r\n//     return () => {\r\n//       window.removeEventListener(\"resize\", handleResize)\r\n//       renderer.dispose()\r\n//       geometry.dispose()\r\n//       displayMaterial.dispose()\r\n//       rendererRef.current = null\r\n//     }\r\n//   }, [])\r\n\r\n//   return (\r\n//     <div ref={containerRef} className=\"pointer-events-none fixed inset-0 -z-10\">\r\n//       <div ref={canvasRef} className=\"absolute inset-0\" />\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n\r\n// grey\r\n// \"use client\"\r\n\r\n// import { useEffect, useRef } from \"react\"\r\n// import * as THREE from \"three\"\r\n\r\n// function hexToRgb(hex: string) {\r\n//   const r = Number.parseInt(hex.slice(1, 3), 16) / 255\r\n//   const g = Number.parseInt(hex.slice(3, 5), 16) / 255\r\n//   const b = Number.parseInt(hex.slice(5, 7), 16) / 255\r\n//   return [r, g, b]\r\n// }\r\n\r\n// export function BgComponent() {\r\n//   const containerRef = useRef<HTMLDivElement>(null)\r\n//   const canvasRef = useRef<HTMLDivElement>(null)\r\n//   const rendererRef = useRef<THREE.WebGLRenderer | null>(null)\r\n  \r\n//   const materialsRef = useRef<{\r\n//     fluidMaterial: THREE.ShaderMaterial | null;\r\n//     displayMaterial: THREE.ShaderMaterial | null;\r\n//   }>({ fluidMaterial: null, displayMaterial: null })\r\n  \r\n//   const mouseRef = useRef({ x: 0, y: 0, prevX: 0, prevY: 0, lastMoveTime: 0 })\r\n\r\n//   useEffect(() => {\r\n//     if (!containerRef.current || !canvasRef.current) return\r\n\r\n//     const vertexShader = `\r\n//       varying vec2 vUv;\r\n//       void main(){\r\n//         vUv = uv;\r\n//         gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n//       }\r\n//     `\r\n\r\n//     const fluidShader = `\r\n//       uniform float iTime;\r\n//       uniform vec2 iResolution;\r\n//       uniform vec4 iMouse;\r\n//       uniform int iFrame;\r\n//       uniform sampler2D iPreviousFrame;\r\n//       uniform float uBrushSize;\r\n//       uniform float uBrushStrength;\r\n//       uniform float uFluidDecay;\r\n//       uniform float uTrailLength;\r\n//       uniform float uStopDecay;\r\n//       varying vec2 vUv;\r\n\r\n//       vec2 ur, U;\r\n\r\n//       float ln(vec2 p, vec2 a, vec2 b) {\r\n//         return length(p - a - (b - a) * clamp(dot(p - a, b - a) / dot(b - a, b - a), 0.0, 1.0));\r\n//       }\r\n      \r\n//       vec4 t(vec2 v, int a, int b) {\r\n//         return texture2D(iPreviousFrame, fract((v + vec2(float(a), float(b))) / ur));\r\n//       }\r\n      \r\n//       vec4 t(vec2 v) {\r\n//         return texture2D(iPreviousFrame, fract(v / ur));\r\n//       }\r\n\r\n//       float area(vec2 a, vec2 b, vec2 c) {\r\n//         float A = length(b - c), B = length(c - a), C = length(a - b), s = 0.5 * (A + B + C);\r\n//         return sqrt(max(0.0, s * (s - A) * (s - B) * (s - C))); \r\n//       }\r\n\r\n//       void main() {\r\n//         U = vUv * iResolution;\r\n//         ur = iResolution.xy;\r\n\r\n//         if (iFrame < 1) {\r\n//           float w = 0.5 + sin(0.2 * U.x) * 0.5;\r\n//           float q = length(U - 0.5 * ur);\r\n//           gl_FragColor = vec4(0.1 * exp(-0.001 * q), 0.0, w, 1.0);\r\n//         } else {\r\n//           vec2 v = U;\r\n//           vec2 A = v + vec2(1, 1);\r\n//           vec2 B = v + vec2(1, -1);\r\n//           vec2 C = v + vec2(-1, 1);\r\n//           vec2 D = v + vec2(-1, -1);\r\n\r\n//           for (int i = 0; i < 8; i++) {\r\n//             v -= t(v).xy;\r\n//             A -= t(A).xy;\r\n//             B -= t(B).xy;\r\n//             C -= t(C).xy;\r\n//             D -= t(D).xy;\r\n//           }\r\n\r\n//           vec4 me = t(v);\r\n//           vec4 n = t(v, 0, 1);\r\n//           vec4 e = t(v, 1, 0);\r\n//           vec4 s = t(v, 0, -1);\r\n//           vec4 w = t(v, -1, 0);\r\n//           vec4 ne = 0.25 * (n + e + s + w);\r\n//           me = mix(t(v), ne, vec4(0.15, 0.15, 0.95, 0.0));\r\n//           me.z = me.z - 0.01 * ((area(A, B, C) + area(B, C, D)) - 4.0);\r\n\r\n//           vec4 pr = vec4(e.z, w.z, n.z, s.z);\r\n//           me.xy = me.xy + 100.0 * vec2(pr.x - pr.y, pr.z - pr.w) / ur;\r\n\r\n//           me.xy *= uFluidDecay;\r\n//           me.z *= uTrailLength;\r\n          \r\n//           if (iMouse.z > 0.0) {\r\n//             vec2 mousePos = iMouse.xy;\r\n//             vec2 mousePrev = iMouse.zw;\r\n//             vec2 mouseVel = mousePos - mousePrev;\r\n//             float velMagnitude = length(mouseVel);\r\n//             float q = ln(U, mousePos, mousePrev);\r\n//             vec2 m = mousePos - mousePrev;\r\n//             float l = length(m);\r\n//             if (l > 0.0) m = min(10.0, 10.0) * m / l;\r\n\r\n//             float brushSizeFactor = 1e-4 / uBrushSize;\r\n//             float strengthFactor = 0.03 * uBrushStrength;\r\n\r\n//             float falloff = exp(-brushSizeFactor * q * q * q);\r\n//             falloff = pow(falloff, 0.5);\r\n\r\n//             me.xyz += strengthFactor * falloff * vec3(m, 10.0);\r\n\r\n//             if (velMagnitude < 2.0) {\r\n//               float distToCursor = length(U - mousePos);\r\n//               float influence = exp(-distToCursor * 0.01);\r\n//               float cursorDecay = mix(1.0, uStopDecay, influence);\r\n//               me.xy *= cursorDecay;\r\n//               me.z *= cursorDecay;\r\n//             }\r\n//           }\r\n\r\n//           gl_FragColor = clamp(me, -0.4, 0.4);\r\n//         }\r\n//       }\r\n//     `\r\n\r\n//     const displayShader = `\r\n//       uniform float iTime;\r\n//       uniform vec2 iResolution;\r\n//       uniform sampler2D iFluid;\r\n//       uniform float uDistortionAmount;\r\n//       uniform vec3 uColor1;\r\n//       uniform vec3 uColor2;\r\n//       uniform vec3 uColor3;\r\n//       uniform vec3 uColor4;\r\n//       uniform float uColorIntensity;\r\n//       uniform float uSoftness;\r\n//       varying vec2 vUv;\r\n\r\n//       void main() {\r\n//         vec2 fragCoord = vUv * iResolution;\r\n\r\n//         vec4 fluid = texture2D(iFluid, vUv);\r\n//         vec2 fluidVel = fluid.xy;\r\n\r\n//         float mr = min(iResolution.x, iResolution.y);\r\n//         vec2 uv = (fragCoord * 2.0 - iResolution.xy) / mr;\r\n\r\n//         uv += fluidVel * (0.5 * uDistortionAmount);\r\n\r\n//         float d = -iTime * 0.5;\r\n//         float a = 0.0;\r\n//         for (float i = 0.0; i < 8.0; ++i) {\r\n//           a += cos(i - d - a * uv.x);\r\n//           d += sin(uv.y * i + a);\r\n//         }\r\n\r\n//         d += iTime * 0.5;\r\n\r\n//         float mixer1 = cos(uv.x * d) * 0.5 + 0.5;\r\n//         float mixer2 = cos(uv.y * a) * 0.5 + 0.5;\r\n//         float mixer3 = sin(d + a) * 0.5 + 0.5;\r\n\r\n//         float smoothAmount = clamp(uSoftness * 0.1, 0.0, 0.9);\r\n//         mixer1 = mix(mixer1, 0.5, smoothAmount);\r\n//         mixer2 = mix(mixer2, 0.5, smoothAmount);\r\n//         mixer3 = mix(mixer3, 0.5, smoothAmount);\r\n\r\n//         vec3 col = mix(uColor1, uColor2, mixer1);\r\n//         col = mix(col, uColor3, mixer2);\r\n//         col = mix(col, uColor4, mixer3 * 0.4);\r\n\r\n//         col *= uColorIntensity;\r\n\r\n//         gl_FragColor = vec4(col, 1.0);\r\n//       }\r\n//     `\r\n\r\n//     const camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1)\r\n//     const renderer = new THREE.WebGLRenderer({ antialias: true })\r\n//     rendererRef.current = renderer\r\n\r\n//     renderer.setSize(window.innerWidth, window.innerHeight)\r\n//     canvasRef.current.appendChild(renderer.domElement)\r\n\r\n//     const fluidTarget1 = new THREE.WebGLRenderTarget(\r\n//       window.innerWidth,\r\n//       window.innerHeight,\r\n//       {\r\n//         minFilter: THREE.LinearFilter,\r\n//         magFilter: THREE.LinearFilter,\r\n//         format: THREE.RGBAFormat,\r\n//         type: THREE.FloatType,\r\n//       }\r\n//     )\r\n\r\n//     const fluidTarget2 = new THREE.WebGLRenderTarget(\r\n//       window.innerWidth,\r\n//       window.innerHeight,\r\n//       {\r\n//         minFilter: THREE.LinearFilter,\r\n//         magFilter: THREE.LinearFilter,\r\n//         format: THREE.RGBAFormat,\r\n//         type: THREE.FloatType,\r\n//       }\r\n//     )\r\n\r\n//     let currentFluidTarget = fluidTarget1\r\n//     let previousFluidTarget = fluidTarget2\r\n//     let frameCount = 0\r\n\r\n//     const fluidMaterial = new THREE.ShaderMaterial({\r\n//       uniforms: {\r\n//         iTime: { value: 0 },\r\n//         iResolution: {\r\n//           value: new THREE.Vector2(window.innerWidth, window.innerHeight),\r\n//         },\r\n//         iMouse: { value: new THREE.Vector4(0, 0, 0, 0) },\r\n//         iFrame: { value: 0 },\r\n//         iPreviousFrame: { value: null },\r\n//         uBrushSize: { value: 10 },\r\n//         uBrushStrength: { value: 10 },\r\n//         uFluidDecay: { value: 0.98 },\r\n//         uTrailLength: { value: 0.8 },\r\n//         uStopDecay: { value: 0.85 },\r\n//       },\r\n//       vertexShader,\r\n//       fragmentShader: fluidShader,\r\n//     })\r\n\r\n//     const displayMaterial = new THREE.ShaderMaterial({\r\n//       uniforms: {\r\n//         iTime: { value: 0 },\r\n//         iResolution: {\r\n//           value: new THREE.Vector2(window.innerWidth, window.innerHeight),\r\n//         },\r\n//         iFluid: { value: null },\r\n//         uDistortionAmount: { value: 2.5 },\r\n//         uColor1: { value: new THREE.Vector3(0.14901960784313725, 0.37254901960784315, 0.26666666666666666) },\r\n//         uColor2: { value: new THREE.Vector3(0.3333333333333333, 0.4196078431372549, 0.1843137254901961) },\r\n//         uColor3: { value: new THREE.Vector3(0.12156862745098039, 0.11764705882352941, 0.12156862745098039) },\r\n//         uColor4: { value: new THREE.Vector3(0.15294117647058825, 0.3254901960784314, 0.27450980392156865) },\r\n//         uColorIntensity: { value: 1.0 },\r\n//         uSoftness: { value: 1.0 }\r\n//       },\r\n//       vertexShader,\r\n//       fragmentShader: displayShader,\r\n//     })\r\n\r\n//     materialsRef.current = { fluidMaterial, displayMaterial }\r\n\r\n//     const geometry = new THREE.PlaneGeometry(2, 2)\r\n//     const fluidPlane = new THREE.Mesh(geometry, fluidMaterial)\r\n//     const displayPlane = new THREE.Mesh(geometry, displayMaterial)\r\n\r\n//     function animate() {\r\n//       requestAnimationFrame(animate)\r\n\r\n//       const time = performance.now() * 0.001\r\n//       fluidMaterial.uniforms.iTime.value = time\r\n//       displayMaterial.uniforms.iTime.value = time\r\n//       fluidMaterial.uniforms.iFrame.value = frameCount\r\n\r\n//       if (performance.now() - mouseRef.current.lastMoveTime > 100) {\r\n//         fluidMaterial.uniforms.iMouse.value.set(0, 0, 0, 0)\r\n//       }\r\n\r\n//       fluidMaterial.uniforms.iPreviousFrame.value = previousFluidTarget.texture\r\n\r\n//       renderer.setRenderTarget(currentFluidTarget)\r\n//       renderer.render(fluidPlane, camera)\r\n\r\n//       displayMaterial.uniforms.iFluid.value = currentFluidTarget.texture\r\n\r\n//       renderer.setRenderTarget(null)\r\n//       renderer.render(displayPlane, camera)\r\n\r\n//       const temp = currentFluidTarget\r\n//       currentFluidTarget = previousFluidTarget\r\n//       previousFluidTarget = temp\r\n\r\n//       frameCount++\r\n//     }\r\n\r\n//     const handleResize = () => {\r\n//       const width = window.innerWidth\r\n//       const height = window.innerHeight\r\n\r\n//       renderer.setSize(width, height)\r\n//       fluidMaterial.uniforms.iResolution.value.set(width, height)\r\n//       displayMaterial.uniforms.iResolution.value.set(width, height)\r\n\r\n//       fluidTarget1.setSize(width, height)\r\n//       fluidTarget2.setSize(width, height)\r\n//       frameCount = 0\r\n//     }\r\n\r\n//     window.addEventListener(\"resize\", handleResize)\r\n//     animate()\r\n\r\n//     return () => {\r\n//       window.removeEventListener(\"resize\", handleResize)\r\n//       renderer.dispose()\r\n//       fluidTarget1.dispose()\r\n//       fluidTarget2.dispose()\r\n//       geometry.dispose()\r\n//       fluidMaterial.dispose()\r\n//       displayMaterial.dispose()\r\n//       materialsRef.current = { fluidMaterial: null, displayMaterial: null }\r\n//       rendererRef.current = null\r\n//     }\r\n//   }, [])\r\n\r\n//   useEffect(() => {\r\n//     const canvas = rendererRef.current?.domElement\r\n//     if (!canvas) return\r\n\r\n//     const handleMouseMove = (e: MouseEvent) => {\r\n//       if (!true || !materialsRef.current.fluidMaterial) return\r\n\r\n//       const rect = canvas.getBoundingClientRect()\r\n\r\n//       mouseRef.current.prevX = mouseRef.current.x\r\n//       mouseRef.current.prevY = mouseRef.current.y\r\n\r\n//       mouseRef.current.x = e.clientX - rect.left\r\n//       mouseRef.current.y = rect.height - (e.clientY - rect.top)\r\n//       mouseRef.current.lastMoveTime = performance.now()\r\n\r\n//       materialsRef.current.fluidMaterial.uniforms.iMouse.value.set(\r\n//         mouseRef.current.x,\r\n//         mouseRef.current.y,\r\n//         mouseRef.current.prevX,\r\n//         mouseRef.current.prevY\r\n//       )\r\n//     }\r\n\r\n//     const handleMouseLeave = () => {\r\n//       if (materialsRef.current.fluidMaterial) {\r\n//         materialsRef.current.fluidMaterial.uniforms.iMouse.value.set(\r\n//           0,\r\n//           0,\r\n//           0,\r\n//           0\r\n//         )\r\n//       }\r\n//     }\r\n\r\n//     canvas.addEventListener(\"mousemove\", handleMouseMove)\r\n//     canvas.addEventListener(\"mouseleave\", handleMouseLeave)\r\n\r\n//     if (!true && materialsRef.current.fluidMaterial) {\r\n//       materialsRef.current.fluidMaterial.uniforms.iMouse.value.set(0, 0, 0, 0)\r\n//     }\r\n\r\n//     return () => {\r\n//       canvas.removeEventListener(\"mousemove\", handleMouseMove)\r\n//       canvas.removeEventListener(\"mouseleave\", handleMouseLeave)\r\n//     }\r\n//   }, [])\r\n\r\n//   return (\r\n//     <div ref={containerRef} className=\"relative w-full h-screen overflow-hidden bg-black\">\r\n//       <div ref={canvasRef} className=\"fixed top-0 left-0 w-full h-full\" />\r\n//     </div>\r\n//   )\r\n// }"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 769, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/poppins_fa7ae995.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"poppins_fa7ae995-module__PLyDCq__className\",\n  \"variable\": \"poppins_fa7ae995-module__PLyDCq__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 777, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/poppins_fa7ae995.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Poppins%22,%22arguments%22:[{%22subsets%22:[%22latin%22],%22weight%22:[%22400%22,%22500%22,%22600%22,%22700%22],%22variable%22:%22--font-poppins%22}],%22variableName%22:%22poppins%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Poppins', 'Poppins Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,kKAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,kKAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,kKAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 798, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Tarak/Desktop/mokshainvestment/mokshainvestment/app/layout.tsx"],"sourcesContent":["// import { Geist, Geist_Mono } from \"next/font/google\";\n// import \"./globals.css\";\n// import WhatsAppFloating from \"@/components/WhatsAppFloating\";\n// import type { ReactNode } from \"react\";\n// import { BgComponent } from \"@/components/BgComponent\";\n\n// const geistSans = Geist({\n//   variable: \"--font-geist-sans\",\n//   subsets: [\"latin\"],\n// });\n\n// const geistMono = Geist_Mono({\n//   variable: \"--font-geist-mono\",\n//   subsets: [\"latin\"],\n// });\n\n// export const metadata = {\n//   title: \"Create Next App\",\n//   description: \"Generated by create next app\",\n// };\n\n// //\n\n// export default function RootLayout({ children }: { children: ReactNode }) {\n//   return (\n//     <html lang=\"en\">\n//       <body\n//         className={`${geistSans.variable} ${geistMono.variable} antialiased min-h-screen`}\n//       >\n//         <BgComponent />\n//         {children}\n//         <WhatsAppFloating />\n//       </body>\n//     </html>\n//   );\n// }\n\nimport \"./globals.css\";\nimport WhatsAppFloating from \"@/components/WhatsAppFloating\";\nimport type { ReactNode } from \"react\";\nimport { BgComponent } from \"@/components/BgComponent\";\nimport { Poppins } from \"next/font/google\";\n\nconst poppins = Poppins({\n  subsets: [\"latin\"],\n  weight: [\"400\", \"500\", \"600\", \"700\"], // light → bold\n  variable: \"--font-poppins\",\n});\n\nexport const metadata = {\n  title: \"Moksha Investment\",\n  description: \"Your Trusted Financial Partner\",\n};\n\nexport default function RootLayout({ children }: { children: ReactNode }) {\n  return (\n    <html lang=\"en\" className={poppins.variable}>\n      <body className=\"antialiased min-h-screen bg-white text-slate-900\">\n        <BgComponent />\n        {children}\n        <WhatsAppFloating />\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":"AAAA,wDAAwD;AACxD,0BAA0B;AAC1B,gEAAgE;AAChE,0CAA0C;AAC1C,0DAA0D;AAE1D,4BAA4B;AAC5B,mCAAmC;AACnC,wBAAwB;AACxB,MAAM;AAEN,iCAAiC;AACjC,mCAAmC;AACnC,wBAAwB;AACxB,MAAM;AAEN,4BAA4B;AAC5B,8BAA8B;AAC9B,iDAAiD;AACjD,KAAK;AAEL,KAAK;AAEL,8EAA8E;AAC9E,aAAa;AACb,uBAAuB;AACvB,cAAc;AACd,6FAA6F;AAC7F,UAAU;AACV,0BAA0B;AAC1B,qBAAqB;AACrB,+BAA+B;AAC/B,gBAAgB;AAChB,cAAc;AACd,OAAO;AACP,IAAI;;;;;;;;AAGJ;AAEA;;;;;;;AASO,MAAM,WAAW;IACtB,OAAO;IACP,aAAa;AACf;AAEe,SAAS,WAAW,EAAE,QAAQ,EAA2B;IACtE,qBACE,kQAAC;QAAK,MAAK;QAAK,WAAW,sJAAO,CAAC,QAAQ;kBACzC,cAAA,kQAAC;YAAK,WAAU;;8BACd,kQAAC,6JAAW;;;;;gBACX;8BACD,kQAAC,8JAAgB;;;;;;;;;;;;;;;;AAIzB","debugId":null}}]
}