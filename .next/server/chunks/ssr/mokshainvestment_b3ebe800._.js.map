{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Tarak/Desktop/mokshainvestment/mokshainvestment/app/admin/dashboard/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\n\r\ninterface Category {\r\n  id: string;\r\n  name: string;\r\n  icon: string;\r\n}\r\n\r\nexport default function DashboardPage() {\r\n  const router = useRouter();\r\n  const [name, setName] = useState(\"\");\r\n  const [logo, setLogo] = useState<File | null>(null);\r\n  const [categoryId, setCategoryId] = useState(\"\");\r\n  const [companies, setCompanies] = useState<any[]>([]);\r\n  const [categories, setCategories] = useState<Category[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const isAdmin = localStorage.getItem(\"isAdmin\");\r\n    if (!isAdmin) router.push(\"/admin/login\");\r\n\r\n    initializeData();\r\n  }, [router]);\r\n\r\n  async function initializeData() {\r\n    setLoading(true);\r\n    try {\r\n      // First, try to seed categories if they don't exist\r\n      await fetch(\"/api/admin/seed-categories\", { method: \"POST\" });\r\n      \r\n      // Then fetch categories and companies\r\n      await Promise.all([fetchCategories(), fetchCompanies()]);\r\n    } catch (error) {\r\n      console.error(\"Error initializing data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  async function fetchCategories() {\r\n    try {\r\n      const response = await fetch(\"/api/admin/categories\");\r\n      const result = await response.json();\r\n      if (result.categories) {\r\n        setCategories(result.categories);\r\n        // Set the first category as default if none is selected\r\n        if (!categoryId && result.categories.length > 0) {\r\n          setCategoryId(result.categories[0].id);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching categories:\", error);\r\n    }\r\n  }\r\n\r\n  async function fetchCompanies() {\r\n    try {\r\n      const response = await fetch(\"/api/admin/companies\");\r\n      const result = await response.json();\r\n      if (result.data) setCompanies(result.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching companies:\", error);\r\n    }\r\n  }\r\n\r\n  async function handleSubmit(e: React.FormEvent) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      let logoUrl = null;\r\n\r\n      // Upload logo if provided\r\n      if (logo) {\r\n        const formData = new FormData();\r\n        formData.append(\"file\", logo);\r\n\r\n        const uploadResponse = await fetch(\"/api/admin/upload\", {\r\n          method: \"POST\",\r\n          body: formData,\r\n        });\r\n\r\n        const uploadResult = await uploadResponse.json();\r\n        if (uploadResult.error) {\r\n          console.error(\"Upload error:\", uploadResult.error);\r\n          return;\r\n        }\r\n        logoUrl = uploadResult.url;\r\n      }\r\n\r\n      // Create company\r\n      const companyResponse = await fetch(\"/api/admin/companies\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ name, logoUrl, categoryId }),\r\n      });\r\n\r\n      const companyResult = await companyResponse.json();\r\n      if (companyResult.error) {\r\n        console.error(\"Company creation error:\", companyResult.error);\r\n      } else {\r\n        setName(\"\");\r\n        setLogo(null);\r\n        // Reset to first category or empty\r\n        if (categories.length > 0) {\r\n          setCategoryId(categories[0].id);\r\n        } else {\r\n          setCategoryId(\"\");\r\n        }\r\n        fetchCompanies();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"p-6\">\r\n        <h1 className=\"text-2xl font-bold mb-6\">Admin Dashboard</h1>\r\n        <div className=\"flex items-center justify-center h-64\">\r\n          <div className=\"text-lg\">Loading...</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h1 className=\"text-2xl font-bold mb-6\">Admin Dashboard</h1>\r\n\r\n      {/* Add Company Form */}\r\n      <form onSubmit={handleSubmit} className=\"bg-white p-4 rounded shadow-md mb-6 w-96\">\r\n        <h2 className=\"text-lg font-semibold mb-4\">Add Insurance Company</h2>\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Company Name\"\r\n          className=\"w-full border p-2 mb-3 rounded\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          required\r\n        />\r\n\r\n        <select\r\n          className=\"w-full border p-2 mb-3 rounded\"\r\n          value={categoryId}\r\n          onChange={(e) => setCategoryId(e.target.value)}\r\n          required\r\n        >\r\n          <option value=\"\">Select a category</option>\r\n          {categories.map((category) => (\r\n            <option key={category.id} value={category.id}>\r\n              {category.icon} {category.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          className=\"w-full mb-3\"\r\n          onChange={(e) => setLogo(e.target.files?.[0] || null)}\r\n        />\r\n\r\n        <button \r\n          type=\"submit\" \r\n          className=\"w-full bg-blue-600 text-white p-2 rounded disabled:bg-gray-400\"\r\n          disabled={!categoryId}\r\n        >\r\n          Add Company\r\n        </button>\r\n      </form>\r\n\r\n      {/* Companies List */}\r\n      <h2 className=\"text-lg font-semibold mb-3\">Existing Companies</h2>\r\n      <div className=\"grid grid-cols-2 gap-4\">\r\n        {companies.map((company) => (\r\n          <div key={company.id} className=\"border p-3 rounded flex items-center gap-3\">\r\n            {company.logo_url && (\r\n              <img src={company.logo_url} alt={company.name} className=\"w-12 h-12 object-contain\" />\r\n            )}\r\n            <span>{company.name}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 298, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Tarak/Desktop/mokshainvestment/mokshainvestment/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}