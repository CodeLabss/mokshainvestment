{"version":3,"sources":["turbopack:///[project]/mokshainvestment/app/admin/page.tsx"],"sourcesContent":["// v1 - working perfectly fine with update_nfo function added\r\n// \"use client\";\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { createClient } from \"@supabase/supabase-js\";\r\n// import { motion } from \"framer-motion\";\r\n// import { \r\n//   FiUser, FiPhone, FiMail, FiFileText, FiClock, \r\n//   FiCheckCircle, FiXCircle, FiLogOut, FiRefreshCw,\r\n//   FiImage, FiUpload, FiPlus, FiEdit, FiTrash2\r\n// } from \"react-icons/fi\";\r\n\r\n// type LeadRow = {\r\n//   id: string;\r\n//   name: string;\r\n//   phone: string;\r\n//   email?: string;\r\n//   requirement?: string;\r\n//   notes?: string;\r\n//   is_contacted?: boolean;\r\n//   created_at?: string;\r\n// };\r\n\r\n// type NFOData = {\r\n//   id: string;\r\n//   title: string;\r\n//   description: string | null;\r\n//   start_date: string | null;\r\n//   end_date: string | null;\r\n//   image_url: string | null;\r\n//   created_at: string;\r\n// };\r\n\r\n// // Initialize Supabase client only once\r\n// const supabase = createClient(\r\n//   process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n//   process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\r\n// );\r\n\r\n// export default function AdminDashboardPage() {\r\n//   const [leads, setLeads] = useState<LeadRow[]>([]);\r\n//   const [nfoData, setNfoData] = useState<NFOData[]>([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [refreshing, setRefreshing] = useState(false);\r\n//   const [userEmail, setUserEmail] = useState<string>(\"\");\r\n//   const [activeTab, setActiveTab] = useState<'leads' | 'nfo'>('leads');\r\n  \r\n//   // NFO Form State\r\n//   const [nfoForm, setNfoForm] = useState({\r\n//     title: '',\r\n//     description: '',\r\n//     start_date: '',\r\n//     end_date: '',\r\n//     image_file: null as File | null\r\n//   });\r\n//   const [uploading, setUploading] = useState(false);\r\n//   const [editingId, setEditingId] = useState<string | null>(null);\r\n//   const [showNfoForm, setShowNfoForm] = useState(false);\r\n//   const [formErrors, setFormErrors] = useState<string[]>([]);\r\n//   const [debugInfo, setDebugInfo] = useState<string[]>([]);\r\n\r\n//   const addDebugInfo = (message: string) => {\r\n//     console.log(`🔍 ${message}`);\r\n//     setDebugInfo(prev => [...prev.slice(-9), `${new Date().toLocaleTimeString()}: ${message}`]);\r\n//   };\r\n\r\n//   const checkloggedin = async () => {\r\n//     try {\r\n//       addDebugInfo(\"Checking authentication...\");\r\n//       const { data, error } = await supabase.auth.getUser();\r\n//       if (error) {\r\n//         addDebugInfo(`Auth error: ${error.message}`);\r\n//         return false;\r\n//       }\r\n//       setUserEmail(data.user?.email || \"\");\r\n//       addDebugInfo(\"Authentication successful\");\r\n//       return true;\r\n//     } catch (error: any) {\r\n//       addDebugInfo(`Auth check failed: ${error.message}`);\r\n//       return false;\r\n//     }\r\n//   };\r\n\r\n//   // Database connection test\r\n//   const checkDatabaseConnection = async () => {\r\n//     try {\r\n//       addDebugInfo(\"Testing database connection...\");\r\n      \r\n//       // Test leads table\r\n//       const { data: leadsData, error: leadsError } = await supabase\r\n//         .from('leads')\r\n//         .select('count')\r\n//         .limit(1);\r\n\r\n//       if (leadsError) {\r\n//         addDebugInfo(`Leads table error: ${leadsError.message} (code: ${leadsError.code})`);\r\n//       } else {\r\n//         addDebugInfo(\"Leads table accessible\");\r\n//       }\r\n\r\n//       // Test upcoming_nfo table\r\n//       const { data: nfoData, error: nfoError } = await supabase\r\n//         .from('upcoming_nfo')\r\n//         .select('id')\r\n//         .limit(1);\r\n\r\n//       if (nfoError) {\r\n//         addDebugInfo(`NFO table error: ${nfoError.message} (code: ${nfoError.code})`);\r\n//         if (nfoError.code === '42P01') {\r\n//           addDebugInfo(\"NFO table doesn't exist. Please create it in Supabase.\");\r\n//         }\r\n//       } else {\r\n//         addDebugInfo(\"NFO table accessible\");\r\n//       }\r\n\r\n//       // Test storage bucket\r\n//       const { data: storageData, error: storageError } = await supabase.storage\r\n//         .from('nfo-images')\r\n//         .list('', { limit: 1 });\r\n\r\n//       if (storageError) {\r\n//         addDebugInfo(`Storage error: ${storageError.message} (code: ${storageError.code})`);\r\n//       } else {\r\n//         addDebugInfo(\"Storage bucket accessible\");\r\n//       }\r\n\r\n//     } catch (error: any) {\r\n//       addDebugInfo(`Database check failed: ${error.message}`);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     checkloggedin().then((loggedIn) => {\r\n//       if (!loggedIn) {\r\n//         window.location.href = \"/admin/login\";\r\n//       }\r\n//     });\r\n//     fetchLeads();\r\n//     fetchNFOData();\r\n//     checkDatabaseConnection();\r\n//   }, []);\r\n\r\n//   async function fetchLeads() {\r\n//     try {\r\n//       setLoading(true);\r\n//       addDebugInfo(\"Fetching leads...\");\r\n//       const { data, error } = await supabase\r\n//         .from('leads')\r\n//         .select('*')\r\n//         .order('created_at', { ascending: false });\r\n\r\n//       if (error) {\r\n//         addDebugInfo(`Leads fetch error: ${error.message}`);\r\n//         console.error('Error fetching leads:', error);\r\n//       } else {\r\n//         addDebugInfo(`Fetched ${data?.length || 0} leads`);\r\n//         setLeads(data || []);\r\n//       }\r\n//     } catch (error: any) {\r\n//       addDebugInfo(`Leads fetch exception: ${error.message}`);\r\n//       console.error('Error in fetchLeads:', error);\r\n//     } finally {\r\n//       setLoading(false);\r\n//       setRefreshing(false);\r\n//     }\r\n//   }\r\n\r\n//   async function fetchNFOData() {\r\n//     try {\r\n//       addDebugInfo(\"Fetching NFO data...\");\r\n//       const { data, error } = await supabase\r\n//         .from('upcoming_nfo')\r\n//         .select('*')\r\n//         .order('start_date', { ascending: true });\r\n\r\n//       if (error) {\r\n//         addDebugInfo(`NFO fetch error: ${error.message}`);\r\n//         console.error('Error fetching NFO data:', error);\r\n//       } else {\r\n//         addDebugInfo(`Fetched ${data?.length || 0} NFOs`);\r\n//         setNfoData(data || []);\r\n//       }\r\n//     } catch (error: any) {\r\n//       addDebugInfo(`NFO fetch exception: ${error.message}`);\r\n//       console.error('Error in fetchNFOData:', error);\r\n//     }\r\n//   }\r\n\r\n//   async function handleRefresh() {\r\n//     setRefreshing(true);\r\n//     addDebugInfo(\"Manual refresh triggered\");\r\n//     await fetchLeads();\r\n//     await fetchNFOData();\r\n//   }\r\n\r\n//   async function toggleContactStatus(leadId: string, currentStatus: boolean) {\r\n//     try {\r\n//       addDebugInfo(`Toggling contact status for lead ${leadId}`);\r\n//       const { error } = await supabase\r\n//         .from('leads')\r\n//         .update({ is_contacted: !currentStatus })\r\n//         .eq('id', leadId);\r\n\r\n//       if (error) {\r\n//         addDebugInfo(`Contact status update error: ${error.message}`);\r\n//         console.error('Error updating lead:', error);\r\n//       } else {\r\n//         addDebugInfo(\"Contact status updated successfully\");\r\n//         setLeads(leads.map(lead => \r\n//           lead.id === leadId \r\n//             ? { ...lead, is_contacted: !currentStatus }\r\n//             : lead\r\n//         ));\r\n//       }\r\n//     } catch (error: any) {\r\n//       addDebugInfo(`Contact status exception: ${error.message}`);\r\n//       console.error('Error toggling contact status:', error);\r\n//     }\r\n//   }\r\n\r\n//   // NFO Management Functions\r\n//   const handleImageUpload = async (file: File): Promise<string> => {\r\n//     const fileExt = file.name.split('.').pop();\r\n//     const fileName = `${Math.random().toString(36).substring(2)}_${Date.now()}.${fileExt}`;\r\n//     const filePath = fileName;\r\n\r\n//     addDebugInfo(`Uploading image: ${fileName} (${file.size} bytes)`);\r\n\r\n//     const { data, error: uploadError } = await supabase.storage\r\n//       .from('nfo-images')\r\n//       .upload(filePath, file, {\r\n//         cacheControl: '3600',\r\n//         upsert: false\r\n//       });\r\n\r\n//     if (uploadError) {\r\n//       addDebugInfo(`Image upload failed: ${uploadError.message}`);\r\n//       console.error(\"❌ Storage upload error:\", uploadError);\r\n//       throw new Error(`Failed to upload image: ${uploadError.message}`);\r\n//     }\r\n\r\n//     addDebugInfo(\"Image uploaded successfully\");\r\n//     console.log(\"✅ Image uploaded successfully:\", data?.path);\r\n//     return fileName;\r\n//   };\r\n\r\n//   const validateForm = (): boolean => {\r\n//     const errors: string[] = [];\r\n\r\n//     if (!nfoForm.title.trim()) {\r\n//       errors.push('Title is required');\r\n//     }\r\n\r\n//     // Image is compulsory for new NFOs only\r\n//     if (!editingId && !nfoForm.image_file) {\r\n//       errors.push('Image is required for new NFOs');\r\n//     }\r\n\r\n//     // Validate file type if provided\r\n//     if (nfoForm.image_file) {\r\n//       const validTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'];\r\n//       if (!validTypes.includes(nfoForm.image_file.type)) {\r\n//         errors.push('Please upload a valid image (JPEG, PNG, or WebP)');\r\n//       }\r\n      \r\n//       // Validate file size (5MB max)\r\n//       if (nfoForm.image_file.size > 5 * 1024 * 1024) {\r\n//         errors.push('Image size should be less than 5MB');\r\n//       }\r\n//     }\r\n\r\n//     setFormErrors(errors);\r\n//     if (errors.length > 0) {\r\n//       addDebugInfo(`Form validation failed: ${errors.join(', ')}`);\r\n//     }\r\n//     return errors.length === 0;\r\n//   };\r\n\r\n//   const handleNfoSubmit = async (e: React.FormEvent) => {\r\n//     e.preventDefault();\r\n//     addDebugInfo(\"NFO form submission started\");\r\n    \r\n//     if (!validateForm()) {\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       setUploading(true);\r\n//       setFormErrors([]);\r\n      \r\n//       let imageFileName = null;\r\n\r\n//       // Upload new image if provided\r\n//       if (nfoForm.image_file) {\r\n//         try {\r\n//           imageFileName = await handleImageUpload(nfoForm.image_file);\r\n//         } catch (uploadError: any) {\r\n//           addDebugInfo(`Image upload error in submit: ${uploadError.message}`);\r\n//           console.error('❌ Image upload failed:', uploadError);\r\n//           setFormErrors([`Image upload failed: ${uploadError.message}`]);\r\n//           setUploading(false);\r\n//           return;\r\n//         }\r\n//       } else if (editingId) {\r\n//         // Keep existing image if editing and no new file\r\n//         const existingNfo = nfoData.find(nfo => nfo.id === editingId);\r\n//         imageFileName = existingNfo?.image_url || null;\r\n//         addDebugInfo(`Using existing image: ${imageFileName}`);\r\n//       }\r\n\r\n//       // Prepare data for database\r\n//       const nfoDataToSave = {\r\n//         title: nfoForm.title,\r\n//         description: nfoForm.description || null,\r\n//         start_date: nfoForm.start_date || null,\r\n//         end_date: nfoForm.end_date || null,\r\n//         image_url: imageFileName,\r\n//         // updated_at: new Date().toISOString()\r\n//       };\r\n\r\n//       addDebugInfo(`Saving NFO data: ${JSON.stringify(nfoDataToSave)}`);\r\n\r\n//       let result;\r\n//       if (editingId) {\r\n//         // Update existing NFO\r\n//         addDebugInfo(`Updating existing NFO: ${editingId}`);\r\n//         result = await supabase\r\n//           .from('upcoming_nfo')\r\n//           .update(nfoDataToSave)\r\n//           .eq('id', editingId);\r\n//       } else {\r\n//         // Create new NFO\r\n//         addDebugInfo(\"Creating new NFO\");\r\n//         result = await supabase\r\n//           .from('upcoming_nfo')\r\n//           .insert([{\r\n//             ...nfoDataToSave,\r\n//             created_at: new Date().toISOString()\r\n//           }]);\r\n//       }\r\n\r\n//       // Comprehensive error handling for Supabase responses\r\n//       if (result.error) {\r\n//         addDebugInfo(`Database operation failed: ${result.error.message}`);\r\n//         console.error('❌ Database error details:', {\r\n//           message: result.error.message,\r\n//           details: result.error.details,\r\n//           hint: result.error.hint,\r\n//           code: result.error.code\r\n//         });\r\n        \r\n//         let errorMessage = 'Database error occurred. ';\r\n        \r\n//         if (result.error.message) {\r\n//           errorMessage += result.error.message;\r\n//         }\r\n        \r\n//         if (result.error.details) {\r\n//           errorMessage += ` Details: ${result.error.details}`;\r\n//         }\r\n        \r\n//         if (result.error.hint) {\r\n//           errorMessage += ` Hint: ${result.error.hint}`;\r\n//         }\r\n\r\n//         // Specific error handling for common issues\r\n//         if (result.error.code === '42501') {\r\n//           errorMessage = \"Permission denied. Check RLS policies for 'upcoming_nfo' table.\";\r\n//         } else if (result.error.code === '42P01') {\r\n//           errorMessage = \"Table 'upcoming_nfo' doesn't exist. Please create it in Supabase.\";\r\n//         } else if (result.error.code === '23505') {\r\n//           errorMessage = \"Duplicate entry. This NFO might already exist.\";\r\n//         }\r\n        \r\n//         throw new Error(errorMessage);\r\n//       }\r\n\r\n//       addDebugInfo(\"NFO saved successfully\");\r\n//       // Reset form and refresh data\r\n//       resetNfoForm();\r\n//       await fetchNFOData();\r\n//       alert(editingId ? 'NFO updated successfully!' : 'NFO created successfully!');\r\n      \r\n//     } catch (error: any) {\r\n//       addDebugInfo(`NFO submission failed: ${error.message}`);\r\n//       console.error('❌ Error saving NFO:', error);\r\n//       console.error('Error details:', {\r\n//         message: error.message,\r\n//         stack: error.stack,\r\n//         name: error.name\r\n//       });\r\n      \r\n//       // Provide more specific error messages\r\n//       let errorMessage = 'Error saving NFO. Please try again.';\r\n      \r\n//       if (error.message) {\r\n//         errorMessage = error.message;\r\n//       }\r\n      \r\n//       setFormErrors([errorMessage]);\r\n//     } finally {\r\n//       setUploading(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleEditNfo = (nfo: NFOData) => {\r\n//     addDebugInfo(`Editing NFO: ${nfo.title}`);\r\n//     setNfoForm({\r\n//       title: nfo.title,\r\n//       description: nfo.description || '',\r\n//       start_date: nfo.start_date ? nfo.start_date.split('T')[0] : '',\r\n//       end_date: nfo.end_date ? nfo.end_date.split('T')[0] : '',\r\n//       image_file: null\r\n//     });\r\n//     setEditingId(nfo.id);\r\n//     setShowNfoForm(true);\r\n//     setFormErrors([]);\r\n//   };\r\n\r\n//   const handleDeleteNfo = async (id: string) => {\r\n//     if (!confirm('Are you sure you want to delete this NFO?')) return;\r\n\r\n//     try {\r\n//       addDebugInfo(`Deleting NFO: ${id}`);\r\n//       const { error } = await supabase\r\n//         .from('upcoming_nfo')\r\n//         .delete()\r\n//         .eq('id', id);\r\n\r\n//       if (error) {\r\n//         addDebugInfo(`Delete failed: ${error.message}`);\r\n//         throw error;\r\n//       }\r\n\r\n//       addDebugInfo(\"NFO deleted successfully\");\r\n//       await fetchNFOData();\r\n//       alert('NFO deleted successfully!');\r\n//     } catch (error: any) {\r\n//       addDebugInfo(`Delete error: ${error.message}`);\r\n//       console.error('Error deleting NFO:', error);\r\n//       alert(`Error deleting NFO: ${error.message || 'Please try again.'}`);\r\n//     }\r\n//   };\r\n\r\n//   const resetNfoForm = () => {\r\n//     addDebugInfo(\"Resetting NFO form\");\r\n//     setNfoForm({\r\n//       title: '',\r\n//       description: '',\r\n//       start_date: '',\r\n//       end_date: '',\r\n//       image_file: null\r\n//     });\r\n//     setEditingId(null);\r\n//     setShowNfoForm(false);\r\n//     setFormErrors([]);\r\n//   };\r\n\r\n//   const handleNewNfoClick = () => {\r\n//     addDebugInfo(\"Creating new NFO\");\r\n//     resetNfoForm();\r\n//     setShowNfoForm(true);\r\n//   };\r\n\r\n//   const getImageUrl = (imagePath: string | null) => {\r\n//     if (!imagePath) return null;\r\n    \r\n//     // Extract just the filename\r\n//     let filename = imagePath;\r\n//     if (filename.includes('/')) {\r\n//       filename = filename.split('/').pop() || filename;\r\n//     }\r\n//     filename = filename.replace('nfo-images/', '');\r\n    \r\n//     const { data } = supabase.storage\r\n//       .from('nfo-images')\r\n//       .getPublicUrl(filename);\r\n    \r\n//     return data.publicUrl;\r\n//   };\r\n\r\n//   async function handleSignOut() {\r\n//     try {\r\n//       addDebugInfo(\"Signing out...\");\r\n//       const { error } = await supabase.auth.signOut();\r\n//       if (error) {\r\n//         addDebugInfo(`Sign out error: ${error.message}`);\r\n//         console.error(\"Error signing out:\", error.message);\r\n//         return;\r\n//       }\r\n//       window.location.href = \"/admin/login\";\r\n//     } catch (error: any) {\r\n//       addDebugInfo(`Sign out exception: ${error.message}`);\r\n//       console.error(\"Sign out error:\", error);\r\n//     }\r\n//   }\r\n\r\n//   // Stats calculations\r\n//   const totalLeads = leads.length;\r\n//   const contactedLeads = leads.filter(lead => lead.is_contacted).length;\r\n//   const newLeads = totalLeads - contactedLeads;\r\n//   const contactRate = totalLeads > 0 ? (contactedLeads / totalLeads) * 100 : 0;\r\n\r\n//   const formatDate = (dateString: string) => {\r\n//     return new Date(dateString).toLocaleDateString('en-US', {\r\n//       year: 'numeric',\r\n//       month: 'short',\r\n//       day: 'numeric',\r\n//       hour: '2-digit',\r\n//       minute: '2-digit'\r\n//     });\r\n//   };\r\n\r\n//   const getRequirementColor = (requirement: string) => {\r\n//     const colors: { [key: string]: string } = {\r\n//       'Insurance': 'bg-blue-500/20 text-blue-400 border-blue-500/30',\r\n//       'Mediclaim': 'bg-green-500/20 text-green-400 border-green-500/30',\r\n//       'Loan': 'bg-purple-500/20 text-purple-400 border-purple-500/30',\r\n//       'Mutual Funds': 'bg-amber-500/20 text-amber-400 border-amber-500/30',\r\n//       'SIP': 'bg-indigo-500/20 text-indigo-400 border-indigo-500/30',\r\n//       'Pension Planning': 'bg-pink-500/20 text-pink-400 border-pink-500/30',\r\n//       'Child Plans': 'bg-cyan-500/20 text-cyan-400 border-cyan-500/30',\r\n//       'Wealth Advisory': 'bg-orange-500/20 text-orange-400 border-orange-500/30'\r\n//     };\r\n//     return colors[requirement] || 'bg-gray-500/20 text-gray-400 border-gray-500/30';\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 p-4 pt-20\">\r\n//       <motion.div\r\n//         initial={{ opacity: 0, y: 20 }}\r\n//         animate={{ opacity: 1, y: 0 }}\r\n//         className=\"max-w-7xl mx-auto\"\r\n//       >\r\n//         {/* Debug Info Panel - Remove in production */}\r\n//         <div className=\"mb-4 p-4 bg-blue-500/10 border border-blue-500/20 rounded-lg\">\r\n//           <details>\r\n//             <summary className=\"cursor-pointer text-blue-400 font-semibold\">Debug Info (Click to expand)</summary>\r\n//             <div className=\"mt-2 text-xs text-blue-300 max-h-32 overflow-y-auto\">\r\n//               {debugInfo.map((info, index) => (\r\n//                 <div key={index} className=\"font-mono\">{info}</div>\r\n//               ))}\r\n//             </div>\r\n//           </details>\r\n//         </div>\r\n\r\n//         {/* Header */}\r\n//         <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between mb-8\">\r\n//           <div className=\"mb-4 lg:mb-0\">\r\n//             <h1 className=\"text-3xl font-bold text-amber-400 mb-2\">Admin Dashboard</h1>\r\n//             <p className=\"text-slate-300 text-lg\">\r\n//               Welcome back, <span className=\"text-white font-semibold\">{userEmail}</span>\r\n//             </p>\r\n//           </div>\r\n//           <div className=\"flex gap-3\">\r\n//             <button\r\n//               onClick={handleRefresh}\r\n//               disabled={refreshing}\r\n//               className=\"flex items-center gap-2 px-4 py-2 rounded-lg bg-white/5 border border-white/10 text-slate-300 hover:bg-white/10 transition-colors disabled:opacity-50\"\r\n//             >\r\n//               <FiRefreshCw className={`w-4 h-4 ${refreshing ? 'animate-spin' : ''}`} />\r\n//               Refresh\r\n//             </button>\r\n//             <button\r\n//               onClick={handleSignOut}\r\n//               className=\"flex items-center gap-2 px-4 py-2 rounded-lg bg-rose-500/20 border border-rose-500/30 text-rose-400 hover:bg-rose-500/30 transition-colors\"\r\n//             >\r\n//               <FiLogOut className=\"w-4 h-4\" />\r\n//               Sign Out\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* Tab Navigation */}\r\n//         <div className=\"flex space-x-1 mb-8 bg-white/5 backdrop-blur-lg border border-white/10 rounded-2xl p-1 max-w-md\">\r\n//           <button\r\n//             onClick={() => setActiveTab('leads')}\r\n//             className={`flex items-center gap-2 px-4 py-2 rounded-xl transition-colors flex-1 text-center ${\r\n//               activeTab === 'leads'\r\n//                 ? 'bg-amber-500/20 text-amber-400 border border-amber-500/30'\r\n//                 : 'text-slate-400 hover:text-white'\r\n//             }`}\r\n//           >\r\n//             <FiUser className=\"w-4 h-4\" />\r\n//             Leads ({totalLeads})\r\n//           </button>\r\n//           <button\r\n//             onClick={() => setActiveTab('nfo')}\r\n//             className={`flex items-center gap-2 px-4 py-2 rounded-xl transition-colors flex-1 text-center ${\r\n//               activeTab === 'nfo'\r\n//                 ? 'bg-amber-500/20 text-amber-400 border border-amber-500/30'\r\n//                 : 'text-slate-400 hover:text-white'\r\n//             }`}\r\n//           >\r\n//             <FiImage className=\"w-4 h-4\" />\r\n//             NFOs ({nfoData.length})\r\n//           </button>\r\n//         </div>\r\n\r\n//         {/* Leads Tab Content */}\r\n//         {activeTab === 'leads' && (\r\n//           <>\r\n//             {/* Stats Cards */}\r\n//             <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\r\n//               <div className=\"bg-white/5 backdrop-blur-lg border border-white/10 rounded-2xl p-6\">\r\n//                 <div className=\"flex items-center justify-between\">\r\n//                   <div>\r\n//                     <p className=\"text-slate-400 text-sm font-medium\">Total Leads</p>\r\n//                     <p className=\"text-3xl font-bold text-white mt-2\">{totalLeads}</p>\r\n//                   </div>\r\n//                   <div className=\"p-3 bg-amber-500/20 rounded-xl\">\r\n//                     <FiUser className=\"w-6 h-6 text-amber-400\" />\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               <div className=\"bg-white/5 backdrop-blur-lg border border-white/10 rounded-2xl p-6\">\r\n//                 <div className=\"flex items-center justify-between\">\r\n//                   <div>\r\n//                     <p className=\"text-slate-400 text-sm font-medium\">Contacted</p>\r\n//                     <p className=\"text-3xl font-bold text-green-400 mt-2\">{contactedLeads}</p>\r\n//                   </div>\r\n//                   <div className=\"p-3 bg-green-500/20 rounded-xl\">\r\n//                     <FiCheckCircle className=\"w-6 h-6 text-green-400\" />\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               <div className=\"bg-white/5 backdrop-blur-lg border border-white/10 rounded-2xl p-6\">\r\n//                 <div className=\"flex items-center justify-between\">\r\n//                   <div>\r\n//                     <p className=\"text-slate-400 text-sm font-medium\">New Leads</p>\r\n//                     <p className=\"text-3xl font-bold text-amber-400 mt-2\">{newLeads}</p>\r\n//                   </div>\r\n//                   <div className=\"p-3 bg-blue-500/20 rounded-xl\">\r\n//                     <FiClock className=\"w-6 h-6 text-blue-400\" />\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               <div className=\"bg-white/5 backdrop-blur-lg border border-white/10 rounded-2xl p-6\">\r\n//                 <div className=\"flex items-center justify-between\">\r\n//                   <div>\r\n//                     <p className=\"text-slate-400 text-sm font-medium\">Contact Rate</p>\r\n//                     <p className=\"text-3xl font-bold text-purple-400 mt-2\">{contactRate.toFixed(1)}%</p>\r\n//                   </div>\r\n//                   <div className=\"p-3 bg-purple-500/20 rounded-xl\">\r\n//                     <FiFileText className=\"w-6 h-6 text-purple-400\" />\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n\r\n//             {/* Leads Table */}\r\n//             <div className=\"bg-white/5 backdrop-blur-lg border border-white/10 rounded-2xl p-4 md:p-6 overflow-hidden\">\r\n//               <div className=\"flex items-center justify-between mb-6\">\r\n//                 <h2 className=\"text-xl font-bold text-amber-400\">Recent Leads</h2>\r\n//                 <div className=\"text-slate-400 text-sm\">\r\n//                   Showing {leads.length} lead{leads.length !== 1 ? 's' : ''}\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {loading ? (\r\n//                 <div className=\"text-center py-12\">\r\n//                   <div className=\"flex items-center justify-center space-x-3\">\r\n//                     <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-amber-400\"></div>\r\n//                     <span className=\"text-slate-300 text-lg\">Loading leads...</span>\r\n//                   </div>\r\n//                 </div>\r\n//               ) : leads.length === 0 ? (\r\n//                 <div className=\"text-center py-12\">\r\n//                   <FiFileText className=\"w-16 h-16 text-slate-600 mx-auto mb-4\" />\r\n//                   <h3 className=\"text-xl font-semibold text-slate-300 mb-2\">No leads found</h3>\r\n//                   <p className=\"text-slate-400\">Leads will appear here once customers submit the contact form.</p>\r\n//                 </div>\r\n//               ) : (\r\n//                 <div className=\"overflow-x-auto\">\r\n//                   <table className=\"w-full\">\r\n//                     <thead>\r\n//                       <tr className=\"border-b border-white/10\">\r\n//                         <th className=\"text-left p-3 md:p-4 text-slate-300 font-semibold\">Customer</th>\r\n//                         <th className=\"text-left p-3 md:p-4 text-slate-300 font-semibold hidden md:table-cell\">Contact</th>\r\n//                         <th className=\"text-left p-3 md:p-4 text-slate-300 font-semibold\">Requirement</th>\r\n//                         <th className=\"text-left p-3 md:p-4 text-slate-300 font-semibold\">Status</th>\r\n//                         <th className=\"text-left p-3 md:p-4 text-slate-300 font-semibold hidden lg:table-cell\">Date</th>\r\n//                         <th className=\"text-left p-3 md:p-4 text-slate-300 font-semibold\">Actions</th>\r\n//                       </tr>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                       {leads.map((lead, index) => (\r\n//                         <motion.tr \r\n//                           key={lead.id}\r\n//                           initial={{ opacity: 0, y: 10 }}\r\n//                           animate={{ opacity: 1, y: 0 }}\r\n//                           transition={{ delay: index * 0.05 }}\r\n//                           className=\"border-b border-white/5 hover:bg-white/2 transition-colors\"\r\n//                         >\r\n//                           {/* Customer Name - Mobile Optimized */}\r\n//                           <td className=\"p-3 md:p-4\">\r\n//                             <div className=\"flex items-center space-x-3\">\r\n//                               <div className=\"w-8 h-8 md:w-10 md:h-10 bg-amber-500/20 rounded-full flex items-center justify-center flex-shrink-0\">\r\n//                                 <FiUser className=\"w-4 h-4 md:w-5 md:h-5 text-amber-400\" />\r\n//                               </div>\r\n//                               <div className=\"min-w-0 flex-1\">\r\n//                                 <div className=\"text-white font-semibold text-sm md:text-base truncate\">\r\n//                                   {lead.name}\r\n//                                 </div>\r\n//                                 <div className=\"text-slate-400 text-xs md:hidden\">\r\n//                                   {lead.phone}\r\n//                                 </div>\r\n//                                 {lead.email && (\r\n//                                   <div className=\"text-slate-400 text-xs md:hidden truncate\">\r\n//                                     {lead.email}\r\n//                                   </div>\r\n//                                 )}\r\n//                               </div>\r\n//                             </div>\r\n//                           </td>\r\n\r\n//                           {/* Contact Info - Hidden on mobile */}\r\n//                           <td className=\"p-3 md:p-4 hidden md:table-cell\">\r\n//                             <div className=\"space-y-1\">\r\n//                               <div className=\"flex items-center space-x-2 text-slate-300\">\r\n//                                 <FiPhone className=\"w-4 h-4\" />\r\n//                                 <span className=\"font-mono text-sm\">{lead.phone}</span>\r\n//                               </div>\r\n//                               {lead.email && (\r\n//                                 <div className=\"flex items-center space-x-2 text-slate-400\">\r\n//                                   <FiMail className=\"w-4 h-4\" />\r\n//                                   <span className=\"text-sm truncate max-w-[150px]\">{lead.email}</span>\r\n//                                 </div>\r\n//                               )}\r\n//                             </div>\r\n//                           </td>\r\n\r\n//                           {/* Requirement */}\r\n//                           <td className=\"p-3 md:p-4\">\r\n//                             {lead.requirement ? (\r\n//                               <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium border ${getRequirementColor(lead.requirement)}`}>\r\n//                                 <span className=\"truncate max-w-[80px] md:max-w-none\">\r\n//                                   {lead.requirement}\r\n//                                 </span>\r\n//                               </span>\r\n//                             ) : (\r\n//                               <span className=\"text-slate-400 text-xs\">Not specified</span>\r\n//                             )}\r\n//                           </td>\r\n\r\n//                           {/* Status */}\r\n//                           <td className=\"p-3 md:p-4\">\r\n//                             <button\r\n//                               onClick={() => toggleContactStatus(lead.id, lead.is_contacted || false)}\r\n//                               className={`inline-flex items-center px-2 py-1 md:px-3 md:py-1 rounded-full text-xs md:text-sm font-medium border transition-colors ${\r\n//                                 lead.is_contacted\r\n//                                   ? 'bg-green-500/20 text-green-400 border-green-500/30 hover:bg-green-500/30'\r\n//                                   : 'bg-amber-500/20 text-amber-400 border-amber-500/30 hover:bg-amber-500/30'\r\n//                               }`}\r\n//                             >\r\n//                               {lead.is_contacted ? (\r\n//                                 <>\r\n//                                   <FiCheckCircle className=\"w-3 h-3 mr-1\" />\r\n//                                   <span className=\"hidden sm:inline\">Contacted</span>\r\n//                                   <span className=\"sm:hidden\">Done</span>\r\n//                                 </>\r\n//                               ) : (\r\n//                                 <>\r\n//                                   <FiClock className=\"w-3 h-3 mr-1\" />\r\n//                                   <span className=\"hidden sm:inline\">New Lead</span>\r\n//                                   <span className=\"sm:hidden\">New</span>\r\n//                                 </>\r\n//                               )}\r\n//                             </button>\r\n//                           </td>\r\n\r\n//                           {/* Date - Hidden on mobile */}\r\n//                           <td className=\"p-3 md:p-4 hidden lg:table-cell\">\r\n//                             <div className=\"text-slate-300 text-sm\">\r\n//                               {lead.created_at ? formatDate(lead.created_at) : 'Unknown'}\r\n//                             </div>\r\n//                           </td>\r\n\r\n//                           {/* Actions - Always visible on mobile */}\r\n//                           <td className=\"p-3 md:p-4\">\r\n//                             <div className=\"flex space-x-1 md:space-x-2\">\r\n//                               <button\r\n//                                 onClick={() => toggleContactStatus(lead.id, lead.is_contacted || false)}\r\n//                                 className={`p-2 rounded-lg border transition-colors ${\r\n//                                   lead.is_contacted\r\n//                                     ? 'bg-amber-500/20 text-amber-400 border-amber-500/30 hover:bg-amber-500/30'\r\n//                                     : 'bg-green-500/20 text-green-400 border-green-500/30 hover:bg-green-500/30'\r\n//                                 }`}\r\n//                                 title={lead.is_contacted ? \"Mark as New\" : \"Mark as Contacted\"}\r\n//                               >\r\n//                                 {lead.is_contacted ? \r\n//                                   <FiXCircle className=\"w-3 h-3 md:w-4 md:h-4\" /> : \r\n//                                   <FiCheckCircle className=\"w-3 h-3 md:w-4 md:h-4\" />\r\n//                                 }\r\n//                               </button>\r\n                              \r\n//                               {/* Mobile date shortcut */}\r\n//                               <div className=\"md:hidden text-slate-400 text-xs flex items-center px-2\">\r\n//                                 {lead.created_at ? \r\n//                                   new Date(lead.created_at).toLocaleDateString('en-US', { month: 'short', day: 'numeric' })\r\n//                                   : 'N/A'\r\n//                                 }\r\n//                               </div>\r\n//                             </div>\r\n//                           </td>\r\n//                         </motion.tr>\r\n//                       ))}\r\n//                     </tbody>\r\n//                   </table>\r\n//                 </div>\r\n//               )}\r\n\r\n//               {/* Mobile date legend */}\r\n//               {leads.length > 0 && (\r\n//                 <div className=\"md:hidden mt-4 pt-4 border-t border-white/10\">\r\n//                   <p className=\"text-slate-400 text-xs text-center\">\r\n//                     Dates shown in mobile view are in MMM DD format\r\n//                   </p>\r\n//                 </div>\r\n//               )}\r\n//             </div>\r\n//           </>\r\n//         )}\r\n\r\n//         {/* NFO Management Tab Content */}\r\n//         {activeTab === 'nfo' && (\r\n//           <div className=\"space-y-8\">\r\n//             {/* NFO List Header with Create Button */}\r\n//             <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\r\n//               <h2 className=\"text-2xl font-bold text-amber-400\">\r\n//                 Active NFOs ({nfoData.length})\r\n//               </h2>\r\n//               <button\r\n//                 onClick={handleNewNfoClick}\r\n//                 className=\"flex items-center gap-2 px-4 py-2 bg-amber-500/20 border border-amber-500/30 text-amber-400 rounded-xl hover:bg-amber-500/30 transition-colors\"\r\n//               >\r\n//                 <FiPlus className=\"w-4 h-4\" />\r\n//                 Create New NFO\r\n//               </button>\r\n//             </div>\r\n\r\n//             {/* Form Errors */}\r\n//             {formErrors.length > 0 && (\r\n//               <div className=\"bg-rose-500/20 border border-rose-500/30 rounded-2xl p-4\">\r\n//                 <h3 className=\"text-rose-400 font-semibold mb-2\">Error:</h3>\r\n//                 <ul className=\"text-rose-300 text-sm list-disc list-inside\">\r\n//                   {formErrors.map((error, index) => (\r\n//                     <li key={index}>{error}</li>\r\n//                   ))}\r\n//                 </ul>\r\n//               </div>\r\n//             )}\r\n\r\n//             {/* NFO Form - Conditionally Rendered */}\r\n//             {(showNfoForm || editingId) && (\r\n//               <div className=\"bg-white/5 backdrop-blur-lg border border-white/10 rounded-2xl p-6\">\r\n//                 <h2 className=\"text-xl font-bold text-amber-400 mb-6\">\r\n//                   {editingId ? 'Edit NFO' : 'Add New NFO'}\r\n//                 </h2>\r\n                \r\n//                 <form onSubmit={handleNfoSubmit} className=\"space-y-6\">\r\n//                   <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n//                     <div>\r\n//                       <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n//                         NFO Title *\r\n//                       </label>\r\n//                       <input\r\n//                         type=\"text\"\r\n//                         value={nfoForm.title}\r\n//                         onChange={(e) => setNfoForm({...nfoForm, title: e.target.value})}\r\n//                         className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white placeholder-slate-400 focus:outline-none focus:border-amber-500/50 transition-colors\"\r\n//                         placeholder=\"Enter NFO title\"\r\n//                         required\r\n//                       />\r\n//                     </div>\r\n\r\n//                     <div>\r\n//                       <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n//                         Image {!editingId && '*'}\r\n//                       </label>\r\n//                       <input\r\n//                         type=\"file\"\r\n//                         accept=\"image/jpeg, image/jpg, image/png, image/webp\"\r\n//                         onChange={(e) => {\r\n//                           setNfoForm({...nfoForm, image_file: e.target.files?.[0] || null});\r\n//                           setFormErrors([]);\r\n//                         }}\r\n//                         className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white file:mr-4 file:py-2 file:px-4 file:rounded-lg file:border-0 file:text-sm file:font-medium file:bg-amber-500/20 file:text-amber-400 hover:file:bg-amber-500/30 transition-colors\"\r\n//                         required={!editingId}\r\n//                       />\r\n//                       <p className=\"text-slate-400 text-xs mt-2\">\r\n//                         Required for new NFOs. Max 5MB. Supported: JPEG, PNG, WebP\r\n//                         {editingId && (\r\n//                           <span className=\"text-amber-400 ml-1\">(Leave empty to keep current image)</span>\r\n//                         )}\r\n//                       </p>\r\n//                     </div>\r\n//                   </div>\r\n\r\n//                   <div>\r\n//                     <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n//                       Description\r\n//                     </label>\r\n//                     <textarea\r\n//                       value={nfoForm.description}\r\n//                       onChange={(e) => setNfoForm({...nfoForm, description: e.target.value})}\r\n//                       rows={3}\r\n//                       className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white placeholder-slate-400 focus:outline-none focus:border-amber-500/50 transition-colors\"\r\n//                       placeholder=\"Enter NFO description...\"\r\n//                     />\r\n//                   </div>\r\n\r\n//                   <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n//                     <div>\r\n//                       <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n//                         Start Date\r\n//                       </label>\r\n//                       <input\r\n//                         type=\"date\"\r\n//                         value={nfoForm.start_date}\r\n//                         onChange={(e) => setNfoForm({...nfoForm, start_date: e.target.value})}\r\n//                         className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white focus:outline-none focus:border-amber-500/50 transition-colors\"\r\n//                       />\r\n//                     </div>\r\n\r\n//                     <div>\r\n//                       <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n//                         End Date\r\n//                       </label>\r\n//                       <input\r\n//                         type=\"date\"\r\n//                         value={nfoForm.end_date}\r\n//                         onChange={(e) => setNfoForm({...nfoForm, end_date: e.target.value})}\r\n//                         className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white focus:outline-none focus:border-amber-500/50 transition-colors\"\r\n//                       />\r\n//                     </div>\r\n//                   </div>\r\n\r\n//                   <div className=\"flex gap-3 pt-4\">\r\n//                     <button\r\n//                       type=\"submit\"\r\n//                       disabled={uploading}\r\n//                       className=\"flex items-center gap-2 px-6 py-3 bg-amber-500/20 border border-amber-500/30 text-amber-400 rounded-xl hover:bg-amber-500/30 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n//                     >\r\n//                       <FiUpload className=\"w-4 h-4\" />\r\n//                       {uploading ? 'Saving...' : editingId ? 'Update NFO' : 'Create NFO'}\r\n//                     </button>\r\n                    \r\n//                     <button\r\n//                       type=\"button\"\r\n//                       onClick={resetNfoForm}\r\n//                       className=\"px-6 py-3 bg-white/5 border border-white/10 text-slate-300 rounded-xl hover:bg-white/10 transition-colors\"\r\n//                     >\r\n//                       Cancel\r\n//                     </button>\r\n//                   </div>\r\n//                 </form>\r\n//               </div>\r\n//             )}\r\n\r\n//             {/* NFO List */}\r\n//             <div className=\"bg-white/5 backdrop-blur-lg border border-white/10 rounded-2xl p-6\">\r\n//               {nfoData.length === 0 ? (\r\n//                 <div className=\"text-center py-12\">\r\n//                   <FiImage className=\"w-16 h-16 text-slate-600 mx-auto mb-4\" />\r\n//                   <h3 className=\"text-xl font-semibold text-slate-300 mb-2\">No NFOs found</h3>\r\n//                   <p className=\"text-slate-400 mb-6\">Create your first NFO to get started.</p>\r\n//                   <button\r\n//                     onClick={handleNewNfoClick}\r\n//                     className=\"flex items-center gap-2 px-6 py-3 bg-amber-500/20 border border-amber-500/30 text-amber-400 rounded-xl hover:bg-amber-500/30 transition-colors mx-auto\"\r\n//                   >\r\n//                     <FiPlus className=\"w-4 h-4\" />\r\n//                     Create Your First NFO\r\n//                   </button>\r\n//                 </div>\r\n//               ) : (\r\n//                 <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n//                   {nfoData.map((nfo) => (\r\n//                     <motion.div\r\n//                       key={nfo.id}\r\n//                       initial={{ opacity: 0, y: 10 }}\r\n//                       animate={{ opacity: 1, y: 0 }}\r\n//                       className=\"bg-white/5 border border-white/10 rounded-2xl overflow-hidden hover:bg-white/10 transition-colors\"\r\n//                     >\r\n//                       {nfo.image_url && (\r\n//                         <div className=\"h-40 bg-slate-800 overflow-hidden\">\r\n//                           <img\r\n//                             src={getImageUrl(nfo.image_url) || ''}\r\n//                             alt={nfo.title}\r\n//                             className=\"w-full h-full object-cover\"\r\n//                           />\r\n//                         </div>\r\n//                       )}\r\n//                       <div className=\"p-4\">\r\n//                         <h3 className=\"font-bold text-white text-lg mb-2 line-clamp-2\">\r\n//                           {nfo.title}\r\n//                         </h3>\r\n//                         {nfo.description && (\r\n//                           <p className=\"text-slate-300 text-sm mb-3 line-clamp-2\">\r\n//                             {nfo.description}\r\n//                           </p>\r\n//                         )}\r\n//                         <div className=\"space-y-1 text-xs text-slate-400 mb-4\">\r\n//                           <div>Start: {nfo.start_date ? new Date(nfo.start_date).toLocaleDateString() : 'TBA'}</div>\r\n//                           <div>End: {nfo.end_date ? new Date(nfo.end_date).toLocaleDateString() : 'TBA'}</div>\r\n//                         </div>\r\n//                         <div className=\"flex gap-2\">\r\n//                           <button\r\n//                             onClick={() => handleEditNfo(nfo)}\r\n//                             className=\"flex items-center gap-1 px-3 py-1 bg-blue-500/20 border border-blue-500/30 text-blue-400 rounded-lg text-xs hover:bg-blue-500/30 transition-colors\"\r\n//                           >\r\n//                             <FiEdit className=\"w-3 h-3\" />\r\n//                             Edit\r\n//                           </button>\r\n//                           <button\r\n//                             onClick={() => handleDeleteNfo(nfo.id)}\r\n//                             className=\"flex items-center gap-1 px-3 py-1 bg-rose-500/20 border border-rose-500/30 text-rose-400 rounded-lg text-xs hover:bg-rose-500/30 transition-colors\"\r\n//                           >\r\n//                             <FiTrash2 className=\"w-3 h-3\" />\r\n//                             Delete\r\n//                           </button>\r\n//                         </div>\r\n//                       </div>\r\n//                     </motion.div>\r\n//                   ))}\r\n//                 </div>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n\r\n//         {/* Footer Stats */}\r\n//         {(leads.length > 0 || nfoData.length > 0) && (\r\n//           <div className=\"mt-6 text-center\">\r\n//             <p className=\"text-slate-400 text-sm\">\r\n//               Last updated: {new Date().toLocaleString()}\r\n//             </p>\r\n//           </div>\r\n//         )}\r\n//       </motion.div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// v2 with bonds integration\r\n// v2 - Updated with Bonds NCD and FD management\r\n\"use client\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { createClient } from \"@supabase/supabase-js\";\r\nimport { motion } from \"framer-motion\";\r\nimport { \r\n  FiUser, FiPhone, FiMail, FiFileText, FiClock, \r\n  FiCheckCircle, FiXCircle, FiLogOut, FiRefreshCw,\r\n  FiImage, FiUpload, FiPlus, FiEdit, FiTrash2,\r\n  FiTrendingUp, FiShield\r\n} from \"react-icons/fi\";\r\n\r\ntype LeadRow = {\r\n  id: string;\r\n  name: string;\r\n  phone: string;\r\n  email?: string;\r\n  requirement?: string;\r\n  notes?: string;\r\n  is_contacted?: boolean;\r\n  created_at?: string;\r\n};\r\n\r\ntype NFOData = {\r\n  id: string;\r\n  title: string;\r\n  description: string | null;\r\n  start_date: string | null;\r\n  end_date: string | null;\r\n  image_url: string | null;\r\n  created_at: string;\r\n};\r\n\r\ntype BondsNCD = {\r\n  id: string;\r\n  company_name: string;\r\n  issue_size: string | null;\r\n  interest_rate: number | null;\r\n  tenure: string | null;\r\n  image_url: string | null;\r\n  chart_data: any | null;\r\n  created_at: string;\r\n};\r\n\r\ntype BondsFD = {\r\n  id: string;\r\n  bank_name: string;\r\n  interest_rate: number | null;\r\n  tenure: string | null;\r\n  image_url: string | null;\r\n  chart_data: any | null;\r\n  created_at: string;\r\n};\r\n\r\n// Initialize Supabase client only once\r\nconst supabase = createClient(\r\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\r\n);\r\n\r\nexport default function AdminDashboardPage() {\r\n  const [leads, setLeads] = useState<LeadRow[]>([]);\r\n  const [nfoData, setNfoData] = useState<NFOData[]>([]);\r\n  const [bondsNCD, setBondsNCD] = useState<BondsNCD[]>([]);\r\n  const [bondsFD, setBondsFD] = useState<BondsFD[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [userEmail, setUserEmail] = useState<string>(\"\");\r\n  const [activeTab, setActiveTab] = useState<'leads' | 'nfo' | 'bondsNCD' | 'bondsFD'>('leads');\r\n  \r\n  // NFO Form State\r\n  const [nfoForm, setNfoForm] = useState({\r\n    title: '',\r\n    description: '',\r\n    start_date: '',\r\n    end_date: '',\r\n    image_file: null as File | null\r\n  });\r\n\r\n  // Bonds NCD Form State\r\n  const [bondsNCDForm, setBondsNCDForm] = useState({\r\n    company_name: '',\r\n    issue_size: '',\r\n    interest_rate: '',\r\n    tenure: '',\r\n    image_file: null as File | null\r\n  });\r\n\r\n  // Bonds FD Form State\r\n  const [bondsFDForm, setBondsFDForm] = useState({\r\n    bank_name: '',\r\n    interest_rate: '',\r\n    tenure: '',\r\n    image_file: null as File | null\r\n  });\r\n\r\n  const [uploading, setUploading] = useState(false);\r\n  const [editingId, setEditingId] = useState<string | null>(null);\r\n  const [editingType, setEditingType] = useState<'nfo' | 'ncd' | 'fd' | null>(null);\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [formErrors, setFormErrors] = useState<string[]>([]);\r\n  const [debugInfo, setDebugInfo] = useState<string[]>([]);\r\n\r\n  const addDebugInfo = (message: string) => {\r\n    console.log(`🔍 ${message}`);\r\n    setDebugInfo(prev => [...prev.slice(-9), `${new Date().toLocaleTimeString()}: ${message}`]);\r\n  };\r\n\r\n  const checkloggedin = async () => {\r\n    try {\r\n      addDebugInfo(\"Checking authentication...\");\r\n      const { data, error } = await supabase.auth.getUser();\r\n      if (error) {\r\n        addDebugInfo(`Auth error: ${error.message}`);\r\n        return false;\r\n      }\r\n      setUserEmail(data.user?.email || \"\");\r\n      addDebugInfo(\"Authentication successful\");\r\n      return true;\r\n    } catch (error: any) {\r\n      addDebugInfo(`Auth check failed: ${error.message}`);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkloggedin().then((loggedIn) => {\r\n      if (!loggedIn) {\r\n        window.location.href = \"/admin/login\";\r\n      }\r\n    });\r\n    fetchLeads();\r\n    fetchNFOData();\r\n    fetchBondsNCD();\r\n    fetchBondsFD();\r\n  }, []);\r\n\r\n  async function fetchLeads() {\r\n    try {\r\n      setLoading(true);\r\n      addDebugInfo(\"Fetching leads...\");\r\n      const { data, error } = await supabase\r\n        .from('leads')\r\n        .select('*')\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (error) {\r\n        addDebugInfo(`Leads fetch error: ${error.message}`);\r\n        console.error('Error fetching leads:', error);\r\n      } else {\r\n        addDebugInfo(`Fetched ${data?.length || 0} leads`);\r\n        setLeads(data || []);\r\n      }\r\n    } catch (error: any) {\r\n      addDebugInfo(`Leads fetch exception: ${error.message}`);\r\n      console.error('Error in fetchLeads:', error);\r\n    } finally {\r\n      setLoading(false);\r\n      setRefreshing(false);\r\n    }\r\n  }\r\n\r\n  async function fetchNFOData() {\r\n    try {\r\n      addDebugInfo(\"Fetching NFO data...\");\r\n      const { data, error } = await supabase\r\n        .from('upcoming_nfo')\r\n        .select('*')\r\n        .order('start_date', { ascending: true });\r\n\r\n      if (error) {\r\n        addDebugInfo(`NFO fetch error: ${error.message}`);\r\n        console.error('Error fetching NFO data:', error);\r\n      } else {\r\n        addDebugInfo(`Fetched ${data?.length || 0} NFOs`);\r\n        setNfoData(data || []);\r\n      }\r\n    } catch (error: any) {\r\n      addDebugInfo(`NFO fetch exception: ${error.message}`);\r\n      console.error('Error in fetchNFOData:', error);\r\n    }\r\n  }\r\n\r\n  async function fetchBondsNCD() {\r\n    try {\r\n      addDebugInfo(\"Fetching Bonds NCD data...\");\r\n      const { data, error } = await supabase\r\n        .from('bonds_ncd')\r\n        .select('*')\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (error) {\r\n        addDebugInfo(`Bonds NCD fetch error: ${error.message}`);\r\n        console.error('Error fetching Bonds NCD data:', error);\r\n      } else {\r\n        addDebugInfo(`Fetched ${data?.length || 0} Bonds NCD`);\r\n        setBondsNCD(data || []);\r\n      }\r\n    } catch (error: any) {\r\n      addDebugInfo(`Bonds NCD fetch exception: ${error.message}`);\r\n      console.error('Error in fetchBondsNCD:', error);\r\n    }\r\n  }\r\n\r\n  async function fetchBondsFD() {\r\n    try {\r\n      addDebugInfo(\"Fetching Bonds FD data...\");\r\n      const { data, error } = await supabase\r\n        .from('bonds_fd')\r\n        .select('*')\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (error) {\r\n        addDebugInfo(`Bonds FD fetch error: ${error.message}`);\r\n        console.error('Error fetching Bonds FD data:', error);\r\n      } else {\r\n        addDebugInfo(`Fetched ${data?.length || 0} Bonds FD`);\r\n        setBondsFD(data || []);\r\n      }\r\n    } catch (error: any) {\r\n      addDebugInfo(`Bonds FD fetch exception: ${error.message}`);\r\n      console.error('Error in fetchBondsFD:', error);\r\n    }\r\n  }\r\n\r\n  async function handleRefresh() {\r\n    setRefreshing(true);\r\n    addDebugInfo(\"Manual refresh triggered\");\r\n    await fetchLeads();\r\n    await fetchNFOData();\r\n    await fetchBondsNCD();\r\n    await fetchBondsFD();\r\n  }\r\n\r\n  async function toggleContactStatus(leadId: string, currentStatus: boolean) {\r\n    try {\r\n      addDebugInfo(`Toggling contact status for lead ${leadId}`);\r\n      const { error } = await supabase\r\n        .from('leads')\r\n        .update({ is_contacted: !currentStatus })\r\n        .eq('id', leadId);\r\n\r\n      if (error) {\r\n        addDebugInfo(`Contact status update error: ${error.message}`);\r\n        console.error('Error updating lead:', error);\r\n      } else {\r\n        addDebugInfo(\"Contact status updated successfully\");\r\n        setLeads(leads.map(lead => \r\n          lead.id === leadId \r\n            ? { ...lead, is_contacted: !currentStatus }\r\n            : lead\r\n        ));\r\n      }\r\n    } catch (error: any) {\r\n      addDebugInfo(`Contact status exception: ${error.message}`);\r\n      console.error('Error toggling contact status:', error);\r\n    }\r\n  }\r\n\r\n  // Image Upload Function\r\n  const handleImageUpload = async (file: File, bucket: string): Promise<string> => {\r\n    const fileExt = file.name.split('.').pop();\r\n    const fileName = `${Math.random().toString(36).substring(2)}_${Date.now()}.${fileExt}`;\r\n    const filePath = fileName;\r\n\r\n    addDebugInfo(`Uploading image to ${bucket}: ${fileName} (${file.size} bytes)`);\r\n\r\n    const { data, error: uploadError } = await supabase.storage\r\n      .from(bucket)\r\n      .upload(filePath, file, {\r\n        cacheControl: '3600',\r\n        upsert: false\r\n      });\r\n\r\n    if (uploadError) {\r\n      addDebugInfo(`Image upload failed: ${uploadError.message}`);\r\n      console.error(\"❌ Storage upload error:\", uploadError);\r\n      throw new Error(`Failed to upload image: ${uploadError.message}`);\r\n    }\r\n\r\n    addDebugInfo(\"Image uploaded successfully\");\r\n    console.log(\"✅ Image uploaded successfully:\", data?.path);\r\n    return fileName;\r\n  };\r\n\r\n  // NFO Management Functions\r\n  const validateNFOForm = (): boolean => {\r\n    const errors: string[] = [];\r\n\r\n    if (!nfoForm.title.trim()) {\r\n      errors.push('Title is required');\r\n    }\r\n\r\n    if (!editingId && !nfoForm.image_file) {\r\n      errors.push('Image is required for new NFOs');\r\n    }\r\n\r\n    if (nfoForm.image_file) {\r\n      const validTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'];\r\n      if (!validTypes.includes(nfoForm.image_file.type)) {\r\n        errors.push('Please upload a valid image (JPEG, PNG, or WebP)');\r\n      }\r\n      \r\n      if (nfoForm.image_file.size > 5 * 1024 * 1024) {\r\n        errors.push('Image size should be less than 5MB');\r\n      }\r\n    }\r\n\r\n    setFormErrors(errors);\r\n    if (errors.length > 0) {\r\n      addDebugInfo(`NFO Form validation failed: ${errors.join(', ')}`);\r\n    }\r\n    return errors.length === 0;\r\n  };\r\n\r\n  const handleNfoSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    addDebugInfo(\"NFO form submission started\");\r\n    \r\n    if (!validateNFOForm()) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setUploading(true);\r\n      setFormErrors([]);\r\n      \r\n      let imageFileName = null;\r\n\r\n      if (nfoForm.image_file) {\r\n        try {\r\n          imageFileName = await handleImageUpload(nfoForm.image_file, 'nfo-images');\r\n        } catch (uploadError: any) {\r\n          addDebugInfo(`Image upload error in submit: ${uploadError.message}`);\r\n          setFormErrors([`Image upload failed: ${uploadError.message}`]);\r\n          setUploading(false);\r\n          return;\r\n        }\r\n      } else if (editingId) {\r\n        const existingNfo = nfoData.find(nfo => nfo.id === editingId);\r\n        imageFileName = existingNfo?.image_url || null;\r\n        addDebugInfo(`Using existing image: ${imageFileName}`);\r\n      }\r\n\r\n      const nfoDataToSave = {\r\n        title: nfoForm.title,\r\n        description: nfoForm.description || null,\r\n        start_date: nfoForm.start_date || null,\r\n        end_date: nfoForm.end_date || null,\r\n        image_url: imageFileName,\r\n      };\r\n\r\n      addDebugInfo(`Saving NFO data: ${JSON.stringify(nfoDataToSave)}`);\r\n\r\n      let result;\r\n      if (editingId) {\r\n        addDebugInfo(`Updating existing NFO: ${editingId}`);\r\n        result = await supabase\r\n          .from('upcoming_nfo')\r\n          .update(nfoDataToSave)\r\n          .eq('id', editingId);\r\n      } else {\r\n        addDebugInfo(\"Creating new NFO\");\r\n        result = await supabase\r\n          .from('upcoming_nfo')\r\n          .insert([{\r\n            ...nfoDataToSave,\r\n            created_at: new Date().toISOString()\r\n          }]);\r\n      }\r\n\r\n      if (result.error) {\r\n        addDebugInfo(`Database operation failed: ${result.error.message}`);\r\n        throw new Error(result.error.message);\r\n      }\r\n\r\n      addDebugInfo(\"NFO saved successfully\");\r\n      resetForm();\r\n      await fetchNFOData();\r\n      alert(editingId ? 'NFO updated successfully!' : 'NFO created successfully!');\r\n      \r\n    } catch (error: any) {\r\n      addDebugInfo(`NFO submission failed: ${error.message}`);\r\n      setFormErrors([error.message]);\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  // Bonds NCD Management Functions\r\n  const validateBondsNCDForm = (): boolean => {\r\n    const errors: string[] = [];\r\n\r\n    if (!bondsNCDForm.company_name.trim()) {\r\n      errors.push('Company name is required');\r\n    }\r\n\r\n    if (!editingId && !bondsNCDForm.image_file) {\r\n      errors.push('Image is required for new NCDs');\r\n    }\r\n\r\n    if (bondsNCDForm.image_file) {\r\n      const validTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'];\r\n      if (!validTypes.includes(bondsNCDForm.image_file.type)) {\r\n        errors.push('Please upload a valid image (JPEG, PNG, or WebP)');\r\n      }\r\n      \r\n      if (bondsNCDForm.image_file.size > 5 * 1024 * 1024) {\r\n        errors.push('Image size should be less than 5MB');\r\n      }\r\n    }\r\n\r\n    setFormErrors(errors);\r\n    return errors.length === 0;\r\n  };\r\n\r\n  const handleBondsNCDSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    addDebugInfo(\"Bonds NCD form submission started\");\r\n    \r\n    if (!validateBondsNCDForm()) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setUploading(true);\r\n      setFormErrors([]);\r\n      \r\n      let imageFileName = null;\r\n\r\n      if (bondsNCDForm.image_file) {\r\n        try {\r\n          imageFileName = await handleImageUpload(bondsNCDForm.image_file, 'bonds-images');\r\n        } catch (uploadError: any) {\r\n          setFormErrors([`Image upload failed: ${uploadError.message}`]);\r\n          setUploading(false);\r\n          return;\r\n        }\r\n      } else if (editingId) {\r\n        const existingNCD = bondsNCD.find(ncd => ncd.id === editingId);\r\n        imageFileName = existingNCD?.image_url || null;\r\n      }\r\n\r\n      const ncdDataToSave = {\r\n        company_name: bondsNCDForm.company_name,\r\n        issue_size: bondsNCDForm.issue_size || null,\r\n        interest_rate: bondsNCDForm.interest_rate ? parseFloat(bondsNCDForm.interest_rate) : null,\r\n        tenure: bondsNCDForm.tenure || null,\r\n        image_url: imageFileName,\r\n      };\r\n\r\n      let result;\r\n      if (editingId) {\r\n        result = await supabase\r\n          .from('bonds_ncd')\r\n          .update(ncdDataToSave)\r\n          .eq('id', editingId);\r\n      } else {\r\n        result = await supabase\r\n          .from('bonds_ncd')\r\n          .insert([{\r\n            ...ncdDataToSave,\r\n            created_at: new Date().toISOString()\r\n          }]);\r\n      }\r\n\r\n      if (result.error) throw new Error(result.error.message);\r\n\r\n      resetForm();\r\n      await fetchBondsNCD();\r\n      alert(editingId ? 'NCD updated successfully!' : 'NCD created successfully!');\r\n      \r\n    } catch (error: any) {\r\n      setFormErrors([error.message]);\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  // Bonds FD Management Functions\r\n  const validateBondsFDForm = (): boolean => {\r\n    const errors: string[] = [];\r\n\r\n    if (!bondsFDForm.bank_name.trim()) {\r\n      errors.push('Bank name is required');\r\n    }\r\n\r\n    if (!editingId && !bondsFDForm.image_file) {\r\n      errors.push('Image is required for new FDs');\r\n    }\r\n\r\n    if (bondsFDForm.image_file) {\r\n      const validTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'];\r\n      if (!validTypes.includes(bondsFDForm.image_file.type)) {\r\n        errors.push('Please upload a valid image (JPEG, PNG, or WebP)');\r\n      }\r\n      \r\n      if (bondsFDForm.image_file.size > 5 * 1024 * 1024) {\r\n        errors.push('Image size should be less than 5MB');\r\n      }\r\n    }\r\n\r\n    setFormErrors(errors);\r\n    return errors.length === 0;\r\n  };\r\n\r\n  const handleBondsFDSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    addDebugInfo(\"Bonds FD form submission started\");\r\n    \r\n    if (!validateBondsFDForm()) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setUploading(true);\r\n      setFormErrors([]);\r\n      \r\n      let imageFileName = null;\r\n\r\n      if (bondsFDForm.image_file) {\r\n        try {\r\n          imageFileName = await handleImageUpload(bondsFDForm.image_file, 'bonds-images');\r\n        } catch (uploadError: any) {\r\n          setFormErrors([`Image upload failed: ${uploadError.message}`]);\r\n          setUploading(false);\r\n          return;\r\n        }\r\n      } else if (editingId) {\r\n        const existingFD = bondsFD.find(fd => fd.id === editingId);\r\n        imageFileName = existingFD?.image_url || null;\r\n      }\r\n\r\n      const fdDataToSave = {\r\n        bank_name: bondsFDForm.bank_name,\r\n        interest_rate: bondsFDForm.interest_rate ? parseFloat(bondsFDForm.interest_rate) : null,\r\n        tenure: bondsFDForm.tenure || null,\r\n        image_url: imageFileName,\r\n      };\r\n\r\n      let result;\r\n      if (editingId) {\r\n        result = await supabase\r\n          .from('bonds_fd')\r\n          .update(fdDataToSave)\r\n          .eq('id', editingId);\r\n      } else {\r\n        result = await supabase\r\n          .from('bonds_fd')\r\n          .insert([{\r\n            ...fdDataToSave,\r\n            created_at: new Date().toISOString()\r\n          }]);\r\n      }\r\n\r\n      if (result.error) throw new Error(result.error.message);\r\n\r\n      resetForm();\r\n      await fetchBondsFD();\r\n      alert(editingId ? 'FD updated successfully!' : 'FD created successfully!');\r\n      \r\n    } catch (error: any) {\r\n      setFormErrors([error.message]);\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (item: any, type: 'nfo' | 'ncd' | 'fd') => {\r\n    addDebugInfo(`Editing ${type}: ${item.title || item.company_name || item.bank_name}`);\r\n    \r\n    if (type === 'nfo') {\r\n      setNfoForm({\r\n        title: item.title,\r\n        description: item.description || '',\r\n        start_date: item.start_date ? item.start_date.split('T')[0] : '',\r\n        end_date: item.end_date ? item.end_date.split('T')[0] : '',\r\n        image_file: null\r\n      });\r\n    } else if (type === 'ncd') {\r\n      setBondsNCDForm({\r\n        company_name: item.company_name,\r\n        issue_size: item.issue_size || '',\r\n        interest_rate: item.interest_rate?.toString() || '',\r\n        tenure: item.tenure || '',\r\n        image_file: null\r\n      });\r\n    } else if (type === 'fd') {\r\n      setBondsFDForm({\r\n        bank_name: item.bank_name,\r\n        interest_rate: item.interest_rate?.toString() || '',\r\n        tenure: item.tenure || '',\r\n        image_file: null\r\n      });\r\n    }\r\n\r\n    setEditingId(item.id);\r\n    setEditingType(type);\r\n    setShowForm(true);\r\n    setFormErrors([]);\r\n  };\r\n\r\n  const handleDelete = async (id: string, type: 'nfo' | 'ncd' | 'fd') => {\r\n    if (!confirm('Are you sure you want to delete this item?')) return;\r\n\r\n    try {\r\n      addDebugInfo(`Deleting ${type}: ${id}`);\r\n      const tableName = type === 'nfo' ? 'upcoming_nfo' : type === 'ncd' ? 'bonds_ncd' : 'bonds_fd';\r\n      \r\n      const { error } = await supabase\r\n        .from(tableName)\r\n        .delete()\r\n        .eq('id', id);\r\n\r\n      if (error) throw error;\r\n\r\n      // Refresh the appropriate data\r\n      if (type === 'nfo') await fetchNFOData();\r\n      else if (type === 'ncd') await fetchBondsNCD();\r\n      else if (type === 'fd') await fetchBondsFD();\r\n      \r\n      alert('Item deleted successfully!');\r\n    } catch (error: any) {\r\n      console.error('Error deleting item:', error);\r\n      alert(`Error deleting item: ${error.message || 'Please try again.'}`);\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setNfoForm({\r\n      title: '',\r\n      description: '',\r\n      start_date: '',\r\n      end_date: '',\r\n      image_file: null\r\n    });\r\n    setBondsNCDForm({\r\n      company_name: '',\r\n      issue_size: '',\r\n      interest_rate: '',\r\n      tenure: '',\r\n      image_file: null\r\n    });\r\n    setBondsFDForm({\r\n      bank_name: '',\r\n      interest_rate: '',\r\n      tenure: '',\r\n      image_file: null\r\n    });\r\n    setEditingId(null);\r\n    setEditingType(null);\r\n    setShowForm(false);\r\n    setFormErrors([]);\r\n  };\r\n\r\n  const handleNewClick = (type: 'nfo' | 'ncd' | 'fd') => {\r\n    resetForm();\r\n    setEditingType(type);\r\n    setShowForm(true);\r\n  };\r\n\r\n  const getImageUrl = (imagePath: string | null, bucket: string) => {\r\n    if (!imagePath) return null;\r\n    \r\n    let filename = imagePath;\r\n    if (filename.includes('/')) {\r\n      filename = filename.split('/').pop() || filename;\r\n    }\r\n    filename = filename.replace(`${bucket}/`, '');\r\n    \r\n    const { data } = supabase.storage\r\n      .from(bucket)\r\n      .getPublicUrl(filename);\r\n    \r\n    return data.publicUrl;\r\n  };\r\n\r\n  async function handleSignOut() {\r\n    try {\r\n      const { error } = await supabase.auth.signOut();\r\n      if (error) {\r\n        console.error(\"Error signing out:\", error.message);\r\n        return;\r\n      }\r\n      window.location.href = \"/admin/login\";\r\n    } catch (error: any) {\r\n      console.error(\"Sign out error:\", error);\r\n    }\r\n  }\r\n\r\n  // Stats calculations\r\n  const totalLeads = leads.length;\r\n  const contactedLeads = leads.filter(lead => lead.is_contacted).length;\r\n  const newLeads = totalLeads - contactedLeads;\r\n  const contactRate = totalLeads > 0 ? (contactedLeads / totalLeads) * 100 : 0;\r\n\r\n  const formatDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  const getRequirementColor = (requirement: string) => {\r\n    const colors: { [key: string]: string } = {\r\n      'Insurance': 'bg-blue-500/20 text-blue-400 border-blue-500/30',\r\n      'Mediclaim': 'bg-green-500/20 text-green-400 border-green-500/30',\r\n      'Loan': 'bg-purple-500/20 text-purple-400 border-purple-500/30',\r\n      'Mutual Funds': 'bg-amber-500/20 text-amber-400 border-amber-500/30',\r\n      'SIP': 'bg-indigo-500/20 text-indigo-400 border-indigo-500/30',\r\n      'Pension Planning': 'bg-pink-500/20 text-pink-400 border-pink-500/30',\r\n      'Child Plans': 'bg-cyan-500/20 text-cyan-400 border-cyan-500/30',\r\n      'Wealth Advisory': 'bg-orange-500/20 text-orange-400 border-orange-500/30'\r\n    };\r\n    return colors[requirement] || 'bg-gray-500/20 text-gray-400 border-gray-500/30';\r\n  };\r\n\r\n  // Render appropriate form based on editingType\r\n  const renderForm = () => {\r\n    if (!showForm && !editingType) return null;\r\n\r\n    const formConfig = {\r\n      nfo: {\r\n        title: editingId ? 'Edit NFO' : 'Add New NFO',\r\n        onSubmit: handleNfoSubmit,\r\n        fields: (\r\n          <>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              <div>\r\n                <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n                  NFO Title *\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={nfoForm.title}\r\n                  onChange={(e) => setNfoForm({...nfoForm, title: e.target.value})}\r\n                  className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white placeholder-slate-400 focus:outline-none focus:border-amber-500/50 transition-colors\"\r\n                  placeholder=\"Enter NFO title\"\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n                  Image {!editingId && '*'}\r\n                </label>\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\"image/jpeg, image/jpg, image/png, image/webp\"\r\n                  onChange={(e) => {\r\n                    setNfoForm({...nfoForm, image_file: e.target.files?.[0] || null});\r\n                    setFormErrors([]);\r\n                  }}\r\n                  className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white file:mr-4 file:py-2 file:px-4 file:rounded-lg file:border-0 file:text-sm file:font-medium file:bg-amber-500/20 file:text-amber-400 hover:file:bg-amber-500/30 transition-colors\"\r\n                  required={!editingId}\r\n                />\r\n                <p className=\"text-slate-400 text-xs mt-2\">\r\n                  Required for new NFOs. Max 5MB. Supported: JPEG, PNG, WebP\r\n                  {editingId && (\r\n                    <span className=\"text-amber-400 ml-1\">(Leave empty to keep current image)</span>\r\n                  )}\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n                Description\r\n              </label>\r\n              <textarea\r\n                value={nfoForm.description}\r\n                onChange={(e) => setNfoForm({...nfoForm, description: e.target.value})}\r\n                rows={3}\r\n                className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white placeholder-slate-400 focus:outline-none focus:border-amber-500/50 transition-colors\"\r\n                placeholder=\"Enter NFO description...\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              <div>\r\n                <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n                  Start Date\r\n                </label>\r\n                <input\r\n                  type=\"date\"\r\n                  value={nfoForm.start_date}\r\n                  onChange={(e) => setNfoForm({...nfoForm, start_date: e.target.value})}\r\n                  className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white focus:outline-none focus:border-amber-500/50 transition-colors\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n                  End Date\r\n                </label>\r\n                <input\r\n                  type=\"date\"\r\n                  value={nfoForm.end_date}\r\n                  onChange={(e) => setNfoForm({...nfoForm, end_date: e.target.value})}\r\n                  className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white focus:outline-none focus:border-amber-500/50 transition-colors\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </>\r\n        )\r\n      },\r\n      ncd: {\r\n        title: editingId ? 'Edit NCD' : 'Add New NCD',\r\n        onSubmit: handleBondsNCDSubmit,\r\n        fields: (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            <div>\r\n              <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n                Company Name *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={bondsNCDForm.company_name}\r\n                onChange={(e) => setBondsNCDForm({...bondsNCDForm, company_name: e.target.value})}\r\n                className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white placeholder-slate-400 focus:outline-none focus:border-amber-500/50 transition-colors\"\r\n                placeholder=\"Enter company name\"\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n                Issue Size\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={bondsNCDForm.issue_size}\r\n                onChange={(e) => setBondsNCDForm({...bondsNCDForm, issue_size: e.target.value})}\r\n                className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white placeholder-slate-400 focus:outline-none focus:border-amber-500/50 transition-colors\"\r\n                placeholder=\"e.g., ₹500 Cr\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n                Interest Rate (%)\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                value={bondsNCDForm.interest_rate}\r\n                onChange={(e) => setBondsNCDForm({...bondsNCDForm, interest_rate: e.target.value})}\r\n                className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white placeholder-slate-400 focus:outline-none focus:border-amber-500/50 transition-colors\"\r\n                placeholder=\"e.g., 8.5\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n                Tenure\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={bondsNCDForm.tenure}\r\n                onChange={(e) => setBondsNCDForm({...bondsNCDForm, tenure: e.target.value})}\r\n                className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white placeholder-slate-400 focus:outline-none focus:border-amber-500/50 transition-colors\"\r\n                placeholder=\"e.g., 3 years\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"md:col-span-2\">\r\n              <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n                Image {!editingId && '*'}\r\n              </label>\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/jpeg, image/jpg, image/png, image/webp\"\r\n                onChange={(e) => {\r\n                  setBondsNCDForm({...bondsNCDForm, image_file: e.target.files?.[0] || null});\r\n                  setFormErrors([]);\r\n                }}\r\n                className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white file:mr-4 file:py-2 file:px-4 file:rounded-lg file:border-0 file:text-sm file:font-medium file:bg-amber-500/20 file:text-amber-400 hover:file:bg-amber-500/30 transition-colors\"\r\n                required={!editingId}\r\n              />\r\n              <p className=\"text-slate-400 text-xs mt-2\">\r\n                Required for new NCDs. Max 5MB. Supported: JPEG, PNG, WebP\r\n                {editingId && (\r\n                  <span className=\"text-amber-400 ml-1\">(Leave empty to keep current image)</span>\r\n                )}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        )\r\n      },\r\n      fd: {\r\n        title: editingId ? 'Edit FD' : 'Add New FD',\r\n        onSubmit: handleBondsFDSubmit,\r\n        fields: (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            <div>\r\n              <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n                Bank Name *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={bondsFDForm.bank_name}\r\n                onChange={(e) => setBondsFDForm({...bondsFDForm, bank_name: e.target.value})}\r\n                className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white placeholder-slate-400 focus:outline-none focus:border-amber-500/50 transition-colors\"\r\n                placeholder=\"Enter bank name\"\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n                Interest Rate (%)\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                value={bondsFDForm.interest_rate}\r\n                onChange={(e) => setBondsFDForm({...bondsFDForm, interest_rate: e.target.value})}\r\n                className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white placeholder-slate-400 focus:outline-none focus:border-amber-500/50 transition-colors\"\r\n                placeholder=\"e.g., 7.2\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"md:col-span-2\">\r\n              <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n                Tenure\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={bondsFDForm.tenure}\r\n                onChange={(e) => setBondsFDForm({...bondsFDForm, tenure: e.target.value})}\r\n                className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white placeholder-slate-400 focus:outline-none focus:border-amber-500/50 transition-colors\"\r\n                placeholder=\"e.g., 1-3 years\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"md:col-span-2\">\r\n              <label className=\"block text-slate-300 text-sm font-medium mb-2\">\r\n                Image {!editingId && '*'}\r\n              </label>\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/jpeg, image/jpg, image/png, image/webp\"\r\n                onChange={(e) => {\r\n                  setBondsFDForm({...bondsFDForm, image_file: e.target.files?.[0] || null});\r\n                  setFormErrors([]);\r\n                }}\r\n                className=\"w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white file:mr-4 file:py-2 file:px-4 file:rounded-lg file:border-0 file:text-sm file:font-medium file:bg-amber-500/20 file:text-amber-400 hover:file:bg-amber-500/30 transition-colors\"\r\n                required={!editingId}\r\n              />\r\n              <p className=\"text-slate-400 text-xs mt-2\">\r\n                Required for new FDs. Max 5MB. Supported: JPEG, PNG, WebP\r\n                {editingId && (\r\n                  <span className=\"text-amber-400 ml-1\">(Leave empty to keep current image)</span>\r\n                )}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    };\r\n\r\n    const config = formConfig[editingType!];\r\n\r\n    return (\r\n      <div className=\"bg-white/5 backdrop-blur-lg border border-white/10 rounded-2xl p-6 mb-8\">\r\n        <h2 className=\"text-xl font-bold text-amber-400 mb-6\">\r\n          {config.title}\r\n        </h2>\r\n        \r\n        <form onSubmit={config.onSubmit} className=\"space-y-6\">\r\n          {config.fields}\r\n\r\n          <div className=\"flex gap-3 pt-4\">\r\n            <button\r\n              type=\"submit\"\r\n              disabled={uploading}\r\n              className=\"flex items-center gap-2 px-6 py-3 bg-amber-500/20 border border-amber-500/30 text-amber-400 rounded-xl hover:bg-amber-500/30 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            >\r\n              <FiUpload className=\"w-4 h-4\" />\r\n              {uploading ? 'Saving...' : (editingId ? 'Update' : 'Create')}\r\n            </button>\r\n            \r\n            <button\r\n              type=\"button\"\r\n              onClick={resetForm}\r\n              className=\"px-6 py-3 bg-white/5 border border-white/10 text-slate-300 rounded-xl hover:bg-white/10 transition-colors\"\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 p-4 pt-20\">\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        className=\"max-w-7xl mx-auto\"\r\n      >\r\n        {/* Debug Info Panel */}\r\n        <div className=\"mb-4 p-4 bg-blue-500/10 border border-blue-500/20 rounded-lg\">\r\n          <details>\r\n            <summary className=\"cursor-pointer text-blue-400 font-semibold\">Debug Info (Click to expand)</summary>\r\n            <div className=\"mt-2 text-xs text-blue-300 max-h-32 overflow-y-auto\">\r\n              {debugInfo.map((info, index) => (\r\n                <div key={index} className=\"font-mono\">{info}</div>\r\n              ))}\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        {/* Header */}\r\n        <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between mb-8\">\r\n          <div className=\"mb-4 lg:mb-0\">\r\n            <h1 className=\"text-3xl font-bold text-amber-400 mb-2\">Admin Dashboard</h1>\r\n            <p className=\"text-slate-300 text-lg\">\r\n              Welcome back, <span className=\"text-white font-semibold\">{userEmail}</span>\r\n            </p>\r\n          </div>\r\n          <div className=\"flex gap-3\">\r\n            <button\r\n              onClick={handleRefresh}\r\n              disabled={refreshing}\r\n              className=\"flex items-center gap-2 px-4 py-2 rounded-lg bg-white/5 border border-white/10 text-slate-300 hover:bg-white/10 transition-colors disabled:opacity-50\"\r\n            >\r\n              <FiRefreshCw className={`w-4 h-4 ${refreshing ? 'animate-spin' : ''}`} />\r\n              Refresh\r\n            </button>\r\n            <button\r\n              onClick={handleSignOut}\r\n              className=\"flex items-center gap-2 px-4 py-2 rounded-lg bg-rose-500/20 border border-rose-500/30 text-rose-400 hover:bg-rose-500/30 transition-colors\"\r\n            >\r\n              <FiLogOut className=\"w-4 h-4\" />\r\n              Sign Out\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Tab Navigation */}\r\n        <div className=\"flex space-x-1 mb-8 bg-white/5 backdrop-blur-lg border border-white/10 rounded-2xl p-1 max-w-2xl overflow-x-auto\">\r\n          <button\r\n            onClick={() => setActiveTab('leads')}\r\n            className={`flex items-center gap-2 px-4 py-2 rounded-xl transition-colors flex-shrink-0 text-center ${\r\n              activeTab === 'leads'\r\n                ? 'bg-amber-500/20 text-amber-400 border border-amber-500/30'\r\n                : 'text-slate-400 hover:text-white'\r\n            }`}\r\n          >\r\n            <FiUser className=\"w-4 h-4\" />\r\n            Leads ({totalLeads})\r\n          </button>\r\n          <button\r\n            onClick={() => setActiveTab('nfo')}\r\n            className={`flex items-center gap-2 px-4 py-2 rounded-xl transition-colors flex-shrink-0 text-center ${\r\n              activeTab === 'nfo'\r\n                ? 'bg-amber-500/20 text-amber-400 border border-amber-500/30'\r\n                : 'text-slate-400 hover:text-white'\r\n            }`}\r\n          >\r\n            <FiImage className=\"w-4 h-4\" />\r\n            NFOs ({nfoData.length})\r\n          </button>\r\n          <button\r\n            onClick={() => setActiveTab('bondsNCD')}\r\n            className={`flex items-center gap-2 px-4 py-2 rounded-xl transition-colors flex-shrink-0 text-center ${\r\n              activeTab === 'bondsNCD'\r\n                ? 'bg-amber-500/20 text-amber-400 border border-amber-500/30'\r\n                : 'text-slate-400 hover:text-white'\r\n            }`}\r\n          >\r\n            <FiTrendingUp className=\"w-4 h-4\" />\r\n            Bonds NCD ({bondsNCD.length})\r\n          </button>\r\n          <button\r\n            onClick={() => setActiveTab('bondsFD')}\r\n            className={`flex items-center gap-2 px-4 py-2 rounded-xl transition-colors flex-shrink-0 text-center ${\r\n              activeTab === 'bondsFD'\r\n                ? 'bg-amber-500/20 text-amber-400 border border-amber-500/30'\r\n                : 'text-slate-400 hover:text-white'\r\n            }`}\r\n          >\r\n            <FiShield className=\"w-4 h-4\" />\r\n            Bonds FD ({bondsFD.length})\r\n          </button>\r\n        </div>\r\n\r\n        {/* Form Errors */}\r\n        {formErrors.length > 0 && (\r\n          <div className=\"bg-rose-500/20 border border-rose-500/30 rounded-2xl p-4 mb-6\">\r\n            <h3 className=\"text-rose-400 font-semibold mb-2\">Error:</h3>\r\n            <ul className=\"text-rose-300 text-sm list-disc list-inside\">\r\n              {formErrors.map((error, index) => (\r\n                <li key={index}>{error}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n\r\n        {/* Render Active Form */}\r\n        {renderForm()}\r\n\r\n        {/* Leads Tab Content */}\r\n        {activeTab === 'leads' && (\r\n          <>\r\n            {/* Stats Cards */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\r\n              <div className=\"bg-white/5 backdrop-blur-lg border border-white/10 rounded-2xl p-6\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <p className=\"text-slate-400 text-sm font-medium\">Total Leads</p>\r\n                    <p className=\"text-3xl font-bold text-white mt-2\">{totalLeads}</p>\r\n                  </div>\r\n                  <div className=\"p-3 bg-amber-500/20 rounded-xl\">\r\n                    <FiUser className=\"w-6 h-6 text-amber-400\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"bg-white/5 backdrop-blur-lg border border-white/10 rounded-2xl p-6\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <p className=\"text-slate-400 text-sm font-medium\">Contacted</p>\r\n                    <p className=\"text-3xl font-bold text-green-400 mt-2\">{contactedLeads}</p>\r\n                  </div>\r\n                  <div className=\"p-3 bg-green-500/20 rounded-xl\">\r\n                    <FiCheckCircle className=\"w-6 h-6 text-green-400\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"bg-white/5 backdrop-blur-lg border border-white/10 rounded-2xl p-6\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <p className=\"text-slate-400 text-sm font-medium\">New Leads</p>\r\n                    <p className=\"text-3xl font-bold text-amber-400 mt-2\">{newLeads}</p>\r\n                  </div>\r\n                  <div className=\"p-3 bg-blue-500/20 rounded-xl\">\r\n                    <FiClock className=\"w-6 h-6 text-blue-400\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"bg-white/5 backdrop-blur-lg border border-white/10 rounded-2xl p-6\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <p className=\"text-slate-400 text-sm font-medium\">Contact Rate</p>\r\n                    <p className=\"text-3xl font-bold text-purple-400 mt-2\">{contactRate.toFixed(1)}%</p>\r\n                  </div>\r\n                  <div className=\"p-3 bg-purple-500/20 rounded-xl\">\r\n                    <FiFileText className=\"w-6 h-6 text-purple-400\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Leads Table */}\r\n            <div className=\"bg-white/5 backdrop-blur-lg border border-white/10 rounded-2xl p-4 md:p-6 overflow-hidden\">\r\n              <div className=\"flex items-center justify-between mb-6\">\r\n                <h2 className=\"text-xl font-bold text-amber-400\">Recent Leads</h2>\r\n                <div className=\"text-slate-400 text-sm\">\r\n                  Showing {leads.length} lead{leads.length !== 1 ? 's' : ''}\r\n                </div>\r\n              </div>\r\n\r\n              {loading ? (\r\n                <div className=\"text-center py-12\">\r\n                  <div className=\"flex items-center justify-center space-x-3\">\r\n                    <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-amber-400\"></div>\r\n                    <span className=\"text-slate-300 text-lg\">Loading leads...</span>\r\n                  </div>\r\n                </div>\r\n              ) : leads.length === 0 ? (\r\n                <div className=\"text-center py-12\">\r\n                  <FiFileText className=\"w-16 h-16 text-slate-600 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold text-slate-300 mb-2\">No leads found</h3>\r\n                  <p className=\"text-slate-400\">Leads will appear here once customers submit the contact form.</p>\r\n                </div>\r\n              ) : (\r\n                <div className=\"overflow-x-auto\">\r\n                  <table className=\"w-full\">\r\n                    <thead>\r\n                      <tr className=\"border-b border-white/10\">\r\n                        <th className=\"text-left p-3 md:p-4 text-slate-300 font-semibold\">Customer</th>\r\n                        <th className=\"text-left p-3 md:p-4 text-slate-300 font-semibold hidden md:table-cell\">Contact</th>\r\n                        <th className=\"text-left p-3 md:p-4 text-slate-300 font-semibold\">Requirement</th>\r\n                        <th className=\"text-left p-3 md:p-4 text-slate-300 font-semibold\">Status</th>\r\n                        <th className=\"text-left p-3 md:p-4 text-slate-300 font-semibold hidden lg:table-cell\">Date</th>\r\n                        <th className=\"text-left p-3 md:p-4 text-slate-300 font-semibold\">Actions</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {leads.map((lead, index) => (\r\n                        <motion.tr \r\n                          key={lead.id}\r\n                          initial={{ opacity: 0, y: 10 }}\r\n                          animate={{ opacity: 1, y: 0 }}\r\n                          transition={{ delay: index * 0.05 }}\r\n                          className=\"border-b border-white/5 hover:bg-white/2 transition-colors\"\r\n                        >\r\n                          {/* Customer Name - Mobile Optimized */}\r\n                          <td className=\"p-3 md:p-4\">\r\n                            <div className=\"flex items-center space-x-3\">\r\n                              <div className=\"w-8 h-8 md:w-10 md:h-10 bg-amber-500/20 rounded-full flex items-center justify-center flex-shrink-0\">\r\n                                <FiUser className=\"w-4 h-4 md:w-5 md:h-5 text-amber-400\" />\r\n                              </div>\r\n                              <div className=\"min-w-0 flex-1\">\r\n                                <div className=\"text-white font-semibold text-sm md:text-base truncate\">\r\n                                  {lead.name}\r\n                                </div>\r\n                                <div className=\"text-slate-400 text-xs md:hidden\">\r\n                                  {lead.phone}\r\n                                </div>\r\n                                {lead.email && (\r\n                                  <div className=\"text-slate-400 text-xs md:hidden truncate\">\r\n                                    {lead.email}\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                          </td>\r\n\r\n                          {/* Contact Info - Hidden on mobile */}\r\n                          <td className=\"p-3 md:p-4 hidden md:table-cell\">\r\n                            <div className=\"space-y-1\">\r\n                              <div className=\"flex items-center space-x-2 text-slate-300\">\r\n                                <FiPhone className=\"w-4 h-4\" />\r\n                                <span className=\"font-mono text-sm\">{lead.phone}</span>\r\n                              </div>\r\n                              {lead.email && (\r\n                                <div className=\"flex items-center space-x-2 text-slate-400\">\r\n                                  <FiMail className=\"w-4 h-4\" />\r\n                                  <span className=\"text-sm truncate max-w-[150px]\">{lead.email}</span>\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          </td>\r\n\r\n                          {/* Requirement */}\r\n                          <td className=\"p-3 md:p-4\">\r\n                            {lead.requirement ? (\r\n                              <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium border ${getRequirementColor(lead.requirement)}`}>\r\n                                <span className=\"truncate max-w-[80px] md:max-w-none\">\r\n                                  {lead.requirement}\r\n                                </span>\r\n                              </span>\r\n                            ) : (\r\n                              <span className=\"text-slate-400 text-xs\">Not specified</span>\r\n                            )}\r\n                          </td>\r\n\r\n                          {/* Status */}\r\n                          <td className=\"p-3 md:p-4\">\r\n                            <button\r\n                              onClick={() => toggleContactStatus(lead.id, lead.is_contacted || false)}\r\n                              className={`inline-flex items-center px-2 py-1 md:px-3 md:py-1 rounded-full text-xs md:text-sm font-medium border transition-colors ${\r\n                                lead.is_contacted\r\n                                  ? 'bg-green-500/20 text-green-400 border-green-500/30 hover:bg-green-500/30'\r\n                                  : 'bg-amber-500/20 text-amber-400 border-amber-500/30 hover:bg-amber-500/30'\r\n                              }`}\r\n                            >\r\n                              {lead.is_contacted ? (\r\n                                <>\r\n                                  <FiCheckCircle className=\"w-3 h-3 mr-1\" />\r\n                                  <span className=\"hidden sm:inline\">Contacted</span>\r\n                                  <span className=\"sm:hidden\">Done</span>\r\n                                </>\r\n                              ) : (\r\n                                <>\r\n                                  <FiClock className=\"w-3 h-3 mr-1\" />\r\n                                  <span className=\"hidden sm:inline\">New Lead</span>\r\n                                  <span className=\"sm:hidden\">New</span>\r\n                                </>\r\n                              )}\r\n                            </button>\r\n                          </td>\r\n\r\n                          {/* Date - Hidden on mobile */}\r\n                          <td className=\"p-3 md:p-4 hidden lg:table-cell\">\r\n                            <div className=\"text-slate-300 text-sm\">\r\n                              {lead.created_at ? formatDate(lead.created_at) : 'Unknown'}\r\n                            </div>\r\n                          </td>\r\n\r\n                          {/* Actions - Always visible on mobile */}\r\n                          <td className=\"p-3 md:p-4\">\r\n                            <div className=\"flex space-x-1 md:space-x-2\">\r\n                              <button\r\n                                onClick={() => toggleContactStatus(lead.id, lead.is_contacted || false)}\r\n                                className={`p-2 rounded-lg border transition-colors ${\r\n                                  lead.is_contacted\r\n                                    ? 'bg-amber-500/20 text-amber-400 border-amber-500/30 hover:bg-amber-500/30'\r\n                                    : 'bg-green-500/20 text-green-400 border-green-500/30 hover:bg-green-500/30'\r\n                                }`}\r\n                                title={lead.is_contacted ? \"Mark as New\" : \"Mark as Contacted\"}\r\n                              >\r\n                                {lead.is_contacted ? \r\n                                  <FiXCircle className=\"w-3 h-3 md:w-4 md:h-4\" /> : \r\n                                  <FiCheckCircle className=\"w-3 h-3 md:w-4 md:h-4\" />\r\n                                }\r\n                              </button>\r\n                              \r\n                              {/* Mobile date shortcut */}\r\n                              <div className=\"md:hidden text-slate-400 text-xs flex items-center px-2\">\r\n                                {lead.created_at ? \r\n                                  new Date(lead.created_at).toLocaleDateString('en-US', { month: 'short', day: 'numeric' })\r\n                                  : 'N/A'\r\n                                }\r\n                              </div>\r\n                            </div>\r\n                          </td>\r\n                        </motion.tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {/* NFO Management Tab Content */}\r\n        {activeTab === 'nfo' && (\r\n          <div className=\"space-y-8\">\r\n            {/* NFO List Header with Create Button */}\r\n            <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\r\n              <h2 className=\"text-2xl font-bold text-amber-400\">\r\n                Active NFOs ({nfoData.length})\r\n              </h2>\r\n              <button\r\n                onClick={() => handleNewClick('nfo')}\r\n                className=\"flex items-center gap-2 px-4 py-2 bg-amber-500/20 border border-amber-500/30 text-amber-400 rounded-xl hover:bg-amber-500/30 transition-colors\"\r\n              >\r\n                <FiPlus className=\"w-4 h-4\" />\r\n                Create New NFO\r\n              </button>\r\n            </div>\r\n\r\n            {/* NFO List */}\r\n            <div className=\"bg-white/5 backdrop-blur-lg border border-white/10 rounded-2xl p-6\">\r\n              {nfoData.length === 0 ? (\r\n                <div className=\"text-center py-12\">\r\n                  <FiImage className=\"w-16 h-16 text-slate-600 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold text-slate-300 mb-2\">No NFOs found</h3>\r\n                  <p className=\"text-slate-400 mb-6\">Create your first NFO to get started.</p>\r\n                  <button\r\n                    onClick={() => handleNewClick('nfo')}\r\n                    className=\"flex items-center gap-2 px-6 py-3 bg-amber-500/20 border border-amber-500/30 text-amber-400 rounded-xl hover:bg-amber-500/30 transition-colors mx-auto\"\r\n                  >\r\n                    <FiPlus className=\"w-4 h-4\" />\r\n                    Create Your First NFO\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                  {nfoData.map((nfo) => (\r\n                    <motion.div\r\n                      key={nfo.id}\r\n                      initial={{ opacity: 0, y: 10 }}\r\n                      animate={{ opacity: 1, y: 0 }}\r\n                      className=\"bg-white/5 border border-white/10 rounded-2xl overflow-hidden hover:bg-white/10 transition-colors\"\r\n                    >\r\n                      {nfo.image_url && (\r\n                        <div className=\"h-40 bg-slate-800 overflow-hidden\">\r\n                          <img\r\n                            src={getImageUrl(nfo.image_url, 'nfo-images') || ''}\r\n                            alt={nfo.title}\r\n                            className=\"w-full h-full object-cover\"\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"p-4\">\r\n                        <h3 className=\"font-bold text-white text-lg mb-2 line-clamp-2\">\r\n                          {nfo.title}\r\n                        </h3>\r\n                        {nfo.description && (\r\n                          <p className=\"text-slate-300 text-sm mb-3 line-clamp-2\">\r\n                            {nfo.description}\r\n                          </p>\r\n                        )}\r\n                        <div className=\"space-y-1 text-xs text-slate-400 mb-4\">\r\n                          <div>Start: {nfo.start_date ? new Date(nfo.start_date).toLocaleDateString() : 'TBA'}</div>\r\n                          <div>End: {nfo.end_date ? new Date(nfo.end_date).toLocaleDateString() : 'TBA'}</div>\r\n                        </div>\r\n                        <div className=\"flex gap-2\">\r\n                          <button\r\n                            onClick={() => handleEdit(nfo, 'nfo')}\r\n                            className=\"flex items-center gap-1 px-3 py-1 bg-blue-500/20 border border-blue-500/30 text-blue-400 rounded-lg text-xs hover:bg-blue-500/30 transition-colors\"\r\n                          >\r\n                            <FiEdit className=\"w-3 h-3\" />\r\n                            Edit\r\n                          </button>\r\n                          <button\r\n                            onClick={() => handleDelete(nfo.id, 'nfo')}\r\n                            className=\"flex items-center gap-1 px-3 py-1 bg-rose-500/20 border border-rose-500/30 text-rose-400 rounded-lg text-xs hover:bg-rose-500/30 transition-colors\"\r\n                          >\r\n                            <FiTrash2 className=\"w-3 h-3\" />\r\n                            Delete\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </motion.div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Bonds NCD Tab Content */}\r\n        {activeTab === 'bondsNCD' && (\r\n          <div className=\"space-y-8\">\r\n            {/* Bonds NCD List Header with Create Button */}\r\n            <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\r\n              <h2 className=\"text-2xl font-bold text-amber-400\">\r\n                Bonds NCD ({bondsNCD.length})\r\n              </h2>\r\n              <button\r\n                onClick={() => handleNewClick('ncd')}\r\n                className=\"flex items-center gap-2 px-4 py-2 bg-amber-500/20 border border-amber-500/30 text-amber-400 rounded-xl hover:bg-amber-500/30 transition-colors\"\r\n              >\r\n                <FiPlus className=\"w-4 h-4\" />\r\n                Add New NCD\r\n              </button>\r\n            </div>\r\n\r\n            {/* Bonds NCD List */}\r\n            <div className=\"bg-white/5 backdrop-blur-lg border border-white/10 rounded-2xl p-6\">\r\n              {bondsNCD.length === 0 ? (\r\n                <div className=\"text-center py-12\">\r\n                  <FiTrendingUp className=\"w-16 h-16 text-slate-600 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold text-slate-300 mb-2\">No NCDs found</h3>\r\n                  <p className=\"text-slate-400 mb-6\">Add your first NCD to get started.</p>\r\n                  <button\r\n                    onClick={() => handleNewClick('ncd')}\r\n                    className=\"flex items-center gap-2 px-6 py-3 bg-amber-500/20 border border-amber-500/30 text-amber-400 rounded-xl hover:bg-amber-500/30 transition-colors mx-auto\"\r\n                  >\r\n                    <FiPlus className=\"w-4 h-4\" />\r\n                    Add Your First NCD\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                  {bondsNCD.map((ncd) => (\r\n                    <motion.div\r\n                      key={ncd.id}\r\n                      initial={{ opacity: 0, y: 10 }}\r\n                      animate={{ opacity: 1, y: 0 }}\r\n                      className=\"bg-white/5 border border-white/10 rounded-2xl overflow-hidden hover:bg-white/10 transition-colors\"\r\n                    >\r\n                      {ncd.image_url && (\r\n                        <div className=\"h-40 bg-slate-800 overflow-hidden\">\r\n                          <img\r\n                            src={getImageUrl(ncd.image_url, 'bonds-images') || ''}\r\n                            alt={ncd.company_name}\r\n                            className=\"w-full h-full object-cover\"\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"p-4\">\r\n                        <h3 className=\"font-bold text-white text-lg mb-2 line-clamp-2\">\r\n                          {ncd.company_name}\r\n                        </h3>\r\n                        <div className=\"space-y-2 text-sm text-slate-300 mb-4\">\r\n                          {ncd.issue_size && (\r\n                            <div className=\"flex justify-between\">\r\n                              <span>Issue Size:</span>\r\n                              <span className=\"text-amber-400\">{ncd.issue_size}</span>\r\n                            </div>\r\n                          )}\r\n                          {ncd.interest_rate && (\r\n                            <div className=\"flex justify-between\">\r\n                              <span>Interest Rate:</span>\r\n                              <span className=\"text-green-400\">{ncd.interest_rate}%</span>\r\n                            </div>\r\n                          )}\r\n                          {ncd.tenure && (\r\n                            <div className=\"flex justify-between\">\r\n                              <span>Tenure:</span>\r\n                              <span className=\"text-blue-400\">{ncd.tenure}</span>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"flex gap-2\">\r\n                          <button\r\n                            onClick={() => handleEdit(ncd, 'ncd')}\r\n                            className=\"flex items-center gap-1 px-3 py-1 bg-blue-500/20 border border-blue-500/30 text-blue-400 rounded-lg text-xs hover:bg-blue-500/30 transition-colors\"\r\n                          >\r\n                            <FiEdit className=\"w-3 h-3\" />\r\n                            Edit\r\n                          </button>\r\n                          <button\r\n                            onClick={() => handleDelete(ncd.id, 'ncd')}\r\n                            className=\"flex items-center gap-1 px-3 py-1 bg-rose-500/20 border border-rose-500/30 text-rose-400 rounded-lg text-xs hover:bg-rose-500/30 transition-colors\"\r\n                          >\r\n                            <FiTrash2 className=\"w-3 h-3\" />\r\n                            Delete\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </motion.div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Bonds FD Tab Content */}\r\n        {activeTab === 'bondsFD' && (\r\n          <div className=\"space-y-8\">\r\n            {/* Bonds FD List Header with Create Button */}\r\n            <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\r\n              <h2 className=\"text-2xl font-bold text-amber-400\">\r\n                Bonds FD ({bondsFD.length})\r\n              </h2>\r\n              <button\r\n                onClick={() => handleNewClick('fd')}\r\n                className=\"flex items-center gap-2 px-4 py-2 bg-amber-500/20 border border-amber-500/30 text-amber-400 rounded-xl hover:bg-amber-500/30 transition-colors\"\r\n              >\r\n                <FiPlus className=\"w-4 h-4\" />\r\n                Add New FD\r\n              </button>\r\n            </div>\r\n\r\n            {/* Bonds FD List */}\r\n            <div className=\"bg-white/5 backdrop-blur-lg border border-white/10 rounded-2xl p-6\">\r\n              {bondsFD.length === 0 ? (\r\n                <div className=\"text-center py-12\">\r\n                  <FiShield className=\"w-16 h-16 text-slate-600 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold text-slate-300 mb-2\">No FDs found</h3>\r\n                  <p className=\"text-slate-400 mb-6\">Add your first FD to get started.</p>\r\n                  <button\r\n                    onClick={() => handleNewClick('fd')}\r\n                    className=\"flex items-center gap-2 px-6 py-3 bg-amber-500/20 border border-amber-500/30 text-amber-400 rounded-xl hover:bg-amber-500/30 transition-colors mx-auto\"\r\n                  >\r\n                    <FiPlus className=\"w-4 h-4\" />\r\n                    Add Your First FD\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                  {bondsFD.map((fd) => (\r\n                    <motion.div\r\n                      key={fd.id}\r\n                      initial={{ opacity: 0, y: 10 }}\r\n                      animate={{ opacity: 1, y: 0 }}\r\n                      className=\"bg-white/5 border border-white/10 rounded-2xl overflow-hidden hover:bg-white/10 transition-colors\"\r\n                    >\r\n                      {fd.image_url && (\r\n                        <div className=\"h-40 bg-slate-800 overflow-hidden\">\r\n                          <img\r\n                            src={getImageUrl(fd.image_url, 'bonds-images') || ''}\r\n                            alt={fd.bank_name}\r\n                            className=\"w-full h-full object-cover\"\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"p-4\">\r\n                        <h3 className=\"font-bold text-white text-lg mb-2 line-clamp-2\">\r\n                          {fd.bank_name}\r\n                        </h3>\r\n                        <div className=\"space-y-2 text-sm text-slate-300 mb-4\">\r\n                          {fd.interest_rate && (\r\n                            <div className=\"flex justify-between\">\r\n                              <span>Interest Rate:</span>\r\n                              <span className=\"text-green-400\">{fd.interest_rate}%</span>\r\n                            </div>\r\n                          )}\r\n                          {fd.tenure && (\r\n                            <div className=\"flex justify-between\">\r\n                              <span>Tenure:</span>\r\n                              <span className=\"text-blue-400\">{fd.tenure}</span>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"flex gap-2\">\r\n                          <button\r\n                            onClick={() => handleEdit(fd, 'fd')}\r\n                            className=\"flex items-center gap-1 px-3 py-1 bg-blue-500/20 border border-blue-500/30 text-blue-400 rounded-lg text-xs hover:bg-blue-500/30 transition-colors\"\r\n                          >\r\n                            <FiEdit className=\"w-3 h-3\" />\r\n                            Edit\r\n                          </button>\r\n                          <button\r\n                            onClick={() => handleDelete(fd.id, 'fd')}\r\n                            className=\"flex items-center gap-1 px-3 py-1 bg-rose-500/20 border border-rose-500/30 text-rose-400 rounded-lg text-xs hover:bg-rose-500/30 transition-colors\"\r\n                          >\r\n                            <FiTrash2 className=\"w-3 h-3\" />\r\n                            Delete\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </motion.div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Footer Stats */}\r\n        {(leads.length > 0 || nfoData.length > 0 || bondsNCD.length > 0 || bondsFD.length > 0) && (\r\n          <div className=\"mt-6 text-center\">\r\n            <p className=\"text-slate-400 text-sm\">\r\n              Last updated: {new Date().toLocaleString()}\r\n            </p>\r\n          </div>\r\n        )}\r\n      </motion.div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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"}