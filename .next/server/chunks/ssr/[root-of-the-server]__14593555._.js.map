{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Tarak/Desktop/mokshainvestment/mokshainvestment/app/admin/login/page.tsx"],"sourcesContent":["// form looks good only a bit issue in alignment\r\n// \"use client\";\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { createClient } from \"@supabase/supabase-js\";\r\n// import { motion } from \"framer-motion\";\r\n// import { FiMail, FiLock, FiAlertCircle, FiShield, FiUserCheck } from \"react-icons/fi\";\r\n// import Navbar from \"@/components/Navbar\";\r\n// import Footer from \"@/components/Footer\";\r\n\r\n// export default function AdminLoginPage() {\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [error, setError] = useState<string | null>(null);\r\n//   const [securityCheck, setSecurityCheck] = useState(true);\r\n  \r\n//   const supabase = createClient(\r\n//     process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n//     process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\r\n//   );\r\n\r\n//   // Security validation functions\r\n//   const isValidEmail = (email: string): boolean => {\r\n//     const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n//     return emailRegex.test(email) && email.length <= 254;\r\n//   };\r\n\r\n//   const containsSQLInjection = (input: string): boolean => {\r\n//     const sqlPatterns = [\r\n//       /(\\b(SELECT|INSERT|UPDATE|DELETE|DROP|UNION|ALTER|CREATE|EXEC)\\b)/i,\r\n//       /('|\"|;|--|\\/\\*|\\*\\/|\\\\\\*|\\\\-)/,\r\n//       /(\\b(OR|AND)\\b.*=)/i,\r\n//       /(\\b(WAITFOR|DELAY)\\b)/i\r\n//     ];\r\n//     return sqlPatterns.some(pattern => pattern.test(input));\r\n//   };\r\n\r\n//   const containsXSS = (input: string): boolean => {\r\n//     const xssPatterns = [\r\n//       /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n//       /javascript:/gi,\r\n//       /on\\w+\\s*=/gi,\r\n//       /<iframe/gi,\r\n//       /<object/gi,\r\n//       /<embed/gi\r\n//     ];\r\n//     return xssPatterns.some(pattern => pattern.test(input));\r\n//   };\r\n\r\n//   const sanitizeInput = (input: string): string => {\r\n//     return input\r\n//       .replace(/[<>\"'`;()&|$\\\\]/g, '')\r\n//       .substring(0, 255)\r\n//       .trim();\r\n//   };\r\n\r\n//   // Check if user is already logged in\r\n//   useEffect(() => {\r\n//     const checkExistingSession = async () => {\r\n//       const { data: { session } } = await supabase.auth.getSession();\r\n//       if (session) {\r\n//         window.location.href = \"/admin/dashboard\";\r\n//       }\r\n//     };\r\n//     checkExistingSession();\r\n//   }, [supabase.auth]);\r\n\r\n//   async function onSubmit(e: React.FormEvent) {\r\n//     e.preventDefault();\r\n//     setLoading(true);\r\n//     setError(null);\r\n//     setSecurityCheck(true);\r\n\r\n//     try {\r\n//       // Input validation and sanitization\r\n//       const sanitizedEmail = sanitizeInput(email);\r\n//       const sanitizedPassword = sanitizeInput(password);\r\n\r\n//       // Security checks\r\n//       if (!isValidEmail(sanitizedEmail)) {\r\n//         setError(\"Please enter a valid email address\");\r\n//         setSecurityCheck(false);\r\n//         return;\r\n//       }\r\n\r\n//       if (containsSQLInjection(sanitizedEmail) || containsSQLInjection(sanitizedPassword)) {\r\n//         setError(\"Invalid input detected\");\r\n//         setSecurityCheck(false);\r\n//         return;\r\n//       }\r\n\r\n//       if (containsXSS(sanitizedEmail) || containsXSS(sanitizedPassword)) {\r\n//         setError(\"Invalid input detected\");\r\n//         setSecurityCheck(false);\r\n//         return;\r\n//       }\r\n\r\n//       if (sanitizedPassword.length < 6) {\r\n//         setError(\"Password must be at least 6 characters long\");\r\n//         return;\r\n//       }\r\n\r\n//       if (sanitizedPassword.length > 128) {\r\n//         setError(\"Password is too long\");\r\n//         return;\r\n//       }\r\n\r\n//       console.log(\"🛡️ Attempting secure login...\");\r\n\r\n//       const { data, error } = await supabase.auth.signInWithPassword({\r\n//         email: sanitizedEmail,\r\n//         password: sanitizedPassword,\r\n//       });\r\n\r\n//       if (error) {\r\n//         console.error(\"Authentication error:\", error);\r\n//         // Don't reveal specific error details to prevent information leakage\r\n//         setError(\"Invalid credentials or account not found\");\r\n//         setSecurityCheck(false);\r\n//         return;\r\n//       }\r\n\r\n//       if (data?.session) {\r\n//         console.log(\"✅ Login successful, redirecting...\");\r\n        \r\n//         // Add a small delay to ensure session is properly set\r\n//         setTimeout(() => {\r\n//           window.location.href = \"/admin\";\r\n//         }, 100);\r\n//         return;\r\n//       }\r\n      \r\n//       setError(\"Authentication failed\");\r\n//       setSecurityCheck(false);\r\n      \r\n//     } catch (err: any) {\r\n//       console.error(\"Unexpected error:\", err);\r\n//       setError(\"An unexpected error occurred. Please try again.\");\r\n//       setSecurityCheck(false);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   }\r\n\r\n//   // Rate limiting simulation (basic client-side protection)\r\n//   const [attempts, setAttempts] = useState(0);\r\n//   const [lastAttempt, setLastAttempt] = useState<number>(0);\r\n\r\n//   const checkRateLimit = (): boolean => {\r\n//     const now = Date.now();\r\n//     if (now - lastAttempt < 30000 && attempts >= 3) { // 30 seconds, 3 attempts\r\n//       setError(\"Too many attempts. Please wait 30 seconds before trying again.\");\r\n//       return false;\r\n//     }\r\n    \r\n//     if (now - lastAttempt > 30000) {\r\n//       setAttempts(0); // Reset attempts after 30 seconds\r\n//     }\r\n    \r\n//     setAttempts(prev => prev + 1);\r\n//     setLastAttempt(now);\r\n//     return true;\r\n//   };\r\n\r\n//   const handleFormSubmit = (e: React.FormEvent) => {\r\n//     if (!checkRateLimit()) {\r\n//       e.preventDefault();\r\n//       return;\r\n//     }\r\n//     onSubmit(e);\r\n//   };\r\n\r\n//   return (\r\n//     <main className=\"flex flex-col min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900\">\r\n//       <Navbar />\r\n      \r\n//       <div className=\"flex-1 flex items-center justify-center py-12 px-4\">\r\n//         <motion.div\r\n//           initial={{ opacity: 0, y: 20 }}\r\n//           animate={{ opacity: 1, y: 0 }}\r\n//           transition={{ duration: 0.5 }}\r\n//           className=\"w-full max-w-md\"\r\n//         >\r\n//           {/* Security Status Card */}\r\n//           <motion.div\r\n//             initial={{ opacity: 0, scale: 0.95 }}\r\n//             animate={{ opacity: 1, scale: 1 }}\r\n//             transition={{ delay: 0.1 }}\r\n//             className=\"mb-6 bg-white/5 backdrop-blur-lg border border-white/10 rounded-2xl p-4\"\r\n//           >\r\n//             <div className=\"flex items-center space-x-3\">\r\n//               <div className={`p-2 rounded-lg ${securityCheck ? 'bg-green-500/20' : 'bg-amber-500/20'}`}>\r\n//                 {securityCheck ? (\r\n//                   <FiShield className=\"w-5 h-5 text-green-400\" />\r\n//                 ) : (\r\n//                   <FiAlertCircle className=\"w-5 h-5 text-amber-400\" />\r\n//                 )}\r\n//               </div>\r\n//               <div>\r\n//                 <p className=\"text-white font-medium text-sm\">\r\n//                   {securityCheck ? 'Security Check Passed' : 'Security Alert'}\r\n//                 </p>\r\n//                 <p className=\"text-slate-400 text-xs\">\r\n//                   {securityCheck ? 'All systems secure' : 'Please check your inputs'}\r\n//                 </p>\r\n//               </div>\r\n//             </div>\r\n//           </motion.div>\r\n\r\n//           {/* Login Form */}\r\n//           <div className=\"bg-white/6 backdrop-blur-lg border border-white/10 rounded-2xl p-8 shadow-2xl\">\r\n//             {/* Header */}\r\n//             <div className=\"text-center mb-8\">\r\n//               <div className=\"w-16 h-16 bg-amber-500/20 rounded-2xl flex items-center justify-center mx-auto mb-4\">\r\n//                 <FiUserCheck className=\"w-8 h-8 text-amber-400\" />\r\n//               </div>\r\n//               <h1 className=\"text-2xl font-bold text-amber-400 mb-2\">\r\n//                 Admin Portal\r\n//               </h1>\r\n//               <p className=\"text-slate-300 text-sm\">\r\n//                 Restricted access - Authorized personnel only\r\n//               </p>\r\n//             </div>\r\n\r\n//             <form onSubmit={handleFormSubmit} className=\"space-y-6\">\r\n//               {/* Email Field */}\r\n//               <div>\r\n//                 <label className=\"text-slate-300 text-sm font-medium mb-2 block\">\r\n//                   Email Address\r\n//                 </label>\r\n//                 <div className=\"relative\">\r\n//                   <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n//                     <FiMail className=\"h-5 w-5 text-slate-400\" />\r\n//                   </div>\r\n//                   <input\r\n//                     type=\"email\"\r\n//                     value={email}\r\n//                     onChange={(e) => {\r\n//                       const value = e.target.value;\r\n//                       if (value.length <= 254 && !containsSQLInjection(value) && !containsXSS(value)) {\r\n//                         setEmail(value);\r\n//                       }\r\n//                     }}\r\n//                     required\r\n//                     className=\"block w-full pl-10 pr-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white placeholder-slate-400 focus:outline-none focus:ring-2 focus:ring-amber-400 focus:border-transparent transition-all\"\r\n//                     placeholder=\"admin@yourcompany.com\"\r\n//                     disabled={loading}\r\n//                   />\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Password Field */}\r\n//               <div>\r\n//                 <label className=\"text-slate-300 text-sm font-medium mb-2 block\">\r\n//                   Password\r\n//                 </label>\r\n//                 <div className=\"relative\">\r\n//                   <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n//                     <FiLock className=\"h-5 w-5 text-slate-400\" />\r\n//                   </div>\r\n//                   <input\r\n//                     type=\"password\"\r\n//                     value={password}\r\n//                     onChange={(e) => {\r\n//                       const value = e.target.value;\r\n//                       if (value.length <= 128 && !containsSQLInjection(value) && !containsXSS(value)) {\r\n//                         setPassword(value);\r\n//                       }\r\n//                     }}\r\n//                     required\r\n//                     className=\"block w-full pl-10 pr-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white placeholder-slate-400 focus:outline-none focus:ring-2 focus:ring-amber-400 focus:border-transparent transition-all\"\r\n//                     placeholder=\"Enter your password\"\r\n//                     disabled={loading}\r\n//                   />\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Error Message */}\r\n//               {error && (\r\n//                 <motion.div\r\n//                   initial={{ opacity: 0, height: 0 }}\r\n//                   animate={{ opacity: 1, height: 'auto' }}\r\n//                   className=\"p-4 bg-rose-500/10 border border-rose-500/20 rounded-xl\"\r\n//                 >\r\n//                   <div className=\"flex items-center space-x-2\">\r\n//                     <FiAlertCircle className=\"w-4 h-4 text-rose-400 flex-shrink-0\" />\r\n//                     <p className=\"text-rose-400 text-sm\">{error}</p>\r\n//                   </div>\r\n//                 </motion.div>\r\n//               )}\r\n\r\n//               {/* Submit Button */}\r\n//               <motion.button\r\n//                 type=\"submit\"\r\n//                 disabled={loading}\r\n//                 whileHover={{ scale: loading ? 1 : 1.02 }}\r\n//                 whileTap={{ scale: loading ? 1 : 0.98 }}\r\n//                 className=\"w-full px-6 py-4 bg-gradient-to-r from-amber-500 to-amber-600 text-slate-900 font-bold rounded-xl hover:from-amber-400 hover:to-amber-500 transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed shadow-lg\"\r\n//               >\r\n//                 {loading ? (\r\n//                   <div className=\"flex items-center justify-center space-x-2\">\r\n//                     <div className=\"w-4 h-4 border-2 border-slate-900 border-t-transparent rounded-full animate-spin\"></div>\r\n//                     <span>Authenticating...</span>\r\n//                   </div>\r\n//                 ) : (\r\n//                   \"Secure Sign In\"\r\n//                 )}\r\n//               </motion.button>\r\n//             </form>\r\n\r\n//             {/* Security Notice */}\r\n//             <div className=\"mt-6 p-4 bg-blue-500/10 border border-blue-500/20 rounded-xl\">\r\n//               <div className=\"flex items-start space-x-3\">\r\n//                 <FiShield className=\"w-4 h-4 text-blue-400 mt-0.5 flex-shrink-0\" />\r\n//                 <div>\r\n//                   <p className=\"text-blue-400 text-sm font-medium\">Enhanced Security</p>\r\n//                   <p className=\"text-slate-400 text-xs mt-1\">\r\n//                     This portal is protected with advanced security measures including input validation and rate limiting.\r\n//                   </p>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n\r\n//             {/* Attempts Counter (for demo) */}\r\n//             {attempts > 0 && (\r\n//               <div className=\"mt-4 text-center\">\r\n//                 <p className=\"text-slate-500 text-xs\">\r\n//                   Attempts: {attempts}/3\r\n//                 </p>\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n\r\n//           {/* Back to Home Link */}\r\n//           <motion.div\r\n//             initial={{ opacity: 0 }}\r\n//             animate={{ opacity: 1 }}\r\n//             transition={{ delay: 0.3 }}\r\n//             className=\"text-center mt-6\"\r\n//           >\r\n//             <a\r\n//               href=\"/\"\r\n//               className=\"text-slate-400 hover:text-white text-sm transition-colors\"\r\n//             >\r\n//               ← Back to Homepage\r\n//             </a>\r\n//           </motion.div>\r\n//         </motion.div>\r\n//       </div>\r\n\r\n//       <Footer />\r\n//     </main>\r\n//   );\r\n// }\r\n\r\n"],"names":[],"mappings":"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","debugId":null}}]
}