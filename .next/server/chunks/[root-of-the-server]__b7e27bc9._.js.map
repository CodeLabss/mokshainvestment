{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Tarak/Desktop/mokshainvestment/mokshainvestment/app/api/login/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { serialize } from \"cookie\";\r\n\r\nexport async function POST(req: Request) {\r\n  const { email, password } = await req.json();\r\n\r\n  if (\r\n    email === process.env.ADMIN_EMAIL &&\r\n    password === process.env.ADMIN_PASSWORD\r\n  ) {\r\n    const token = jwt.sign(\r\n      { email },\r\n      process.env.JWT_SECRET as string,\r\n      { expiresIn: \"1d\" }\r\n    );\r\n\r\n    const cookie = serialize(\"admin_token\", token, {\r\n      httpOnly: true,\r\n      secure: process.env.NODE_ENV === \"production\",\r\n      maxAge: 60 * 60 * 24,\r\n      path: \"/\",\r\n    });\r\n\r\n    return new NextResponse(JSON.stringify({ success: true }), {\r\n      status: 200,\r\n      headers: { \"Set-Cookie\": cookie },\r\n    });\r\n  }\r\n\r\n  return NextResponse.json(\r\n    { success: false, message: \"Invalid credentials\" },\r\n    { status: 401 }\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEO,eAAe,KAAK,GAAY;IACrC,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,MAAM,IAAI,IAAI;IAE1C,IACE,UAAU,QAAQ,GAAG,CAAC,WAAW,IACjC,aAAa,QAAQ,GAAG,CAAC,cAAc,EACvC;QACA,MAAM,QAAQ,sKAAG,CAAC,IAAI,CACpB;YAAE;QAAM,GACR,QAAQ,GAAG,CAAC,UAAU,EACtB;YAAE,WAAW;QAAK;QAGpB,MAAM,SAAS,IAAA,0KAAS,EAAC,eAAe,OAAO;YAC7C,UAAU;YACV,QAAQ,oDAAyB;YACjC,QAAQ,KAAK,KAAK;YAClB,MAAM;QACR;QAEA,OAAO,IAAI,oKAAY,CAAC,KAAK,SAAS,CAAC;YAAE,SAAS;QAAK,IAAI;YACzD,QAAQ;YACR,SAAS;gBAAE,cAAc;YAAO;QAClC;IACF;IAEA,OAAO,oKAAY,CAAC,IAAI,CACtB;QAAE,SAAS;QAAO,SAAS;IAAsB,GACjD;QAAE,QAAQ;IAAI;AAElB","debugId":null}}]
}