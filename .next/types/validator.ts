// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/dist/lib/metadata/types/metadata-interface.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../app/about/page.tsx
{
  const handler = {} as typeof import("../../app/about/page.js")
  handler satisfies AppPageConfig<"/about">
}

// Validate ../../app/admin/login/page.tsx
{
  const handler = {} as typeof import("../../app/admin/login/page.js")
  handler satisfies AppPageConfig<"/admin/login">
}

// Validate ../../app/admin/page.tsx
{
  const handler = {} as typeof import("../../app/admin/page.js")
  handler satisfies AppPageConfig<"/admin">
}

// Validate ../../app/contact/page.tsx
{
  const handler = {} as typeof import("../../app/contact/page.js")
  handler satisfies AppPageConfig<"/contact">
}

// Validate ../../app/page.tsx
{
  const handler = {} as typeof import("../../app/page.js")
  handler satisfies AppPageConfig<"/">
}

// Validate ../../app/services/bonds/page.tsx
{
  const handler = {} as typeof import("../../app/services/bonds/page.js")
  handler satisfies AppPageConfig<"/services/bonds">
}

// Validate ../../app/services/digital-gold/page.tsx
{
  const handler = {} as typeof import("../../app/services/digital-gold/page.js")
  handler satisfies AppPageConfig<"/services/digital-gold">
}

// Validate ../../app/services/financial-planning/page.tsx
{
  const handler = {} as typeof import("../../app/services/financial-planning/page.js")
  handler satisfies AppPageConfig<"/services/financial-planning">
}

// Validate ../../app/services/insurance/page.tsx
{
  const handler = {} as typeof import("../../app/services/insurance/page.js")
  handler satisfies AppPageConfig<"/services/insurance">
}

// Validate ../../app/services/loan/page.tsx
{
  const handler = {} as typeof import("../../app/services/loan/page.js")
  handler satisfies AppPageConfig<"/services/loan">
}

// Validate ../../app/services/mutual-funds-loan/page.tsx
{
  const handler = {} as typeof import("../../app/services/mutual-funds-loan/page.js")
  handler satisfies AppPageConfig<"/services/mutual-funds-loan">
}

// Validate ../../app/services/mutual-funds/page.tsx
{
  const handler = {} as typeof import("../../app/services/mutual-funds/page.js")
  handler satisfies AppPageConfig<"/services/mutual-funds">
}

// Validate ../../app/services/nfo/page.tsx
{
  const handler = {} as typeof import("../../app/services/nfo/page.js")
  handler satisfies AppPageConfig<"/services/nfo">
}

// Validate ../../app/services/page.tsx
{
  const handler = {} as typeof import("../../app/services/page.js")
  handler satisfies AppPageConfig<"/services">
}

// Validate ../../app/services/sif/page.tsx
{
  const handler = {} as typeof import("../../app/services/sif/page.js")
  handler satisfies AppPageConfig<"/services/sif">
}

// Validate ../../app/api/admin/content/route.ts
{
  const handler = {} as typeof import("../../app/api/admin/content/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/content">
}

// Validate ../../app/api/admin/leads/route.ts
{
  const handler = {} as typeof import("../../app/api/admin/leads/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/leads">
}

// Validate ../../app/api/admin/records/route.ts
{
  const handler = {} as typeof import("../../app/api/admin/records/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/records">
}

// Validate ../../app/api/admin/upload/route.ts
{
  const handler = {} as typeof import("../../app/api/admin/upload/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/upload">
}





// Validate ../../app/admin/layout.tsx
{
  const handler = {} as typeof import("../../app/admin/layout.js")
  handler satisfies LayoutConfig<"/admin">
}

// Validate ../../app/layout.tsx
{
  const handler = {} as typeof import("../../app/layout.js")
  handler satisfies LayoutConfig<"/">
}
